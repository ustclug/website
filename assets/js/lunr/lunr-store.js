var store = [{
"title": "2010 年自由软件日（合肥站）",
"excerpt":"2010 年 9 月 18 日在中国科大西区 3112 教室，中国科学技术大学 Linux User Group(USTC@LUG) 组织了以“人人为我，我为人人”为主题的自由软件日活动，本次活动得到了龙芯梦兰、龙芯俱乐部、中标软件、中科红旗、中国开源软件推进联盟等公司、开源社区，以及合肥工业大学，安徽大学等兄弟院校的大力支持。100 多名中国科大、安徽大学、合肥工业大学等高校的在校学生及校友以及合肥地区开源爱好者参加了本次活动。      活动由 LUG 协会现任会长王鹏主持，他首先对自由软件日合肥站的活动流程以及科大 LUG、合肥 LUG 的情况做了具体介绍。在 UBUNTU 创始人给中国开源爱好者的视频播放中，2010 年自由软件日合肥站的活动正式开幕了。      科大网络中心的张焕杰老师首先为大家带来了《Linux 在科大校园网络建设中的应用》的专题报告。张焕杰老师是科大 92 级计算系学生，后来留校在网络信息中心任职，主要工作之一是负责管理科大校园网，他也是国内当年有名的中科大 Linux 三剑客之一。张老师精彩的报告之后开始了休息以及游戏互动环节，在回答了组织方准备的关于自由软件和 Linux 的小问题后，同学们领取了丰厚的奖品。在这中间还穿插了中科红旗 Qomo1.0 社区版发布，中标软件体验有奖征文活动启示等环节，活动中气氛热烈。   休息之后是我们的自由主题演讲活动，一些同学做了开源软件使用相关的技术分享报告，同学们就一些常见问题进行了互动交流。   主题演讲活动之后，进行了现场短信投票，赵希明同学题为《Linux 下的日常工作和娱乐》的报告当选为当天最受欢迎的自由主题演讲。之后进行了抽奖环节，若干名参与者成为了当天的幸运观众，并获得了收音机，小玩具等奖品。活动从下午 2:30 一直持续到下午 6:00. 会后举行了 Linux User Dinner(LUD), 在 LUD 中，LUG 的志愿者们就我校 PXE 系统今后的发展，以及结合我校网络环境将要开发的项目进行了讨论与规划。                       ","categories": ["LUG 活动"],
"tags": ["USTC_LUG","SFD"],
"url": "/news/2010/09/2010-software-freedom-day/",
"teaser": null
},{
"title": "2010 年 LUG 服务器维护计划研讨会",
"excerpt":"2010 年 10 月 15 日晚上，LUG 在科大西区图书馆组织了服务器维护小组第一次例会，会议由 LUG 协会现任副会长张成同学主持，集中讨论了发展现有网络服务的计划。20 余位 LUG 志愿者参加了本次会议。      张成首先介绍了现在学校 linux 用户协会服务器现状，包括 debian,oss,pxe,freeshell,lug.ustc 等服务器的配置、历史介绍等。然后张成详细介绍了本学期服务器维护小组的工作计划，包括 oss/debian 系统和服务的更新以及 pxe 服务的改造构想。      活动计划介绍完之后，大家讨论了活动计划的具体开展方案，各位志愿者根据自己的兴趣爱好、以及服务器维护工作量大小等因素选择加入各个服务器的维护小组。各小组由现在的维护者担任组长，负责组织培训，活动通知等工作。最后，张成同学做了 pxe 网络服务的专题讲座。pxe 维护小组的同学以及其他感兴趣的同学认真听取了本次讲座。      本次活动从 19:00 持续到 22:30，会议中大家进行了热烈讨论，积极要求参与到服务器的各项维护工作中，为本学年服务器维护工作的开展打下了一个良好的开端。会后部分志愿者还到活动室对将来需要用到的测试服务器等进行了实地考察。  ","categories": ["LUG 会议"],
"tags": ["PXE","LUG","Meeting"],
"url": "/news/2010/10/2010-lug-server-dev-meeting/",
"teaser": null
},{
"title": "2010 年 4 月 Linux Install Party",
"excerpt":"   Linux Install Party 是中国科学技术大学 Linux 用户协会一年一度举办的活动，主旨在于推广和安装 Linux，宣传和鼓励开源和自由软件精神。本次 Linux Install Party 主题是“草根低碳”。“草根”反映 Linux 目前已经逐渐平民化的特征，人们往往以为 Linux 是一个很高深的东西，这次 party 就是要把 Linux 带到同学们的身边。“低碳”反映了 Linux 创新的安装方式，以往安装 Linux 需要刻录光盘，费时费力不环保，这次 party 将宣传 USB 安装和网络安装的方法。本次活动可以让同学们亲身“无痛”体验到 Linux，同时获得 Linux 的相关知识，并在安装 Linux 环节有专人指导。   由于活动之前通过海报、横幅、bbs 进站画面等多种途径的宣传，再加上Mozilla 中国、中标软件等公司以及中国开源软件推进联盟的鼎力支持，以及校学生广告艺术协会等兄弟协会和合肥工业大学等兄弟院校同学的大力帮助，本次活动于 2010 年 11 月 21 日在 3121 教室成功举办，现场 200 名左右的同学和校友以及开软件软爱好者参加了活动。   本次活动由顾昊同学主持。在活动中，科大计算机系本科的张昊翀同学首先给大家详细介绍了 Linux 安装的相关知识，包括发行版的选择和如何分区。另外他还向大家介绍了 grub 的一些知识，例如如何设置默认启动项，如何修复 grub 以及如何删除 grub 并修复 windows 启动项。   紧跟着是趣味问答环节，该环节送出了 Mozilla 中国、中标软件等公司以及中国开源软件推进联盟赞助的礼物。该环节问了一些很有趣的问题，例如“列举 5 个以上 Linux 发行版”、“列举 5 个以上窗口管理器”、“一块硬盘最多能有几个主分区，为什么？”等等问题。同学们回答踊跃，现场气氛很热烈。   接着科大计算机系研究生张成同学给大家介绍并演示了 PXE 系统。张成同学现场显示了 knoppix、中标普华、ubuntu、mint 等操作系统，介绍了如何通过 pxe 安装 linux，并展望了通过 pxe 建立全校无盘系统的愿景。   之后由祝元宠同学给大家带来了各个 Linux 发行版的简要介绍。接着便是活动的安装环节，有二十多位同学携带了笔记本电脑现场安装了 Linux。同学们十分积极，气氛很热烈，活动从下午两点半持续到了五点半。之后有十几名热心志愿者参加了 LUD（Linux User Dinner）聚餐，就 Linux 社区讨论了许多问题和展望，增进了技术和感情。   活动结束后一周，很多同学发帖询问 Linux 安装的相关问题，在 bbs 的 Linux 版掀起了一个安装 Linux 的小高潮。   以下是活动现场的照片：                          ","categories": ["LUG 活动"],
"tags": ["Linux User Party","Linux Install Party","PXE"],
"url": "/news/2010/12/2010-04-linux-install-party/",
"teaser": null
},{
"title": "mirrors.ustc.edu.cn 开张啦！",
"excerpt":"经过大半周的迁移和新脚本的测试，现在 mirrors.ustc.edu.cn 已经基本稳定了。   新机器的域名：   IPv4/v6: mirrors.ustc.edu.cn  （能解析出教育网/电信/v6地址） v4only:  mirrors4.ustc.edu.cn （能解析出教育网/电信地址） v6only:  mirrors6.ustc.edu.cn   有些地方（比如我测试的合肥长宽），DNS 会解析出电信地址，但使用教育网地址访问更快，这时可以通过修改 hosts 指定强制使用教育网地址访问。   教育网ip：202.38.95.110 电  信ip：202.141.160.110 v6  地址：2001:da8:d800:95::110   支持的访问方式：   http/ftp/rsync   提供的服务：   原 debian.ustc.edu.cn 和 oss.ustc.edu.cn 提供的镜像服务基本上都迁移过来了，除 fedora/ubuntu-partner 外。fedora 正在进行同步，ubuntu-partner 也会在近几天同步过来。   原 centos.ustc.edu.cn 提供的 centos/epel/linux-2.6.git 也已经迁移过来了。   需要注意的修改：   debian.ustc.edu.cn 和 oss.ustc.edu.cn 两个域名已经设置为 mirrors.ustc.edu.cn 的别名，大多数镜像的相对地址没有改变，所以大家基本上不需要对原有设置进行修改（如 sources.list），可以继续正常使用。但是以下镜像用户请注意：      gentoo 用户，原 portage 地址：rsync://oss.ustc.edu.cn/pub/gentoo-portage  已经调整为：rsync://mirrors.ustc.edu.cn/gentoo-portage   cygwin 用户，原 cygwin 源地址： http://oss.ustc.edu.cn/cygwin/cygwin/ 已经调整为： http://mirrors.ustc.edu.cn/cygwin/   原 ubuntu cdimage 地址： http://debian.ustc.edu.cn/ubuntu-cd 已经调整为： http://mirrors.ustc.edu.cn/ubuntu-releases   原 fedora linux 地址： http://oss.ustc.edu.cn/fedora/ 已经调整为： http://mirrors.ustc.edu.cn/fedora/linux/   centos.ustc 用户，请修改自己的 CentOS-Base.repo 和 epel.repo，将文件中的域名 centos.ustc.edu.cn  修改为  mirrors.ustc.edu.cn   linux-2.6.git 用户，请修改 origin 地址：git remote set-url origin git://mirrors.ustc.edu.cn/linux-2.6.git   使用帮助：   大多数镜像的使用帮助已经完成，大家在对应的目录下，如： http://mirrors.ustc.edu.cn/ubuntu/ 点击页面上方（标题下方）的使用说明链接，可以打开其对应的帮助信息，如如何设置 sources.list 文件。或者也可以直接打开 http://mirrors.ustc.edu.cn/mirror-help/.html 在首页上点击使用说明链接，点击其中对应的源的链接，也可以跳转查看相应的帮助。   由于人手不够，有些源还没有使用帮助信息，也欢迎大家帮忙写了，发送给我们。   状态监控：   在首页点击页面上方的同步状态链接，可以查看当前各镜像的同步状态，包括成功与否/上游源/镜像体积等。大家如果知道更好（更新、更快）的上游源，请联系我们。   如果同步出现故障，服务器的管理员会收到邮件通知，以尽快处理，所以大家看到状态监控页面中有显示同步失败的条目时，无需联系我们。   如果同步状态上显示同步正常，但实际使用过程中发现镜像有问题，请联系我们。   联系方式：   我们的邮箱：mirrors@ustc.edu.cn   鸣谢：   感谢中国科学技术大学、网络信息中心的支持，特别感谢 jameszhang 老师为我们提供服务器！  ","categories": ["LUG 活动"],
"tags": ["LUG","mirrors.ustc.edu.cn"],
"url": "/news/2011/04/mirrors-ustc-edu-cn-comes/",
"teaser": null
},{
"title": "Color my desktop,Color my life!",
"excerpt":"4 月 6 日，已经连续多次跳票的 Gnome 3 终于在大家的翘首企盼中发布了，为了庆祝这件开源社区令人振奋的盛事。中国科大 LUG(Linux User Group) 特联合北京 GUG(Gnome User Group) 以及合肥 LUG，联合举办 Linux 技术沙龙暨 Gnome 3 发布活动。本次活动获得了中标软件公司的大力支持，并同时很荣幸的邀请到了北京 Gnome 用户组的李震宁主席参加。      Linux 技术沙龙是中国科学技术大学 Linux 用户协会定期举办的活动，主旨在于推广 Linux 技术，宣传和鼓励开源和自由软件精神。本次 Linux 技术沙龙主题是“探秘 Gnome 3.0”。不了解 Linux 的人往 往以为 Linux 是一个很古板的东西，图形化界面很不美观，难以摆脱粗糙风格。“Gnome”是一种 Linux 一种桌面环境，以往安装 Linux 的 Gnome1.0 与 Gnome2.0 环境界面，不支持多点触控，操作较为费力，对于习惯 windows 的用户来说，最不习惯的就是 Gnome 的单点操作。这次技术沙龙就是要把将宣传千呼万唤始出来的“Gnome 3.0”，也将 Gnome 3.0 带到同学们的身边。本次活动可以让同学们亲身体验到 Gnome 3.0 的华丽特效与便捷操作，同时获得 Linux 与 Gnome 的相关知识。   由于活动之前通过海报、横幅、bbs 进站画面等多种途径的宣传，再加上中标软件公司的鼎力支持，以及合肥工业大学等兄弟院校同学的大力帮助，本次活动于 2011 年 4 月 16 日在 3124 教室成功举办，现场 200 名左右的同学和校友以及开软件软爱好者参加了活动。   本次活动由 LUG@USTC 王鹏会长同学主持。在活动中，北京 GUG（Gnome User Group）主席李震宁先生首先给大家详细介绍了 Gnome 环境的相关特性，包括 Gnome 的诞生经过。另外他还向大家介绍了 Gnome 的一些知识，紧跟着是趣味问答环节，送出中标软件公司赞助的礼物。该环节问了一些很有趣的问题，例如“为什么 Gnome 的图标为脚印？”、“列举 5 个以上窗口管理器？”、“什么是 GTK？”等等问题。同学们回答踊跃，现场气氛很热烈，回答的同学就能获取一份小礼品。   LUG 的祝元宠同学给大家介绍并演示了 Gnome 3.0 环境。祝元宠同学现场演示了 linux 在 Gnome 环境下的新特性，如无限度多窗口功能，绚丽切换窗口功能，多点触控功能等等新特性。同学们均深深体会到了 Gnome 3.0 令人震撼的华丽和亲和。   科大计算机系研究生，LUG CTO 张成同学绍了现在学校 linux 用户协会服务器现状，包括科大 linux 用户协会的创办历史，以及学校 LUG 资金来源，debian, oss, pxe, freeshell, lug.ustc 等服务器的配置。然后张成详细介绍了本学期服务器维护小组的工作计划，包括 oss/debian 系统和服务的更新以及 pxe 服务的改造构想，并展望了通过 pxe 建立全校无盘系统的愿景。   接下来赵希明同学为大家介绍了 Linux 新手在学习中应该注意的问题，赵希明用风趣幽默的介绍指出了 newbie 应该遵守的社区礼仪以及在出现问题的时候应该怎样获得帮助。   活动最后由北京 GUG 主席李震宁先生与王鹏同学给大家进行了抽奖环节，若干名参与者成为了当天的幸运观众，并获得了收音机、文化衫、小玩具等奖品。整个技术沙龙中同学们十分积极，气氛很热烈，活动从下午两点半持续到了五点半。之后有十几名热心志愿者参加了 LUD（Linux User Dinner）聚餐，就 Linux 社区讨论了许多问题和展望，增进了技术和感情。   在活动后的 LUD(Linux User Dinner) 上同学们对北京 GUG 主席的到来，以及中标公司长期以来对 LUG@USTC 的支持表示感谢，李主席与志愿者们共进晚餐。餐会上商讨并同时宣布 HFGUG(Hefei Gnome User Group)(筹) 成立，王鹏担任筹委会主任。HFGUG(筹) 的成立必将为开源软件特别是 Gnome 桌面在合肥乃至全国的推广做出自己的贡献。   下面是活动现场的一些照片：                          ","categories": ["LUG 活动"],
"tags": ["gnome3","Linux User Party"],
"url": "/news/2011/04/gnome3-launch-party/",
"teaser": null
},{
"title": "Fwd: 读书笔记：关于维护服务器的一些技巧",
"excerpt":"寒假读了三本书《LINUX SERVER HACKS 卷二》《实战 Nginx：取代 Apache 的高性能 Web 服务器》《Linux 服务器性能调整》，简单地了解了些 linux 服务器维护和管理上的技巧。现在就分别简要谈谈我在读这三本书时的感受吧。   一：《LINUX SERVER HACKS 卷二》   首先，这不是一本工具书，而是一本经验集。书内都是很巧妙的一节一节的 linux 服务器维护技巧，主要目的是提高维护 linux 是的速度和鲁棒性。说实话，我不是很习惯这种模式的书，因为如果带着问题去读这本书，读完后还是问题，而本不是关心的部分，读完后也很快就忘了。   简言之，我懂这本书里得到的信息有：   一：linux 非常灵活，特别是结合 NFS 以及远程终端，可以做非常有想象力的事情。   二：在复杂的连线环境中记得使用 screen   三：脚本可以做几乎任何维护性质的事，而且事情的解决方案往往比你想得简单。   四：注意 uid，gid 重用可能带来的问题   五：Google 万岁   二：《Linux 服务器性能调整》   这本书翻译的不是很好，文法晦涩，而且介绍的东西偏深，很多是探讨内核级的优化。感觉看得不是很明白，简单写写吧。   一：关于服务器文件系统的选择：ReiserFS 鲁棒性很好，而且对小文件有最佳性能。XFS 针对大型文件有最佳性能。   二：一块硬盘上读取外侧磁道的速度要快于内侧磁道，所以分区是可以考虑这点将序号小的分区分配给经常读写的目录。譬如分区时第一个为 swap，第二个/var，再者/usr，最后才是根和/home   三：mount 文件系统时带上 noatime 可以提高一些性能。   四：文件系统在创建的时候可以调教一些参数优化性能   五：各类监控/tweak 工具：hdparam, iostats, top, vmstat   三：《实战 Nginx：取代 Apache 的高性能 Web 服务器》   这本书灌水的内容比较多，内容实际上也就是作者博客上的一些应用技巧的整理，可以总结的不多，因为按部就班的做就行了。   从书中看，nginx 的性能优于 apache，而且在反向代理方面特别有优势，这是它的亮点。Nginx 虽然支持 rewrite，自我感觉还是蛮好用的，但是不兼容 apache 的.htaccess，使用时需注意。   Nginx 的组件高度模块化，可定制性比较强，具体可在使用时疯狂 google。   对于使用 php+mysql 的场合，注意 php 使用 fastcgi 的方式启动，性能貌似比传统 cgi 要高不少，估计和 apache 的 module 差不多   书中没有提到什么值得一提的优化，具体实践的时候多 google 好了。对于硬件环境不好的服务器，减少 nginx 工作进程，打开 gzip 压缩和缓存，为 php 安装加速器并为低配置环境优化，数据库（例如 mysql）在配置时减少内存占用上限。选择 myisam 而不是 innodb。   简言之，这本书最大的作用就是让 nginx 变得平易近人大家都可尝试了。  ","categories": ["读书笔记"],
"tags": ["nginx","linux server","php","mysql","reading notes"],
"url": "/news/2011/04/2011-winter-reading-notes/",
"teaser": null
},{
"title": "Debian 中国官方镜像：ftp.cn.debian.org",
"excerpt":"祝贺 mirrors.ustc.edu.cn 成为 Debian 中国官方镜像！此前，中国大陆 debian 镜像与主镜像延迟达 24 小时以上，现在，ftp.cn.debian.org 直接从 syncproxy.wna.debian.org 接受推送更新，其延迟降到 6 小时以内。此外，另一国内主力镜像 anheng.com 从 ftp.cn.debian.org 接受推送，延迟也在 10 小时以内。mirrors.sohu.com 亦开始从 ftp.cn.debian.org 同步。   Debian 用户使用帮助   使用当前稳定版 Debian Squeeze 的用户，请使用以下内容替换/etc/apt/sources.list   deb http://ftp.cn.debian.org/debian squeeze main deb-src http://ftp.cn.debian.org/debian squeeze main deb http://ftp.cn.debian.org/debian squeeze-updates main deb-src http://ftp.cn.debian.org/debian squeeze-updates main deb http://mirrors.ustc.edu.cn/debian-security/ squeeze/updates main deb-src http://mirrors.ustc.edu.cn/debian-security/ squeeze/updates main   其他版本用户请参考Debian 使用帮助。   镜像同步帮助   Debian Archive   请使用官方推荐的ftpsync脚本进行同步，脚本中有很详细的注释说明。如果有问题，请联系我们。   Debian CD   如果您已经同步了 Debain Archive，那么推荐您使用jigdo来同步，这可以节省很多流量和时间，平均每个 CD 的 ISO 仅需不到 1 分钟。这里有使用说明，同步脚本在这里可以下载到。   推送同步   为了尽可能减少与 Debian 主服务器的延迟，推荐您接受我们的推送。每次 ftp.cn.debian.org 同步完成后，会主动告知下游源，激活下游源的同步脚本。要接受推送同步，请下载我们的 pubkey，并保存到运行同步脚本的用户的~/.ssh/authorized_keys中：   wget -O- http://mirrors.ustc.edu.cn/~stephen/debianpush.pub &gt;&gt; ~/.ssh/authorized_keys   然后发邮件告知您的服务器地址、ssh 端口以及用户。   联系方式   如果您对我们的服务器有任何建议或者意见，以及使用中碰到任何问题，都可以联系我们，我们的邮箱是：mirrors AT ustc.edu.cn.  ","categories": ["LUG 活动"],
"tags": ["mirrors.ustc.edu.cn","debian","ftp.cn.debian.org"],
"url": "/news/2011/05/ftp-cn-debian-org-comes/",
"teaser": null
},{
"title": "Linux 版版聚",
"excerpt":"                                                                                            ","categories": ["LUG 活动"],
"tags": ["版聚","BBS"],
"url": "/news/2011/05/linux-e7-89-88-e7-89-88-e8-81-9a/",
"teaser": null
},{
"title": "定制 PXE Live 系统",
"excerpt":"现在已经有上百中 Linux 发行版，很多发行版都提供了通过 PXE 启动的 Live 系统。在科大校园网网络启动服务上，我们部署了很多发行版的 Live 系统，例如 Ubuntu、Debian、Deepin、BackTrack、Knoppix 等，既给一些需要维护系统的同学带来了极大的便利，也使得那些未接触过 Linux 的同学可以“无痛”体验各发行版，并决定哪一款发行版更符合自己的口味。然而，随着校园网的发展，大家的需求也变得更加多样化。各发行版的 Linux 系统已经不能满足大家的需求，因此我们需要自己定制一些系统，以满足在学校中各个场合的需求。   发行版 Live 系统的限制   发行版提供的 Live 系统具有这些限制：      数据易失。Live 系统启动后所有的修改都保存在内存中，重启系统后所有修改都丢失了。   预装软件少。Live 系统只预装了很少的软件，不足以日常办公的需求，即使作为体验系统也偏少   各使用场合的需求   目前在校园网中，大家对系统的需求有这些：      体验系统。对于 Linux 新手，要决定是否使用一个系统，一次体验是不够的，需要长期的使用，因此需要能够保存一些对系统的修改，如新装的软件、修改的配置文件、一些用户数据   公共机房的系统，需要安装所有常用的软件   个人移动办公使用的系统，需要能够将一些个人数据存放在网络上   因此，我们希望能够定自己定制 Live 系统，以满足各使用场合的需求。   使用 Debian Live 定制系统   在各发行版中，Debian 提供了定制 Live 系统的工具，Debian Live。Debian Live 的文档中有非常详细的介绍。简化后的步骤为：   sudo apt-get install live-build mkdir live-system &amp;&amp; cd live-system lb config sudo lb build   其中，在 config 前可以自己修改 config 脚本来对 Live 系统的一些属性进行定制，例如 Live 的类型（ISO/PXE/HDD 等）、Live 系统使用的源、安装的软件等。在 build 系统之后也可以chroot到目标系统中进行进一步的定制。这篇文章中有一个稍微详细的定制步骤。使用 live build 可以定制 debian，也可以定制 ubuntu。   然而，这个方法仍然比较麻烦，定制者需要完全从头定制一个系统，并且不能复用一些其他人已经定制过的系统。因此我们推荐选择一个最接近使用需求的系统，在这个系统的基础之上进行进一步定制，而定制步骤也会简洁很多。   基于 Linux Deepin 定制 Live 系统   通过观察容易发现，Ubuntu, Deepin, BackTrack 等 Live 系统都使用相似的方法进行封装，因此基于这些系统进行定制的方法基本相同。而 Deepin 的中国本地化做的最好，也最接近校园网中的各种需求，因此我们选择基于该系统进行定制。   首先观察一下这个 Live 系统的结构：   $ ls -R .: casper  DeepWin.exe  isolinux  md5sum.txt  preseed  README.diskdefines  ./casper: filesystem.manifest  filesystem.manifest-desktop  filesystem.size  filesystem.squashfs  initrd.lz  vmlinuz  ./isolinux: back.jpg  boot.cat  deepin  gfxboot.cfg  isolinux.bin  isolinux.cfg  menu.cfg  stdmenu.cfg  text.cfg  ./preseed: deepin.seed   其中最重要的三个文件是位于casper目录下的vmlinuz、initrd.lz、filesystem.squashfs。vmlinuz和initrd.lz分别是启动是使用的内核和initrd文件，在系统启动之后，会通过 NFS 挂载位于服务器上的这个 ISO 的根目录，然后挂载filesystem.squashfs，接着使用aufs将filesystem.squashfs一段内存挂载为根目录，这段内存空间做为aufs的写分支。   由此可知，我们要定制系统，只需要对这个 filesystem.squashfs 修改并重新打包即可。下面就开始对这个文件修改并打包。   首先挂载这个文件系统，复制一份，并chroot到这个系统环境中：   sudo mount -o loop -t squashfs filesystem.squashfs /mnt/ sudo cp -ar /mnt/ ~/filesystem/ sudo umount /mnt/ sudo mount -o bind /dev/ ~/filesystem/dev/ sudo mount -t proc procfs ~/filesystem/proc/ sudo cp /etc/resolv.conf ~/filesystem/etc/ sudo chroot ~/filesystem/ /bin/bash   此时，我们就已经在这个系统中了，我们可以按照我们的需求对系统进行任意的定制了。注意，直到文中提到退出chroot环境前，所有的命令都是在chroot中完成的。我们在科大，当然首先将 sources.list 修改为使用科大的源了：   sed -i 's/cn.archive.ubuntu.com/debian.ustc.edu.cn/g' /etc/apt/sources.list sed -i 's#packages.deepin.org#debian.ustc.edu.cn/deepin#g' /etc/apt/sources.list.d/deepin.list sed -i 's#packages.linuxmint.com#debian.ustc.edu.cn/linuxmint#g' mint.list apt-get update   这篇文章里我们仅做演示用，所以不打算进行太多的定制，仅演示安装一个新的软件：   apt-get install vim   OK，定制完成啦！我们来重新封装文件系统。首先，退出chroot环境，并且卸载proc和dev文件系统。   exit sudo umount ~/filesystem/proc/ sudo umount ~/filesystem/dev/   然后封装 squashfs 文件系统：   mv filesystem.squashfs old-filesystem.squashfs sudo mksquashfs/ filesystem.squashfs   将新生成的filesystem.squashfs放到原来的位置，并将整个目录通过 NFS 导出。   这篇文章中将不介绍如何通过 PXE 启动这个系统，其方法与 Ubuntu 相同，网上有详细的教程。下一篇文章中，我们将会介绍如何进一步定制这个系统，在开机时，自动挂载科大提供给每个学生的 300M FTP 空间为 HOME 目录，文章中会稍微详细的介绍如何设置 PXE 服务器启动该系统。尽请期待！  ","categories": ["经验分享","USTC 网络启动服务"],
"tags": ["PXE","deepin","live"],
"url": "/news/2011/05/customize-pxe-live-system/",
"teaser": null
},{
"title": "Deepin Linux DAU '2011 大会花絮",
"excerpt":"2011 年 5 月 28 日，我有幸受邀代表中科大 LUG 前往武汉参加了 Deepin Linux 开发者和用户大会。此行遇见了很多开源界的知名牛人，收获颇多。由于许多 Linux 站点都已经对此次会议有十分详细的报导，因此我就不再赘述具体的会议过程，而是更多的介绍些花絮吧。   一些花絮   这次大会主办方是 Deepin 研发团队，主办方接客非常热情周到。由于火车时刻不是很凑巧，当天赶去无法赶上会议，因此提前一天晚上便到了，当天晚上我被安排跟 Hiweed 住在一个房间。晚上，刘总（Deepin）、欣姐还有 Hiweed 与我聊了很多，主要聊了科大 LUG 在高校推广方面的努力和计划，以及我个人的一些想法，另外刘总也跟我聊了 Deepin 的发展计划。聊天开始时，Deepin 说我们的域名可能有问题了，结果晚上他们刚回去，就发现 deepin 的域名都无法解析了……现在新的域名已经生效（http://www.linuxdeepin.net/），网站部分内容还没有完全迁移完成，论坛将从深度的其他内容独立出来，并将在近期上线。   第二天早上，跟 Hiweed 吃早饭的时候，小白（BJGUG 负责人）到了，他吃过简单的早餐，就去一所中学了，与学校的老师讨论学校教育中使用开源软件的事。现在有许多中小学的计算机启蒙教育中都开始用开源软件了，很让人振奋 :-)   去会场的路上，大家在开玩笑。前几天某校长在武大被扔鞋，这次我们请来了比较有争议的袁教授，而且此次会议有很多武大的学生参加，会不会也被扔鞋？要不我们自己安排个人来扔鞋吧，还得安排两拨，互扔，炒作气氛！呵呵，just a joke!   这次会议在君宜王朝大酒店举行，可能前期的沟通不是特别好，在布置会场时碰到了些问题，不过对会议影响不大。最“惊险”的算是那个无线话筒吧，似乎耗电量很大，现场试了一下，就掉了一格电（共三格）了，当时担心会不会讲到一半就没声了。还好，六位嘉宾演讲时，都没出问题，在提问阶段，第二个人开始，话筒就没声了 T.T……   晚上嘉宾自由交流会上，袁教授发完一个长长的言后，就耷拉脑袋了。我和 Hiweed 坐在他旁边，都以为他睡着了，后来有个人讲完话后，袁教授突然接话了！原来他没睡着，就是闭幕养神:-) 袁教授其实很可爱，年纪这么大，依然很有激情。对国内开源事业的发展也很关心，这次大会刚回去，就联系与永中的曹参见面，讨论 Deepin 与永中合作的事，看袁教授最近几天的博文，他对此事一直很上心。   交流会结束后，我们几个年轻人（yanting, Hiweed, Deepin 等）出去吃烧烤，随心所欲的聊天。yanting 和 Hiweed 都是很活跃、很有想法、很会闯的人，我的性格跟他们很像，因此听他们讲故事的时候，共鸣很强，感触很深。Deepin 跟这它的团队一样很年轻，我相信也同样会很有想法、很有活力！   第二天我受邀去武大参观了他们自强网的工作室和机房。同时也交流了一下两校在推广 Linux 时的优势和障碍。武大的学生课余时间相对较多，自强网完全由学生来维护，但他们的资源（网络带宽、服务器配置等）有限。科大有着很好的 Linux 使用的环境，网络条件也非常好，但是大多数学生的课余时间较少。   下午赶去火车站时，由于宾馆在市中心最堵的路段，半天都没打到的，正愁会误点赶不到火车站时，一个小“摩的”（加引号是因为不是摩托车，而是电瓶车，但我想不出用什么词好了 :-P）来了，不到 20 分钟就赶到火车站了。“摩的”小哥自我介绍说是武大食堂的，下午没事做，就出来转转，能赚点钱就赚一点，要过日子阿。小哥很热情，收的钱也不多（应该比打的便宜），很开心 :-)   会场照片   这些是会场上的一些照片。（大家能否给我推荐个显示图片的插件？可以显示图片总数和当前图片编号的？）                                                                                                                                                                                                                                                                                          相关报导   以下是一些特邀嘉宾对此次大会的报导：      Linux Deepin 武汉技术交流会后记（Wayback Machine）（笨兔兔）   Linux Deepin 2011 开发者和用户大会实录（驱动之家）   Linux Deepin 2011 开发者和用户大会实录（Wayback Machine）（OwnLinux.cn）   国产 Linux 发行版面临的机遇和挑战（51CTO）   武汉 Deepin DAU 会议见闻（Wayback Machine）（basic coder）  ","categories": ["LUG 活动"],
"tags": ["deepin","Linux","花絮"],
"url": "/news/2011/06/deepin-linux-dau-2011/",
"teaser": null
},{
"title": "中科大 Linux 文化衫开始接受预定啦！",
"excerpt":"1、圆领样式   此次文化衫主题为 Linux 20 周年。正面图案分男版和女版，图案分别如下：   男版： http://staff.ustc.edu.cn/~jhqi/LinuxTee2011/front_1.6.0.png   女版： http://staff.ustc.edu.cn/~jhqi/LinuxTee2011/front_1.6.1.png   背面图案为科大维护的服务器历史，男版女版相同，图案如下：   http://staff.ustc.edu.cn/~jhqi/LinuxTee2011/back_1.1.png   2、翻领样式   由于许多网友要求提供翻领样式，因此今年也提供翻领样式，翻领的正面图案是将圆领的背面图案放在左前胸，将圆领的正面图案放到后背。效果如下图的最后一行：   http://staff.ustc.edu.cn/~jhqi/LinuxTee2011/polo_sample_1.png   3、价格   圆领的价格为：￥ 45   翻领的价格为：￥ 60   需要邮寄的，需要额外支付￥ 20 邮费。   （科大在校师生、校友请到瀚海星云 Linux 版回帖预定，价格有优惠哦！）   前 20 位预定的友人，我们将在邮寄文化衫时附赠一张 GNOME3 体验光盘。   4、预定方式以及支付方式   您可以通过支付宝向我们支付费用。   我们的支付宝帐号为：lug@ustc.edu.cn，支付流程：                  登录支付宝–&gt;“我的支付宝”–&gt;“我的生活助手”–&gt;“我要付款”–&gt;在“对方支付宝账户”里输入lug@ustc.edu.cn即可。在备注中留下您的姓名，并且向lug@ustc.edu.cn发送一封邮件，标题为”预定文化衫–您的姓名”，内容为您选择的版式（男/女       圆领/翻领）、身高、手机号和详细的收货地址，我们将在 24 小时内回复您的邮件，表明我们已经收到您的付款和预定。           6、时间安排   本次预定从发本日志起到 2011 年 6 月 11 日晚 23 时 59 分结束预定。结束预定后，我们立即联系商家开始制作版衫，并争取一周内完成并开始发放，预计 6 月 18 日可以开始发放工作。发放方式到时候再发日志说明。  ","categories": ["LUG 活动"],
"tags": ["BBS"],
"url": "/news/2011/06/linux-tshirt-2011/",
"teaser": null
},{
"title": "Linux Install Party 又来了，就在本周日！",
"excerpt":"Linux Install Party，一个人人都可以参加的 linux 盛会，Let’s Introduce   Perfection.   如果你是新手，在这里，你可以接触到 linux 最新鲜的感觉，了解基础并且好用的   linux 知识，获得他人的帮助，与 linux 进行亲密接触！   如果你是高人，在这里，你可以认识志同道合的朋友，交流 linux 里好玩的技巧和鲜为人   知的秘密，帮助和当年的你一样的初学者，多么有成就感！   Linux Install Party，就在本周日下午 2:00，3112 教室。   Linux User Group   life, love, linux  ","categories": ["LUG 活动"],
"tags": ["Linux Install Party"],
"url": "/news/2011/12/linux-install-party2011/",
"teaser": null
},{
"title": "软件自由日 SFD 2012 合肥站活动（附带网上直播地址）",
"excerpt":"SFD 就是传说中的软件自由日（Software Freedom Day），今年的合肥站庆祝活动将在本周六（9 月 15 日）于中国科学技术大学举办。这是一个推广和宣传自由/开源软件的全球性庆祝活动，合肥是全球 282 个活动举办地之一。   这里有精彩的讲座：   科大 LUG 前 CTO 张成师兄将让我们了解自由软件在企业中的应用原来如此多娇   这里有好玩&amp;有用的软件：   Linux 上有什么好玩的小游戏？   小小浏览器不就是上网吗？能玩出什么名堂？   放音乐、看视频，mplayer 是何方神圣？   如何画函数图像、分析实验数据？   如何使用虚拟机体验不同的 Linux 发行版？   如何用 latex 排版出专业的文章？   开源集成开发环境 Eclipse，听说很强大？   如何使用科大 FTP 和主页空间？   大家一定会问：这么多东西，能讲完吗？我们的形式将不局限于讲座，而是展示 + 体验 :)   现场将有若干展台，专题讲座结束后，大家可以在不同展台之间自由体验、交流，共同体验各种自由软件的魅力。像不像一个自由软件展览会？   这里有给力的奖品：   有 Meego USB Hub、Meego 电脑包、红旗和自由软件日的文化衫、Ubuntu 贴纸……   还有 Linux Deepin 12.06, Qomo 等 Linux 发行版的官方光碟，一共有 80 张，在多功能厅门口发放，先到先得哦~   承办者：中国科学技术大学 Linux 用户协会   时间：    2012 年 9 月 15 日上午 9:30   地点：    中国科学技术大学西区学生活动中心三楼多功能厅（31.839339,117.253636）   网上直播地址：http://www.fengyunzhibo.com/tv/22107_1347540720168.htm        ","categories": ["LUG 活动"],
"tags": ["LUG","USTC_LUG","SFD"],
"url": "/news/2012/09/sfd-2012-hefei-ustc/",
"teaser": null
},{
"title": "科大 LUG Linux User Party 活动成功举行",
"excerpt":"高速发展的互联网改变着人类的生活方式，而基于 Linux 的 Web 技术支撑起了当今互联网的大厦。“Let’s Build – Building the Next-generation Web &amp; Architecture”的大标题投影在东区水上报告厅，2012 年 11 月 24 日下午，科大 LUG 以“Going Online, Going Native”为主题的 Linux User Party 活动举行。Guide to Node.js，Linux 高性能计算集群，iptables 灵活网络配置，LUG Services 项目启动……内容充实的讲座持续了四个小时，从不同角度讲述了 Linux 在 Web Services、科学计算和我们生活中的应用，描绘了 LUG Services 的美丽蓝图。   首先演讲的是《Node.js 开发指南》作者、清华大学开源软件镜像维护者、清华大学学生郭家宝。JavaScript 技术的进化伴随着多家互联网企业的兴衰，Node.js 是目前最流行的将 JavaScript 用于后端的框架。以往 Web 开发常常是前后端在不同的编程语言中重复写同样逻辑的代码，而在 Node.js 中这样的问题得以缓解。   不同于多数后端技术，Node.js 采用了事件驱动的非阻塞编程模型，这使得 Node.js 可以在单线程中达到其他语言中需要多线程才能达到的 CPU 利用率。借助 V8 引擎的执行效率，JavaScript 已经成为最快的脚本语言之一；再加上异步并发的编程模型，用 Node.js 可以实现很高性能的 Web 服务器，尤其适合需要进行“服务器推”的 WebSocket 类应用。   Node.js 强大的性能背后隐藏着编程和调试的困难，例如通过回调函数来进行控制流传递的编程范式。为此，郭家宝发起了开源项目 Continuation.js，通过编译将嵌套的回调函数平面化，简化顺序逻辑在 Node.js 中的实现。   演讲结束后，同学们提出了“现有系统是否应该换用 Node.js”、“为什么现在 Web 开发用的更多是 PHP”、“Node.js 是否对系统资源消耗很多，是否对硬件配置有较高要求”等很多有趣的问题，郭家宝一一作答，希望我们以更开放的心态迎接新技术。每位提问的观众都收到了一份 Ubuntu 的精美礼品。   第二个演讲的是科大超算中心李会民老师。2012 年世界排名前 500 的超级计算机中，运行 Linux 的占 90% 以上，只有一两台运行的是 Windows 系统，Linux 在高性能计算领域占据统治地位。这场讲座带领我们从 Linux 这个自由的集市中寻找到合适的工具，让身边的计算资源发挥作用。   短短的一个小时，李会民老师以较快的语速，全面讲解了高性能计算集群：   各计算节点要共享文件，有 NFS 网络文件系统；   主机账号信息要集中管理，有 NIS 网络信息服务；   集群要快速安装 Linux，以 PXE 网络启动为基础的 kickstart 网络安装工具很实用；   集群之间时间要同步，有 NTP 时间服务器；   集群节点之间要通信，SSH 可以用 key 无密码登录；   要同时管理多台机器，有 pdsh 这个并行 shell 和交互式脚本语言 expect；   要自动化运行复杂任务，有作业调度系统 TORQUE；   要监控系统性能，有集群监控软件 Ganglia；   内网服务器要访问外网，有 iptables。   并行计算的基本原理，MPI 和 OpenMP 编程框架、GPGPU 计算；   还有磁盘配额、编译环境的配置……   接下来又是一个很多人争着举手发言的互动问答环节。针对一台机器能不能部署高性能计算的疑问，李会民老师说，除了 kickstart 网络安装之外，上述工具都可以在单台机器上使用，而且其中涉及的技术在日常 Linux 使用和运维中也是有用的。   利用五分钟的中场休息时间，李喵喵介绍了 Linux Deepin 这个对新手友好的 Linux 发行版，并现场发放 Linux Deepin 赠送的安装光盘。   第三个演讲的是科大 Linux 用户协会 CTO 郭家华同学。   科大网络通是什么原理？同学们好奇地抬起了头，”数据包传送过程“显得不再枯燥了。   想与同桌共享网络通？用 iptables 进行数据包转发；   那么与整个机房共享网络通呢？有网络地址转换（NAT）；   让外网访问内网端口提供的服务，可以用端口映射；   要端口映射到任意计算机，SNAT 和 DNAT 可以配合使用。   特别值得一提的是，演讲所用 slides 中的网络拓扑结构图是用 graphviz 画的，图形清晰明了。   活动的压轴环节是 LUG 网络服务系统介绍与展望。   李喵喵首先介绍了即将发布的 USTC Blog 服务。尽管社会化媒体层出不穷，但博客仍然是信噪比最高的内容发布平台。在博客中，我们可以发表个人心情，可以制作图片展，可以彰显技术经验，可以作为推广媒体，博客的形式永不过时。USTC Blog 作为 LUG 提供的 Wordpress 博客托管服务，与其他博客服务相比，拥有科大域名（blog.ustc.edu.cn）的权威性和高权重，继承了 Wordpress 插件和主题的高度可定制性，还拥有校内服务的稳定性和安全性。随后 USTC Blog 开发团队李博杰同学介绍了跨博客内容整合和沙盒技术两个后续开发方向，演示了 blog 的注册流程和后台操作。   接下来科大 LUG 李博杰同学介绍了 mirrors 升级计划。mirrors 作为国内教育网访问量最大的开源软件镜像，将成为一个开源项目，发展更多周边产品，提高曝光度和用户参与度。Mirrors Maintainer 和 Mirrors Developer 的开发团队结构让在座的同学们感到耳目一新，期待着在 Mirrors Lab 上一起参与开发与测试。Mirrors 还将增加编程语言的镜像，对访问日志进行统计分析得出热度排行榜和热度趋势。   查找和选择软件包一直困扰着新手，KISS 是 LUG Services 的终极目标。有的软件包不在官方源里，科大 LUG 张光宇同学受到 AUR 的启发，发起了 Yet Another Debian User Repository（YADUR）项目。在 YADUR 中上传包，只需注册账号，然后用浏览器或我们的客户端上传软件包；使用 YADUR 源就像用 Ubuntu PPA 一样简单。针对 Debian 打包困难的问题，YADUR 将提供一个打包教程。YADUR 将成为一个开源项目，它本身就是 YADUR 中的第一个软件包。   YADUR 将解决软件包的来源，而 Linux Software Store 将让 Linux 软件包变得不再神秘难寻。软件分类推荐和搜索让我们找到软件包，软件包详情和用户评论让我们了解软件包，到 mirrors 的链接让我们方便地下载软件包，社会化分享和评论让我们围绕着软件包展开社交。最后，李喵喵为 LUG Services 发出了“We need you”的号召。   整场活动由李喵喵制作的简洁雅致的 slides 贯穿，尽管已经到了饭点但不少同学坚持到了最后。会后，14 名感兴趣的同学在大雅楼参与了 Linux User Dinner（LUD），时而谈起清华与科大的学习生活，时而聊到开源世界的奇闻逸事。高潮迭起的 LUD 持续到了晚上九点，2012 年 Linux User Party 活动在依依惜别中圆满结束。  ","categories": ["LUG 活动"],
"tags": ["Linux User Party"],
"url": "/news/2012/11/ustclug-going-online-going-native/",
"teaser": null
},{
"title": "“Linux 让一切变得简单”活动",
"excerpt":"2013 年 4 月 21 日下午，科大 LUG 与计算机学院学生会合办的“Linux 让一切变得简单”活动在 3121 教室举行。      李博杰首先带来了《OS 和网络从这里走来》(slides)，从 UNIX 操作系统的诞生、兴起讲到 AT&amp;T 的封闭与 UNIX 的分裂，再到 GNU 计划和 Linux 的诞生，回顾了这段波澜壮阔的操作系统进化史。目前，Linux 垄断了高性能计算，并被互联网公司广泛采用，以 Linux 为主阵地的黑客文化还孕育了自由编程语言、开源硬件。从浏览器发展史和 User-Agent 的乱象，引出 Web 开放的趋势。最后，用《大教堂与集市》分析了 Linux 成功的原因。   在随后的互动环节中，回答出问题的两名同学获得了 U 盘。      接下来是郭家华的《Linux 让你更懂计算机》(slides)。首先，他以娴熟的操作演示了从硬盘中恢复被删除的数据，将硬盘 MBR 的结构、“设备即文件”的概念和一些瑞士军刀式的 Linux 命令融入其中。然后，他演示了用 tcpdump 等抓包工具分析网络状况。最后，他以 acm.ustc.edu.cn 评测系统为例讲解了传统程序限制方法的“不靠谱”和用 ptrace 拦截系统调用的沙盒原理。听众们在膜拜技术之余，还体会到 Linux 工具庖丁解牛般的强大。      接下来沈达为我们带来了《可爱的 Python》(slides)。首先，他简短地介绍了 Python 的优雅特征、编程思想和一些好玩的应用。随后由听众提出问题，他来回答。科学计算中 Python 和 Fortran 的比较，从程序语言角度 Python 和 C 的比较，Web 开发中 Python 是否合适……沈达将“程序语言的选择一方面是需求，一方面是兴趣”的观点融入互动问答，从多个角度诠释了黑客文化。   在最后的互动环节中，回答出问题的一名同学和最先提出问题的两名同学获得了 U 盘。活动在大家热烈的讨论中成功结束。   本次活动的所有 slides   本次活动的所有照片  ","categories": ["LUG 活动"],
"tags": ["USTC_LUG"],
"url": "/news/2013/04/linux-make-everything-easy/",
"teaser": null
},{
"title": "2013 LUG 换届会议",
"excerpt":"2013 年 4 月 28 日晚上，LUG 在活动室召开了换届会议。LUG 新老会员齐聚一堂，商定了 LUG 下届主要负责人，一起讨论了 LUG 发展大计。      首先是自我介绍。接下来现任会长、副会长、前任会长分别介绍了一年来的感受与对新一年的期望。然后统计每个人的年级、感兴趣的方向，其间大家纷纷对 LUG 发展出谋划策，气氛热烈。   在活动方面，大家认为，LUG 应该把眼光放到全校，更加关注东区，面向 Linux User，为同学们解决实际需求；而不是成为 Linux Developer Group，昨天考物理、今天维护服务器。在网络服务方面，黄若山提出做贴近普通用户的服务，做得更专业并实现盈利，不过大家认为学校学习紧张，没有时间全力投入；李喵喵再次提出了服务整合和“硬又黑”导航条的设想。      经过反复协商，大家一致推选 2010 级物理学院的张光宇为新任会长，并依据大家的意愿分配了 CTO（技术）、COO（运营）、CPO（资产）、CNO（外联）、CFO（财务）、CIO（宣传）。新一届主要负责人中，2009 级 1 人，2010 级 1 人，2011 级 2 人，2012 级 2 人；计算机学院 4 人，少年班学院 1 人，物理学院 1 人（CIO 孙金鹿除外），梯队较为合理。         换届之后，讨论了即将举办的 Ubuntu &amp; Debian Release Party，下半学期的“USTC 主页大赛”（blog 大赛），LUG 十周年宣传册等。   最后，现任 CTO 郭家华宣布 Mirrors Lab 成立，并为大家开帐号。   参加此次会议的有祝元宠、顾昊、李喵喵、童献、黄若山、李博杰、郭家华、张光宇、沈达、黄震宇、张荣葳、朱晟菁，还有一位妹子。   本次会议的照片在 LUG FTP 的“会议”目录中。  ","categories": ["LUG 会议"],
"tags": ["Meeting","USTC_LUG"],
"url": "/news/2013/04/lug/",
"teaser": null
},{
"title": "2013 科大 LUG Linux User Party",
"excerpt":"2013 年 12 月 1 日，中国科学技术大学校学生 Linux 用户协会在科大西区活动中心学术报告厅举办了一年一度的 Linux User Party。   本次活动主要面向校内学生进行宣传，不仅在在宣传方式上覆盖了大部分常用方式，而且首次推出并免费赠送 Linux 协会纪念胸章，由此吸引了许多同学的参加。活动总共到场大约 70 人。         此次活动我们有幸邀请到了科大高性能计算方面的安虹老师，为大家分享 Linux 系统在高性能计算领域的应用。在演讲结束之后，现场的参与者踊跃地提出自己的疑问，并与 安虹老师交流自己的一些想法。      接着，副会长张荣葳同学为我们介绍 Graphviz 软件的一些入门知识。      然后是 Linux 用户协会的陈张同学带我们一起了解了电脑从按开关到见到 Linux 桌面的细节，在场同学纷纷表收获丰富。   接下来由张光宇同学介绍 Linux 用户协会比较知名的一个服务：Freeshell。为大家讲解 Freeshell 的功能和简单用法。   最后，在同学们激烈的讨论中，本次 Linux User Party 圆满结束。  ","categories": ["LUG 活动"],
"tags": ["Linux User Party"],
"url": "/news/2013/12/2013-e7-a7-91-e5-a4-a7lug-software-freedom-day/",
"teaser": null
},{
"title": "2013 Software Freedom Day 合肥站",
"excerpt":"2013 年 9 月 21 日下午 2:30，中国科学技术大学校 Linux 用户协会在合肥市与全球几百所高校和组织一道，举办了 2013 年软件自由日庆祝活动。   本次活动邀请到了上海 Linux User Group 负责人姚欣宇。他同时也是项目托管平台 GitCafe 的创始人兼 Team Leader。他这次为我们带来的话题是 Git 入门介绍。姚欣宇并不是第一次参加我们协会的活动，在 2011 年的 Linux User Party，我们也曾邀请姚欣宇来为我们分享他的 Linux 经历。   活动的另外一位嘉宾是少年班学院的杨国鑫同学。他是 OpenSUSE 中文社区的活跃成员，同时是 OpenSUSE Guide 中文版的作者。他这次为我们带来的话题是 OpenSUSE 使用经验。   在企业赞助方面，我们得到了如下赞助：      Linux Deepin 公司赞助的 200 张光盘   CrossWeaver 公司赞助的 20 枚价值 128 元的 CrossOver 正版序列号   GitCafe 公司赞助的 20 个马克杯   作为合肥唯一的 SFD 活动，我们在活动之前还联系了安徽大学、合肥工业大学等兄弟院校，让这些学校的 Linux 协会、学生会帮忙进行宣传。   本次活动选择西区学术报告厅为活动场地，大约 130 人参与了我们的活动，现场气氛热烈。   为了能让参与者们加深对各种自由软件的了解，我们精心制作了展板、学习资料等供大家学习。图为现场门口发放学习资料的场景。            首先由上海 Linux User Group 负责人姚欣宇为我们带来《Git 简明入门》：         接下来由杨国鑫同学带来《华丽的发行版——OpenSUSE》      演讲结束之后我们还有现场提问环节：      活动的最后是展示环节。我们选了 6 名同学，每人介绍一种自由软件。他们坐在第一排，每人外接一个显示器。演讲结束的时候同学们可以走过来和他们面对面交流自由软件。      本次活动的成功举行，对于向学生推广和宣传自由软件、开源软件有着重要意义。不仅如此，邀请嘉宾为我们做演讲也可以让同学们开阔眼界。我们 Linux 用户协会始终把推广 Linux 和自由软件作为我们协会的历史使命，并将一直贯彻下去。  ","categories": ["LUG 活动"],
"tags": ["LUG","USTC_LUG","SFD"],
"url": "/news/2014/08/2013-software-freedom-day/",
"teaser": null
},{
"title": "2014 年 8 月 SFD 工作规划暨新学期 LUG 工作会议",
"excerpt":"2014 年 8 月 30 日下午 2:30，一部分 LUG 活跃会员在东区活动室聚会，讨论即将到来的 SFD 活动的安排事项以及其它 LUG 的工作事项。与会人员包括：张荣葳、杨博远、崔灏、张光宇、朱晟菁、李子天、高一凡、罗秀哲。   一.  SFD 相关   SFD 活动定于 9 月 20 日，是开学后第三周的周六。   1. 形式   嘉宾演讲 + 其他演讲者演讲 + 自由软件展示与自由讨论。往年与今年的活动形式都类似这样。   张光宇提出：应当安排使得演讲人数增加，相应的每人的演讲时间压缩。一小时的演讲时间太长，容易导致对某项演讲不感兴趣的同学中途离场。   因此希望：出更多的演讲人数，话题相应增多，从而维持自始至终参与活动的人数。   需做：多找演讲者。应大于等于 5 人。   预期效果：中场休息时间更多。   需做：中场休息时间可以放合作伙伴的宣传内容；与会的同学们私下交流的机会更多。   2. 嘉宾   刘世伟先生，从事 MIPS 开发。   演讲内容以 FOSS 相关为主，演讲包括在平日工作中对自由软件的使用。   需做：之后应当加强与嘉宾联系。   3. 校内   需要找演讲者。邮件列表，SNS，BBS   需做：由杨博远发帖发邮件进行。   各位也需要私下联系一些人做演讲。   例子：对 Ruby 的介绍演讲。   张光宇：可以考虑做/找网站：在线注册提交演讲的网站（有这样的网站才能有人提交申请，想让人发邮件申请还是不太好。）   例如：Pentabarf：debian conf 所使用的平台。管理会议与 event 等。ruby 依赖？自己搭建。   也可考虑强制提交演讲者写 abstract（投稿时）   演讲：谁想讲就讲，25min+10min 讨论   4. 时间安排   工作应当按照以下的步骤来：   确定演讲者和内容—&gt;定出时间表–&gt;给嘉宾定火车票等。   如果有可能，应在演讲内容确定后列出整体活动的时间表，这样可以方便只想听某几个讲座的同学。   5. 拉赞助   总共有 4 家：   CSDN；Deepin；Mozilla；Segmentfault。   张荣葳和李子天参与和赞助方的联系。   最好和他们要海报（即使电子版也行）。我们希望帮他们宣传。   可以大大地打出来合作企业的海报。   目前商谈的进展：   CSDN：给媒体渠道（帮助宣传），小礼品，宣传折页   Deepin：光盘   Mozilla：还没说   Segmentfault：提交公司审核（0830），可能会有一些要求被否决。   6. 文宣，海报   在演讲者定下来后做。海报至少提前一周、持续一周的时间。   7. 场地   注意计划书。杨亚项目（9 月 4 日）批下来？   希望使用西区学术报告厅。   8. 奖品   U 盘   光盘（Deepin）   需做：徽章：特制，一些不同的图案等，有纪念意义   可以考虑：纪念品加上日期：2014,2015,…   给嘉宾的纪念品，要求更有纪念意义。   9. 其它工作   更新 SFD Wiki 与 LUG Wiki 的 SFD 相关内容。   发招募演讲者的通知以及活动宣传通知   等等     二。LUG 本学期工作的讨论   略。完整内容请见 20140830 会议记录。  ","categories": ["LUG 会议"],
"tags": ["Software Freedom Day","USTC_LUG","news"],
"url": "/news/2014/08/2014-e5-b9-b48-e6-9c-88-sfd-e5-b7-a5-e4-bd-9c-e8-a7-84-e5-88-92-e6-9a-a8-e6-96-b0-e5-ad-a6-e6-9c-9f-lug-e5-b7-a5-e4-bd-9c-e4-bc-9a-e8-ae-ae/",
"teaser": null
},{
"title": "2014 自由软件日中国科大站",
"excerpt":"SFD 自由软件日是一个关于自由软件和开源软件的全球性庆祝活动。9 月 20 日下午，2014 自由软件日中国科大站活动与全世界 190 个活动站点一道正式拉开序幕。此次活动宣传充分，准备到位，吸引了许多 Linux 爱好者们参加。   下午 2 时，活动在东区图书馆四楼学术报告厅准时召开。活动有幸邀请到了北京龙芯俱乐部核心成员刘世伟先生。校网络信息中心副主任张焕杰老师出席了活动。活动由大一新生张静宁同学主持。      维护网络繁忙的开源软件镜像站有什么挑战？Linux 用户协会副会长崔灏同学为大家带来演讲《Mirrors 是怎样炼成的》。有了 mirrors 镜像站，在学校使用 Linux 的同学们就可以以极高的速度获取到使用系统所必需的软件。为了应对高并发所带来的磁盘压力，mirrors 服务器上采用了冗余磁盘阵列技术以同时保障数据访问速度与安全性。通过这个演讲，同学们初步了解到了 mirrors 服务器的运行机理，窥探到了协会技术工作的冰山一角。   接下来我们的特邀嘉宾北京龙芯俱乐部核心成员刘世伟先生为大家带来展示《在 Linux 下开发 PCB》。在几乎一切均以电子化的当今世界，集成电路已成为我们生活的基础。目前主流 PCB 开发流程均有闭源的商业软件参与，刘先生展示的 gEDA 软件使大家眼前一亮。原来集成电路开发也可以开源！      说起数学计算软件，大家脑海中首先浮现的会是 Matlab、Mathematica 等闭源软件。数学计算能不能开源？Linux 用户协会资深会员阴钰为大家带来演讲《Sage：集大成者》。Sage 整合了目前流行的各种开源计算库，并给它们提供了一套统一的 Python 接口。Sage 的功能非常丰富，符号计算、数值分析、组合数学、统计分析，应有尽有，只有想不到，没有做不到。不少同学对其表示出极大兴趣。      智能手机操作系统并非仅有 Android、iOS、Windows Phone 三种。新兴力量在开源界不可小觑。Linux 用户协会前会长张光宇同学的《Firefox OS 移动应用开发入门》在移动领域为大家带来了新奇的体验。有了 Firefox OS，编写移动端应用程序不需要什么高深的知识。只要会写现代网页，一款移动应用即可新鲜出炉。   互联网上信息瞬息万变，无数的黑客觊觎着用户的个人隐私。面对如此，我们唯有用技术武装自己。Linux 用户协会会长张荣葳为大家带来演讲《比安全更安全——GnuPG 简介》。GnuPG 使用经典的非对称加密算法，有效地防止数据在非安全信道传输的过程中被窃取。与基于 CA 绝对可信性的 SSL/TLS 不同，GnuPG 实现的 PGP 使用信任网来推断一份公钥是否属于它所声称的实体。许多同学表示对网状的信任关系有兴趣。      在第二个演讲结束以及全部演讲结束时，我们有抽奖环节。在演讲后提问以及抽到幸运数字的听众均获得了由合作公司赞助的小奖品一份。      感谢 Mozilla、CSDN、Deepin 与 SegmentFault 公司对活动的大力支持。最后，活动在大家热烈的讨论中成功结束。  ","categories": ["LUG 活动"],
"tags": ["Software Freedom Day","SFD","news"],
"url": "/news/2014/09/2014-sfd/",
"teaser": null
},{
"title": "2014 秋季学期会员大会",
"excerpt":"2014 社团招新业已结束，为了让新生更好地了解社团情况、增进社员间相互交流，Linux 用户协会于 2014 年 9 月 26 日晚在西区 3A203 教室举行会员大会，邀请所有新会员参加。   晚 7 时，大会开始。会长张荣葳代表 Linux 用户协会热情欢迎到会的新会员。      副会长杨博远同学详尽介绍了社团的发展历史、活动概括以及技术成就。他有姿有味的讲解吸引了台下所有人的目光！      第三位登场的是分管技术的副会长崔灏同学。杨博远同学的介绍已经非常详尽了，没事做的崔灏同学就带着大家“参观”了一下由协会维护的各个站点和网络服务，包括科大开源镜像站、科大 Blog、图书馆查询机系统等。      接下来，会长张荣葳同学介绍了到场了的本届和往届协会负责人，其中包括：现任 CPO 张恒若、现任 CIO 尤淼、2013 届会长张光宇、2012 届会长李博杰。      大会现场气氛热烈，欢笑声不断，展现了 Linux 社区的和谐与快乐。   大会后，依然有许多新会员踊跃地向协会负责人提问问题。最后，协会还组织新成员参观了 LUG 在西区和东区的活动室。  ","categories": ["LUG 活动"],
"tags": ["LUG","news"],
"url": "/news/2014/10/2014-autumn-kaiintaikai/",
"teaser": null
},{
"title": "2014 Linux User Party 暨 Freeshell 用户交流会",
"excerpt":"2014 Linux User Party 暨 Freeshell 用户交流会，于今年 12 月 7 日（周日）14 时 30 分，在西活学术报告厅成功举行。      本次活动以“Freeshell 用户交流会”为主题。Freeshell 上线于 2013 年 1 月，是科大 LUG 利用少院的废旧服务器搭建的 Linux 虚拟机（VPS）平台，供科大师生免费使用，可以用于开发网络服务、搭建个人主页、挂机编译、跑实验程序等等。      本次活动由会长大人张荣葳亲自主持，并有幸请来了 4 位讲者：      科大云框架设计者 王硕博士 —— 《什么是云计算》   LUG 资深会员 高一凡同学 —— 《Docker 的简介与进阶》   iCard 作者 王译锋 —— 《现场计算来宾学霸指数》   LUG 活跃会员 阴钰 —— 《部署一个网页聊天室》      本次活动有近百名同学参加。主办方 LUG 的小伙伴们更是精心准备了奖品，现场还有小零食可以吃。      近年来云计算的概念越来越火，云计算是继 1980 年代大型计算机到客户端 - 服务器的大转变之后的又一种巨变。中国科大云是校网络中心一项给科大师生提供虚拟机的服务。而王硕博士以一个科大云框架设计者的角度，给我们介绍了云计算的特点以及科大云搭建过程中用到的技术。他指出，云计算主要提供强大的计算能力和海量的存储能力，并具有可靠性、可扩展性和灵活性的优点。而科大云搭建过程中的关键技术讲解更是十分专业。      第二位讲者的演讲主题——Docker 是一个开源项目，诞生于 2013 年初。Docker 项目的目标是实现轻量级的操作系统虚拟化解决方案。高一凡同学对 Docker 颇有研究，他现场演示了 Docker 的种种用法，让我们看到用户操作 Docker 的容器就像操作一个快速轻量级的虚拟机一样简单。      由于前两位讲者都讲了比较长的时间，这次活动没有中间休息。   接下来演讲的是 iCard 作者王译锋，iCard 是一款提供一卡通消费分析的产品。与前面两个演讲相比，《现场计算来宾学霸指数》的主题听起来就十分吸引人。王译锋利用 iCard 上面收集到的同学们的一卡通消费信息，根据同学们每天吃饭是否规律来判断同学们是否学霸。当然判据是否准确不重要，重要的是他现场循序渐进地展示了如何利用学校 ecard.ustc.edu.cn 提供的 API，使用 Python 和 bootstrap 框架快速搭建一个网站应用，以及数据分析对改善我们生活质量的无限潜力。      阴钰同学是 LUG 的活跃会员，他在短短 30 分钟内演示了自己是如何在 Freeshell 利用 Python 的 Tornado 框架开发一个 Web 网络聊天室。同学们对他搭建的网络聊天室十分感兴趣，纷纷在上面吐槽，借着投影仪现场掀起了聊天狂潮。      每个演讲结束都会有问答环节，主办方给提问的同学们准备了精美的小礼品。我们还给优秀讲者赠送了采用 SLC 存储芯片的 16G USB 3.0 高速 U 盘。      最后，本次 Linux User Party 在接近饭点的时候才结束。同学们对 LUD 热情很高，有十几个小伙伴参与了晚上的 LUD ( Linux User Dinner)。   2014 Linux User Party 暨 Freeshell 用户交流会 圆满成功，希望未来在 Freeshell 上面有更多有意思的项目。   友情链接：   https://freeshell.ustc.edu.cn/   https://www.docker.com/   http://cloud.ustc.edu.cn/   http://icard.ustc.edu.cn/   https://ychat.freeshell.ustc.edu.cn/  ","categories": ["LUG 活动"],
"tags": ["news","LUP"],
"url": "/news/2014/12/2014-linux-user-party/",
"teaser": null
},{
"title": "Blog 服务器宕机",
"excerpt":"由于维护人员失误与遭受攻击，Blog 服务器于 2014 年 12 月 18 日凌晨宕机，已基本恢复服务。   受影响的服务包括 lug vpn，freeshell 网页前端，freeshell HTTP 反向代理，ssh.freeshell.ustc.edu.cn，部分校内网站 HTTP 反向代理，ustc blog 服务，字体代理服务，自建递归 DNS 服务，archive.lug.ustc.edu.cn，lug 官方邮箱邮件转发等。freeshell 各个计算节点未受影响。   我们近日将在 servers.blog.ustc.edu.cn 上给出一份本次宕机的技术细节。由于时间仓促，如果您发现有哪些服务仍然存在 Bug，请及时向我们反映。   给您带来的不便，敬请谅解。  ","categories": ["LUG 服务"],
"tags": ["server"],
"url": "/news/2014/12/blog-server-down/",
"teaser": null
},{
"title": "2015 LUG 社团换届会议",
"excerpt":"2015 年 4 月 25 日晚 19 时 30 分，校学生 Linux 用户协会于东区活动室（科大东区图书馆 118 室）召开了换届会议。   首先，2014-2015 届社长张荣葳同学为我们简要总结了过去一年社团的发展与活动情况。过去一年里，社团组织过许多次有影响力的活动，如广场知识问答、自由软件日活动、Linux User Party、女生节特别活动、LaTeX 专题讲座等，提升了社团影响力；也经历了许多变迁与挑战，如活动室迁移、各种服务器宕机事故等。期间，技术方面也取得了进步，如暑假期间对 mirrors 服务器的在线维护与修理，其它服务器的维护，cuihao, zhsj, gaoyifan 等技术骨干的努力，也诞生了一批基于 freeshell 的应用成果，如南七书库、icard、选课查询系统等，激发了同学们的编程热情，也对开源软件与开源精神作出了宣传与普及。LUG 取得了一定的成就，挖掘出了一批有技术实力的新人，也吸取了各类教训与经验。展望未来，外部环境的变化带来了许多未知数，需要社团继续进行发展与改革。   会议第二部分进行了社长与副会长的更替与选举。上任会长张荣葳决定加入校社团管理指导委员会并卸任会长职位。张荣葳同学向到场同学介绍了社长与副社长的职务工作内容：社长应统筹规划社团发展，掌握社团历史，规划社团工作，分发工作，与管指委与团委进行联络（政治资源、资金、等等）。副社长应辅佐社长处理工作，进行事物分派并完成各种具体的工作。   上任副社长崔灏同学决定参选社长职务。崔灏同学作了竞选演讲，称自己作为副社长工作一年，比较了解社团工作；作为上一届 CTO，技术水平较好，对服务器维护了解，有能力担任社长工作。   副社长职位上，崔天一、左格非、杨博远、张静宁四人参选。经过讨论，与会人员决定选出三位副社长。四位候选人均发表了竞选演讲。   之后进行了一人一票的选举投票，其结果如下：      选出崔灏同学担任新一届社长，张静宁、杨博远、左格非同学担任副社长。            图为崔灏同学发表就职感想。   第三部分讨论了社团各种 O(“Officer”) 的人选。经自我举荐，确定高一凡同学担任 CTO 职位，崔天一同学担任 CFO，尤淼同学主动承担了整理 LUG Wiki 和 LUG FTP 的工作，其余人选待定。   之后，大家讨论了 LUG 近期的发展与工作事项，包括版衫制作与白帽子大赛的准备以及相关小聚的举办问题，气氛热烈。邓云天同学代表管指委对新一届领导人员就任表示祝贺，希望大家能够共同努力办好社团，使 LUG 更上一层楼。   与会人员包括崔灏、崔天一、邓云天、高一凡、何旭东、李博杰、沈达、王皓、于天泽、尤淼、杨博远、祝元宠、张恒若、左格非、朱晟菁、张荣葳、张静宁、郑子涵等（名单暂有遗漏，请联系 LUG 进行补充）。其中，邓云天委员助理作为校社团管理指导委员会的代表参会监督。      会后，相关人员还就感兴趣的问题进行了讨论。      本次会议照片上传至 LUG FTP“会议”文件夹中。  ","categories": ["LUG 会议"],
"tags": ["Meeting","USTC_LUG","news"],
"url": "/news/2015/04/2015-lug-election/",
"teaser": null
},{
"title": "2015 瀚海星云 BBS 板板衫方案",
"excerpt":"版衫设计方案征集帖：   http://bbs.ustc.edu.cn/cgi/bbstcon?board=Linux&amp;file=M.1430644311.A   往届版衫方案：   https://lug.ustc.edu.cn/wiki/lug/banshan   活动流程：征集设计方案 → 投票确定设计方案 → 版衫预定 → 版衫发放   版衫方案   目前有 3 位同学投稿（zhaochi、ewind、JennyZhang @BBS）他们可以免费获得今年的版衫一件；现在，一共有 7 种设计方案，如下：   方案一   作者：zhaochi 图片：正面图      方案二   作者：JennyZhang 图片：正面、背面效果图，正面、背面图   github commit style               方案三   作者：ewind 图片：正面效果图      方案四   作者：ewind 图片：背面效果图      方案五   作者：ewind 图片：正面效果图      方案六   作者：ewind 图片：背面效果图      编者注：这个背面图打印的面积比较大，可能需要 3 个版….   方案七   作者：ewind 图片：正面效果图      投票链接   http://www.sojump.com/jq/5057174.aspx   关于底衫与订购商店   底衫由于选择的范围很大，质量价格各种因素很多，工作人员将尽量挑选好的底衫（就不投票决定了，因为目前也没有筛选出来）。底衫样式和颜色会在预定的时候给大家挑选，订购商店我们还在挑选中，有靠谱的、有经验的同学欢迎给我们推荐好的店铺。   欢迎回复本文吐槽。  ","categories": ["LUG 活动"],
"tags": ["版衫"],
"url": "/news/2015/05/2015-linux-user-group-banshan/",
"teaser": null
},{
"title": "投票结果",
"excerpt":"这次版衫制作，征集到的设计方案 最后的投票结果是：   (A) 方案一                  5 票 约占  3% (B) 方案二                 36 票 约占 23% (C) 方案三                 43 票 约占 27% (D) 方案四                 13 票 约占  8% (E) 方案五                 11 票 约占  7% (F) 方案六                  6 票 约占  4% (G) 方案七                 22 票 约占 14% (H) 方案八：重制2010年版衫 16 票 约占 10% (I) 方案九：重制2011年版衫  5 票 约占  3% (J) 方案十：重制2012年版衫  5 票 约占  3%  投票总人数 = 99 人 投票总票数 = 158 票      2015 版衫效果图   根据投票结果，今年的版衫采用方案三和方案四的组合，经过和商家、设计作者 ewind 的交流，最后的版衫设计稿是这样：                     有两点需要注意：   1、由于正面图案的问题，这次版衫主要为深色系列，为了适应白色的底衫，我们把图案做了处理。所以，现在除了白色底衫，其他的四种颜色图案都是白色的。   2、考虑到制作成本的因素，白色底衫我们只会选一种（也就是说白黑和白蓝选一种来印），根据两款衣服最后预定人数多少来决定。   版衫预定方式   版衫定价：50 元   预定截止：2015-6-3 23:59   版衫预期到手时间：6.12（大四党你们来得及吧？！）   预定方法采用：   第一步：TEEKER 网站预定（款式、颜色、尺寸、数量、快递方式）   第二步：支付宝付款到 LUG 负责人账号（并注明订单号、姓名）                  支付宝账户名称       姓名       验证特点                       cuihao.leo@gmail.com       崔灏       头像标有“panda photography“字样           预定链接：   http://www.teeker.com/openstore（我们真的有 5 种颜色，第一个类里有 5 种颜色，你好好找找！）   特别说明（一定要看）：   1、【颜色问题】我们一种有 5 种颜色！下图最右边有四种可选颜色      2、【快递问题】   A）如果你不在科大，可以在 TEEKER 网站预定时候，务必填上真实的地址，版衫将从制作商直接快递给你们（而不用寄回科大）。运费参考 TEEKER 网给出的。   B）如果你在科大，在 TEEKER 网站预定时候，直接选 中科大 Linux 用户协会免费配送。那么你将无需登录，配送方式记得选【免费配送】。         3、【尺码问题】   尺码参考 TEEKER 网上的尺码说明（购物过程中大家自然会看到），我们提醒大家不要订太大的码，比如你很高但比较瘦，推荐你选小一些的码。可以参考你平时买的衣服。   4、【付款问题】   支付到 cuihao.leo@gmail.com 支付宝账号，并且备注上：订单号、姓名，   支付到 cuihao.leo@gmail.com 支付宝账号，并且备注上：订单号、姓名，   支付到 cuihao.leo@gmail.com 支付宝账号，并且备注上：订单号、姓名，                  支付宝账户名称       姓名       验证特点                       cuihao.leo@gmail.com       崔灏       头像标有“panda photography”字样           因为很重要所以说三遍，转账之后才能算完成预定（因为 TEEKER 那边我们没法区别是真预定还是刷票 233)   版衫价格说明   （不关心价格的同学可以不用看）   版衫的价格主要由：底衫、制版费、印刷费来决定   我们采用的是：丝网印，因此需要制版   1、底衫：本次版衫底衫价格较贵，TEEKER 家其实给出一些便宜的底衫，20 元、30 元的，但是我们考虑到质量问题，我们选择了卖的最好的 A01 款。这款底衫给出的价格是 50 元/件，考虑到我们订购的数量大概在 100-200 件，底衫价格可以有所便宜。   2、制版费：制版费是一处位置、一种颜色需要一个板，一个版要 50 元，如果印刷的大于 100 件，厂家就不收我们的制版费。举个例子，黑色、藏青色、蓝色、绿色的版衫正面反面的图案都是相同的（且都是白色），所以只需要正面一个版、反面一个版，100 元制版费。如果这四种颜色的版衫订购超过 100 件，就可以不收制版费。然而白色的版衫，正面图案有两种颜色，所以需要两个版，假设背面的颜色，一共 3 个版（这也是为什么我白黑和白蓝只选择一种颜色来印的原因，否则又多好几个版）。   3、印刷费：印刷费是一处位置一种颜色一块钱，所以一件白色衣服印刷费是 3 元，其他的颜色是 2 元。   这么算，其实白色衣服好贵….但由于大家认为白色比较经典，不可或缺，我们仍然做白色供大家选择。   除此之外还有税费、制作加急费等等（我们这两点目前都没有考虑）   所以，版衫价格定为 50 元，最后的价格大概也和这个差不多（还要由预定数量决定，否则制版费要每件衣服平摊，所以我们现在也不知道确切的价格）。   如果最后我们能把每件版衫的价格砍得更低（大概也就几块钱），多余的钱将加入 LUG 的活动经费当中。   要知道 LUG 定做版衫也是很累的事情，需要项目负责人和设计作者投入很多时间，另外我们还需要给设计投稿者每人提供免费的版衫一件，给投稿采纳的 ewind 同学免费的版衫两件。   以上只是解释为什么我们版衫定价为 50 元，希望大家理解。   快来订购吧！http://www.teeker.com/openstore  ","categories": ["LUG 活动"],
"tags": ["news","版衫"],
"url": "/news/2015/05/2015-linux-tshirt-voting-result-and-order/",
"teaser": null
},{
"title": "5 月 30 日服务器宕机说明",
"excerpt":"blog 服务器于 5 月 30 日凌晨起宕机。目前技术人员正在尝试修复，暂时没有修复 ETA。您的博客数据均有备份，暂时无需担心数据丢失问题。   宕机影响范围包括科大博客服务、Freeshell 控制节点与网络控制面板、LUG VPN 防污染 DNS 等。Freeshell 工作节点暂未受到影响，您仍然能够远程登录虚拟机。   其它服务器可能受到影响；我们正在评估影响范围与严重性。  ","categories": ["LUG 服务"],
"tags": [],
"url": "/news/2015/06/201406-server-fault-announce/",
"teaser": null
},{
"title": "GitLab 服务器紧急维护通知",
"excerpt":"接到用户反馈，无法 git clone 项目。   我们发现 GitLab 服务器文件系统损坏。   目前暂停了 GitLab 服务，正在紧急维护中。  ","categories": ["LUG 服务"],
"tags": [],
"url": "/news/2015/06/gitlab-emergency-maintenance/",
"teaser": null
},{
"title": "mirrors.ustc.edu.cn",
"excerpt":"科大开源软件镜像服务正常。   lug.ustc.edu.cn   目前正常运行的服务包括 LUG Wiki、lug.ustc.edu.cn/sites/*。即日起 LUG 博客（https://lug.ustc.edu.cn/blog/）恢复服务。   LUG FTP 尚未正式恢复。如有迫切需求，请使用 ftp://backup.ustclug.org，使用方法与先前 LUG FTP 相同。   9.3 补充：LUG FTP 现已回复。请使用ftp://ftp.lug.ustc.edu.cn。现在 LUG FTP 部署在 donut 机器上。   freeshell.ustc.edu.cn   目前服务恢复面临技术问题：上游基于 3.10 内核和 CentOS 7 的 OpenVZ 部署方案仍不成熟，故当前处于等待上游开发的阶段，暂无恢复时间表。   8.21 补充：如有熟练运用 OpenVZ 或了解内核调试相关技术，有能力且愿意协助项目解决 bug 的同学，欢迎投简历至 lug (at) ustc.edu.cn 了解并参与项目开发，感激不尽   9.3 补充：目前 bug 修复有所进展，开发正缓慢进行。   blog.ustc.edu.cn   科大博客已恢复服务。如果使用出现问题，请向我们反映。   Time Machine   Time Machine 服务暂时关闭，是否恢复未定。   Google 字体反代   暂未恢复，何时恢复未定。   8.23 更新：服务已恢复。   网络启动服务   已排除先前出现的已知问题。   如果在使用服务中出现问题，或者有愿意继续开发相关服务的同学/老师，请联系我们。   Git 代码托管   现正常服务中。  ","categories": ["LUG 服务"],
"tags": ["USTC_LUG","server"],
"url": "/news/2015/08/lug-service-restore-status/",
"teaser": null
},{
"title": "LUG 版衫制作手册",
"excerpt":"上学期 5 月 3 日到 6 月 15 日制作了 LUG 2015 版衫，前后花了一个多月的时间，感觉做版衫真是一件十分耗费时间精力的大活动。第一次负责 LUG 版衫的制作，总结一下一个月的工作。主要流程如下，我们逐一讲解。   方案征集 → 版衫投票 → 协商定稿 → 版衫预定 → 统计制作 → 版衫发放 → 售后服务   方案征集   方案征集前一般要策划时间，一般我们都是毕业季做版衫，6 月中旬前要把版衫发出去，需要提前一个半月开始准备。因此版衫征集，五月初就应该发帖了。   发帖要求：这是版衫制作的第一个贴子，需要介绍活动流程，让关注版衫制作的同学知道接下来都要发生什么。其次，发帖主要目的是征集版衫设计方案，因此需要写清设计要求、投稿方式、方案如何选择，另外给投稿者的奖励也十分必要，最后附上往届版衫设计图给大家开脑洞。   注意事项：要求投稿者提供版衫正反面，如果只提供正面图像，背面视为空白。   要做事情：BBS 发帖，各种社交平台宣传   建议时间：建议版衫征集时间为 14 天   版衫投票   版衫方案征集结束后，应该尽快整理版衫方案，为投票做准备。征集到的方案，列出采纳的方案、作者、图片。选择一个投票平台进行投票，注意每个投票的方案都应该包含正反面（无论反面是否空白）。   要做的事情：整理版衫方案发帖，发起投票，各种社交平台宣传   建议时间：整理方案、制作投票时间 1 天，投票时间 6 天   卖家协商   版衫方案确定之后，需要尽快定稿。首先，我们需要寻找一家为我们制作版衫的卖家。并根据卖家的要求提供设计图文件，因此必不可少要和联系设计作者。因为，有时根据底衫颜色还需要提供不同颜色的图案，所需的图片大小等，都需要设计作者提供。   其实应该之前就开始寻找卖家，需要根据底衫样式、质量、价格、颜色、制作时间等因素综合考虑。   和卖家定稿之后，需要把大致价格定下来，因为版衫的最终价格和制作数量、印制板数也有关，这个只有等预定结束之后才知道。而预定之前又必须告诉同学们版衫多少钱。所以必须定价建议比卖家给我的价格高一些。这次卖家跟我说大概一件 47 块，我们定价 50。但就社团全部的付出来说，建议定价再高 10 元，因为需要奖励版衫给投稿的人，也需要库存一些之后卖，多的钱可以作为社团经费。   要做的事情：寻找卖家、联系设计作者、与卖家协商好版衫定稿、定价   建议时间：多方联系到版衫定稿建议 2 天   版衫预定   在版衫预定发帖前，需要确定预定的方式。考虑到短信、邮件预定我们需要自己统计，建议采用发问卷、或者在线预定平台预定。因为具体每个预定都涉及到很多参数，如衣服尺码、颜色、款式、预订人姓名、联系方式、是否快递、地址等等。另外，我们是预定即付款，否则我们需要垫 1 万元左右。   由于版衫预定数量决定了版衫的制作量/销售量，我们需要重点宣传，因此需要制作海报、传单来提高预订数量。在预定期间，一定要多宣传，天天刷存在感。   另外，需要单独联系当初给版衫投稿的人，问他们预定信息。   发帖要求：我们把投票结果公布和版衫预定说明合在一个帖子里。首先我们需要在帖子里公开版衫投票的结果，具体的公布每个方案的得票数。然后，把和卖家商量好的版衫设计稿展示出来，有几种颜色，是否分男女款说明清楚。还需要说明预定方式、预定时间、付款方式、预计到货时间。   要做的事情：决定预定方式、发帖、各种社交平台宣传、做海报传单   建议时间：7 天   统计制作   版衫预定结束后，需要和卖家确认各种颜色、尺码、款式制作的数量。除了已经预定的同学，我们还需要库存 10-20 件版衫下学期给卖给新生、或者作为活动奖品。库存的版衫颜色、尺码、款式可以参考预定的数据。此时需要交一定比例的预付金额，因此需要和买家确认最终的总价格。需要统计的可能会涉及各种预定信息，包括是否交钱。也要问清楚多少天可以拿到版衫。   确定后，版衫即投入制作。   需要做的事：统计预定信息、和卖家协商确认、付预定金额   建议时间：统计确定信息 1 天，版衫制作 12 天   版衫发放   版衫方法前必然是卖家把版衫寄过来，那么收快递的时候就要确认卖家是否寄了正确数量、款式的版衫。这次每件版衫上都贴有预订者姓名小纸条，是卖家已经贴好的。友情提示快递比较重，需要两三个人一起去取。遇到数量不对还需和卖家联系，建议版衫差不多全发出去之后再给卖家付尾款。   版衫发放前需要发帖，提前到发放点准备好版衫，领版衫需签收，2、3 个人一起去发放即可。建议集中一个小时内发版衫，之后需要自行来活动室取。   要做的事情：收快递验货、发帖、宣传、发放版衫、付尾款   建议的时间：1 天收快递验货，1 天发放版衫。   售后服务   版衫发出去之后，总有人大小不合适什么的，让他们自行交换，因此在 BBS 上面发一个版衫问题反馈帖子，集中交流。   需要做的事情：发帖、协调   建议   总共算下来，版衫征集到版衫投入制作需要 31 天时间，再到版衫发放需要 14 天。一共一个半月。   由于我们做的是 BBS 板板衫，主要信息更新平台是 BBS，另外邮件列表、LUG 博客、人人网、QQ 空间等也该同步更新。   人员分工建议有 5、6 个人，每人负责以下一块：      BBS 发帖、发起投票   各大平台转发宣传、海报传单设计   寻找卖家、卖家协商   收钱、记账   取快递、版衫数量统计、发放版衫   最后，LUG 版衫专页链接：https://lug.ustc.edu.cn/wiki/lug/banshan   以及 LUG 2015 版衫制作过程中发的所有贴子链接，供参考！   BBS: 方案征集 &amp; 版衫投票 &amp; 版衫预定 &amp; 版衫领取 &amp; 问题反馈   LUG 博客：方案整理 &amp; 预定说明   投票链接   LUG 主页 banner：      BBS 进版 poster：     ","categories": ["LUG 活动"],
"tags": ["版衫"],
"url": "/news/2015/09/lug-banshan-commission-guide/",
"teaser": null
},{
"title": "2015 软件自由日中国科大站",
"excerpt":"2015 年 9 月 19 日是第 12 个软件自由日。当日下午，中国科大学生 Linux 用户协会在西区活动中心学术报告厅举办了软件自由日科大站庆祝活动。共有超过 100 位科大及社会人士参加了本次活动。   这是协会连续第六年承办软件自由日中国科大站活动。本次活动中，我们很荣幸地邀请了两位嘉宾进行自由软件主题演讲，他们是在红帽中国从事内核工程师工作的科大校友叶超先生，和对科学数值计算有着丰富的了解的物院 13 级的罗秀哲同学。协会指导教师张焕杰老师和社团管指委的张荣葳同学也参加的本次活动。   下午 2 时许，活动还未开始，同学们就已经陆续进入会场西活学术报告厅。我们向参加活动的同学发放了 Linux 系统体验光盘、笔记本、贴纸等精美纪念品。同学们对于本次活动表现出了极大兴趣，不断有同学向工作人员了解演讲内容和活动流程详情。甚至有来自合肥其他兄弟院校的同学，也慕名来到科大参加本次活动。      下午 2:30，学术报告厅已经几乎坐满，还有同学在源源不断地进入会场。在主持人张静宁和协会工作人员的组织下，活动正式开始。   叶超先生首先为科大同学带来了《从红帽工程师的角度看开源》主题演讲。他从开源的意义谈起，生动地解释了开源的精神和理念；又结合开源项目实例，展示了当前席卷软件业的开源潮流。最后，他结合自己的工作，解释了开源巨头红帽公司是如何同开源社区展开良好合作的。演讲中，叶超先生多次和同学们互动问答；演讲后，同学们更是不断积极地提问。现场气氛十分热烈。      中场休息时，我们播放了由协会前辈张成学长和李博杰学长拍摄的小短片。学长们对协会的发展做出了很大贡献，也对协会有着浓厚的感情。他们特意拍摄了这些短片，希望通过自己的解说帮助新成员了解校学生 Linux 用户协会这个大家庭。随后，协会副会长左格非同学为大家带来了《自由软件新闻吐槽》小演讲。十分钟的演讲中，他从几个著名开源软件发布的重大更新谈起，带领同学们纵览过去一年中自由软件的大事记。   接下来，罗秀哲同学带来了《Julia——科学计算的银弹》主题演讲。Julia 是一门新兴的高性能数值计算语言，也是一个蓬勃发展的自由软件项目。罗秀哲同学结合自己的科研经历，介绍了 Julia 的优势和发展前景，向同学们大力推广这一自由软件。他还表达了自己希望在科大乃至中国建立起 Julia 中文社区的想法，希望同学们发扬自由软件精神，为 Julia 的发展群策群力。最后，他邀请了同样是 Julia 语言活跃推广者的科大物院 12 级的徐浩同学来到台上，为同学们介绍了 Julia 的社区发展。现场气氛十分活跃。      两场演讲后，活动进入了尾声，但最后的抽奖活动又将现场气氛推向了一个新的高潮。我们安排了有趣的名片交换活动，每位参加者都事先收到了一张他人填写的名片。抽奖时，每位中奖者不仅收到一份自己的礼物，还要将另一份礼物亲自送给收到的名片上的同学。我们希望抽奖活动带给同学们的不仅仅是奖品，更是一份崭新的友谊。      活动结束后，徐浩同学还用自己的无人机为参加活动的同学拍摄了特别的合影。我们对徐浩同学别出心裁的彩蛋表示感谢。   本次活动受到了各大开源社区和企业的支持，中国科大学生 Linux 用户协会对这些单位的支持表示由衷的感谢（排名不分先后）：      云端开发平台 Coding 为活动提供了抱枕、图书、贴纸等精美纪念品；   Canonical 提供了 Ubuntu 主题的笔记本、贴纸等小纪念品；   红帽中国和 Fedora 中文社区提供了 Linux 系统体验光盘、奖品 U 盘、服饰等活动物资；   深度科技提供了 U 盘、图书等纪念品。  ","categories": ["LUG 活动"],
"tags": ["SFD"],
"url": "/news/2015/09/2015sfd/",
"teaser": null
},{
"title": "2016 LUG 社团换届会议",
"excerpt":"2016 年 4 月 24 日下午 15 时，校学生 Linux 用户协会于东区活动室 (科大东区图书馆 605 室) 召开了换届会议。   首先，为了活跃气氛，2015-2016 届会长崔灏同学向大家展示了 android 6.0 的新功能：USB MIDI 输入，将手机接到电脑的虚拟键盘上之后弹出了优美的旋律。   步入正题，崔灏同学总结了过去一年的社团情况。比如举办了 Linux Install Party，白帽子大赛，服务器遭受大规模攻击等等。然后由本届 CTO 高一凡同学总结了技术工作。在这一年中用捐赠获得的 6 台服务器中的 4 台搭建了 Vmware vSphere 集群并把许多服务 (gitlab, mail, vpn, 防污染 dns 等) 迁移到它上面，还有对一些服务进行了 docker 化 (典型的是 gitlab 和 lug ftp)。此外，仍有一些项目处于开发缓慢或停滞状态如 vpn、统一认证、freeshell。   下一项内容，由崔灏同学介绍了今年的候选人政策。本年度社团换届要求社团换届先上报候选人名单，由管指委组织培训和考试，合格通过方能成为社团负责人。本社团共上报三名候选人但最终通过的只有崔天一一人。   为选举做准备，到场的每位同学都做了自我介绍，除了让大家进一步熟悉一下之外，还要交代个人愿意在下一学年中为社团做些什么，承担什么样的任务。每个人自我介绍完了之后现任会长还根据平时的接触补充了一些评价。            会议最后一项，进行选举，今年的选举形式有些变化，虽然只有一位候选人通过了管指委的考试，但并不能只指定一人作为负责人。所以这一次到场的每个人都是候选人。大家根据之前其他人的自我介绍对心目中下一任 LUG 负责人进行匿名投票。最后根据唱票结果，包括唯一被管指委方面承认的会长崔天一在内，会议共选出了 4 位负责人，分别是左格非、崔天一、曾键、郑子涵。之后当选的 4 位负责人分别发表了当选感言。按照惯例还应确定下一届的各种 officer 人选，经自我举荐和大家讨论确定了 CTO 由曾键担任、CFO 由金孜达担任、CIO 由崔天一担任。               与会人员包括杨博远、曾键、张光宇、李嘉豪、王子博、崔灏、郑子涵、左格非、朱沛俊、王子浩、崔天一、赵彦冰、张静宁、张振兴、徐弈、于天泽、高一凡、卢星、金孜达、张荣葳、何旭东、赵驰。以上名单来自会议签到。   其中张荣葳同学既是老会长又代表本届社团管指委员会分管委员参加。   会议记录感谢杨博远。   本次会议照片上传至 LUG FTP“会议”文件夹中。  ","categories": ["LUG 会议"],
"tags": ["USTC_LUG","换届","崔灏","左格非","曾键","郑子涵","金孜达"],
"url": "/news/2016/05/2016-lug-election/",
"teaser": null
},{
"title": "西区图书馆新活动室启用",
"excerpt":"2016 年 6 月 16 日，LUG 西区新活动室启用，并成为今后唯一的社团活动室。一部分 LUG 成员在当日早上从东区图书馆 605 老活动室与东图一楼将大部分活动材料与各类物品搬迁到了西区活动室。      新的西区活动室仍然由图书馆提供，位于西区图书馆 206 室。具体地点在西区图书馆主楼二楼西北角，十分接近原 308 活动室。   16 日早上，东区的同学们使用三轮车数次来回才将东区的活动物品与书库书籍搬到了西区。      同学们从早上工作至中午，将活动室打扫干净并对书籍进行上架、配置活动室有线和无线网络。到 16 日下午，活动室已经能正式投入使用。      历史上，LUG 的活动室长期位于西区图书馆 308 室；前两年的数次搬迁均是西区图书馆的大规模重新装修计划的结果。经过数次辗转之后，LUG 活动室重新回到了西区，在可以预期的将来，西区新活动室定能为 LUG 的活动提供更好的便利条件。   原东区活动室将于近日被收回。本次活动的原始照片存储在LUG FTP上。  ","categories": ["LUG 活动"],
"tags": ["LUG","USTC_LUG","news"],
"url": "/news/2016/06/new-activity-room-in-west-library/",
"teaser": null
},{
"title": "2016 软件自由日中国科大站",
"excerpt":"2016 年 9 月 15 日下午，2016 年软件自由日（SFD）中国科大站活动在西活学术报告厅成功举办。当天下午，虽然天公不作美，大雨倾盆，又适逢中秋佳节，仍有 70 余位同学冒雨赶来参加我们的活动，现场气氛热烈，效果良好。         本次活动我们有幸邀请到了来自 Canonical 的李彬工程师为我们介绍《Ubuntu 和 Gnome 的桌面环境》，Linux 用户协会执行会长左格非同学为大家介绍了《开源通信软件协议》和《出国网络加速服务的实现》，深受在场同学的欢迎。   不到 2:30 分，同学们便冒着大雨赶到会场，在场工作人员为大家准备了各类开源软件纪念品供大家自行领取，此外，活动当天还为大家提供了月饼，在场的同学们共度中秋佳节。   2:30 分，活动正式开始，左格非同学首先登场作题为《开源通信软件的加密》的介绍。左格非同学先介绍了 Telegram 软件及其安全、非商业化等特点。接着，左格非分别介绍 Telegram 在正常通信和私密通信时所使用的协议。从非对称密钥谈起，逐步深入，提到消息的识别，防止重放攻击等内容。在场同学认真倾听。接着，左格非介绍了 GPG 的基本原理，同时为大家介绍了 LUG 提供的新服务——GPG Key Server。接下来，同学们踊跃提问，现场氛围十分热烈。      在 5 分钟的茶歇后，由 Canonical 的李彬工程师为大家介绍《Ubuntu 和 Gnome 的桌面环境》。李彬工程师从一张涵盖多个开源软件 LOGO 的图开始，娓娓道来桌面环境的历史与未来发展。接着，李彬现场演示了在 Gnome 环境下开发插件的方法。最后，演讲在热烈的掌声中结束。      5 分钟的茶歇时间，大家围在李彬工程师身旁，争相试用 Ubuntu 手机和平板电脑。座位被围得水泄不通。      下一场报告是左格非同学为大家介绍“出国网络加速服务的实现”。左格非同学从最普通的 socks 代理开始，逐步深入，介绍了 GRE 隧道，kcp tunnel 等最新技术。接着，左格非同学介绍了用户访问控制的实现——Freeradius，其提供了认证、授权、计费的功能。然后，左格非介绍了多种用户接入 VPN 技术——PPTP, L2TP/IPSEC, OpenVPN, IKEv2，并比较了他们之间的优劣。最后，左格非介绍了 LUG VPN 服务的申请和管理办法。   活动结束后，部分 Linux 用户协会成员自发的组织了中秋晚宴活动，和嘉宾一起共度中秋佳节。   本次活动参与者同往年相比较少，主要由于时间选择不当。中秋节许多同学有其它安排，时间冲突，以后再选时间要把类似的因素考虑进去。这三场演讲有深有浅，取材于大家经常使用的软件，能吸引大家的兴趣。另外活动的纪念品发放了不少，宣传 Ubuntu，Fedora，Deepin 的效果也不错。   感谢以下单位对本次活动的大力支持：      Canonical 提供了笔记本、马克杯、贴纸等纪念品   Fedora 中文社区提供了 Linux 体验光盘，徽章，贴纸   深度科技提供了手提袋、贴纸、安装光盘和 U 盘  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2016/09/2016-sfd-ustc/",
"teaser": null
},{
"title": "LUG 带同学们走进神秘的网络中心机房",
"excerpt":"2016 年 10 月 23 日上午，校学生 Linux 用户协会组织协会的同学们参观了校网络中心和超算中心。23 日 9 点整，就有 40 人等待在东区第五教学楼门口等待出发。      本次活动由协会的负责人带队，兵分两路，交叉参观。一路先行参观网络中心，接着与另一路交换，参观超算中心。   校网络信息中心坐落于第五教学楼东北角，一座紧邻着居民区的低调的小楼里。刚带领同学们走进网络中心的楼，就遇见了为我们介绍，带领我们参观的热情的张焕杰老师。   同学们呈扇形围绕在张老师身边，张老师亲切的为我们讲解了网络中心的职能，网络中心所进行的信息化建设，校园网的结构，以及对技术进行了探讨。         接着，张老师打开网络中心服务器机房的大门，同学们蜂拥而入，进入网络中心。张老师介绍说，学校的核心交换机就是下面这个 CISCO 设备      接着，张老师爆出惊人内幕“学校十多个 G 的出口流量全是从四台服务器上流过的，其中一台自 07 年以来就没有 down 过。”围绕在张老师身旁，张老师为我们详细介绍了机房的布置结构，其供电，网络等设施。接着，张老师与我们详细探讨了网络通的实现方法，以及西区频繁断网的原因——供电不足、电三楼空调设备老旧和其解决方法。      参观完网络中心，就和另一路同学互换，步行进入一个就在学霸们脚下但不惹人注目的地方——东区图书馆一楼参观超算中心。   超算中心李会民副主任早就等待在超算中心的门口等待着一行人的到来。刚一到，李老师便热情的给我们介绍起了超算中心的职能、超算中心机房的结构等内容，同学们认真听讲解。      接着，李老师为我们现场演示了服务器的维修，同学们亲自上阵，“友好“的练习了对服务器风扇、CPU 等部件的更换。      最重要的当然是走进机房了，在李老师的带领下，同学们走入机房对超算机群进行了参观。      最后，由衷的感谢张焕杰老师和李会民老师带领我们参观网络中心和超算中心。  ","categories": ["LUG 活动"],
"tags": ["LUG","USTC_LUG","网络中心","超算中心","服务器","网络通","李会民","张焕杰"],
"url": "/news/2016/10/visiting_network_center/",
"teaser": null
},{
"title": "2017 Linux 板版衫设计方案征集",
"excerpt":"又是一年毕业季～ Linux 板 &amp; USTC LUG 版衫企划启动啦！   跟往年一样，首先征集设计方案。5 月底将通过投票选出最受欢迎的设计方案，并启动预订。6 月份毕业生离校前完成版衫制作和发放。   设计要求      主题：Linux 与自由软件，体现瀚海星云 Linux 板或 USTC LUG 特色   底色：不限，建议至少包含白色、灰色设计方案   图案：正面或双面图案（可设袖标），提交图案分辨率不低于 300DPI，并附简单效果图说明图案位置。   授权：投稿作品默认以 CC BY-SA 4.0 协议发布。如果选择其他授权，则应确保作品可以在 CC BY-SA 协议下再发布。   可以参考一下往年的版衫设计方案。   投稿方式      方式 1：回复瀚海星云 BBS 的征集贴，以附件形式附上设计图   方式 2：发邮件至 lug@ustc.edu.cn，标题「2017 版衫设计方案投稿」   方案选择   若方案多于 1 种，则通过投票来选出最终方案。投票将在方案征集后一周进行。   奖励      被选中方案的设计者可免费获得两件 2017 Linux 板版衫。   得票前 6 名的其他未选中方案，设计者可免费获得一件 2017 Linux 板版衫。   征集时间   即日起至北京时间 5 月 14 日（周日）23:59:59。  ","categories": ["LUG 活动"],
"tags": ["LUG","版衫"],
"url": "/news/2017/05/2017-bbs-linux-banshan/",
"teaser": null
},{
"title": "2017 Linux 板版衫候选方案公布与投票",
"excerpt":"2017 年 Linux 板版衫设计方案出炉啦！经过一周的征集，本次共获得了两份投稿的设计方案，将通过投票决定最终制作的版衫样式。   BBS 投票页面联动：点我前往   候选方案展示   版衫候选设计方案详细图片请见LUG FTP 页面（https://ftp.lug.ustc.edu.cn/%E7%89%88%E8%A1%AB/2017banshan/voting/）。   方案一：Kernel Panic                     方案二：Simple and Stupid      背面样式与方案一相同。     投票参与方式      填写问卷星问卷进行投票：http://tp.sojump.cn/jq/14217611.aspx；   在瀚海星云 BBS 上回复帖子进行投票；   两个途径将会合并计票，请勿重复投票。   投票截止时间：2017 年 5 月 25 日 23 时 59 分（北京时间）     常见问题   颜色选择？   当年设计（方案一、方案二）暂定白、蓝、黑。往年版衫复刻需要根据具体设计重新配定颜色。   订购开始日期？   投票结束后会开始着手联系厂家制作并搜集订购信息。   版衫何时能到手？   应当在 7 月之前，我们会争取在毕业生离校前完成。   我不是科大学生/教工，可否投票？   只要您有购买的意愿，可以的。   我不在合肥，版衫国内快递订购是否可能？   有可能，可能性较大。   我不在境内，版衫跨境订购是否可能？   有可能，可能性较小。   定价？   与具体生产厂家相关，但一般不会超过 50 元/件。  ","categories": ["LUG 活动"],
"tags": ["LUG","版衫"],
"url": "/news/2017/05/2017-bbs-linux-banshan-voting/",
"teaser": null
},{
"title": "2017 Linux 板版衫投票结果公示",
"excerpt":"经统计，2017 年版衫投票结果如下：                  方案名       问卷票数       BBS 票数       合计                       方案一       48       4       52                 方案二       34       0       34                 2010 年重制       13       7       20                 2015 年重制       5       1       6                 2012 年重制       3       0       3                 2011 年重制       4       0       4                 2008 年重制       0       0       0                 2007 年重制       2       0       2                 总计       109       12       121           根据以上情况，今年将按照方案一进行制作。具体预订登记方法将稍后发布。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2017/05/2017-bbs-linux-banshan-voteresult/",
"teaser": null
},{
"title": "2017 Linux 板版衫预订开始！",
"excerpt":"经过紧张的投票，我们决定使用方案 1 作为今年版衫。   BBS 相同文章联动：点我   预订方法   即日起，我们将开始版衫预订工作，为版衫制作筹集足够的资金。   科大的同学预计 6 月 18 日前可以收到货。校外同学请准确填写快递地址。   定价   版衫定价：50 元（一口价）   自提不收运费，快递运费到付   截止日期   截止日期：2017-6-6 23:59   预订方法      转账到支付宝帐号 crtmike (At) hotmail.com 姓名：马凯；头像为浑天仪。建议备注姓名 + 手机号以便追溯！   填写表单 https://t.cn/RSfG5md 如果购买多件烦请分别多次填写！   预订说明      目前暂定在 T 社（tshe.com）制作版衫。底衫如无意外会在 https://www.tshe.com/styles/2 和 https://www.tshe.com/styles/4 两款底衫中选择一种。我们会选择单件 50 元以内最好的棉质底衫制作版衫；   出于成本考虑，每种颜色订单数大于 10 件才会制作；   如订单无效或未制作，转账将在 6 月 20 日前原路返还；   如单件价格低于 50 元，结余资金将作为 USTC LUG 社团经费，公开使用情况。   如果有其他问题，请咨询：   LUG 邮箱：lug (at) ustc.edu.cn   负责人 QQ：515166698   设计图展示                    ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2017/06/2017-linux-banshan-preorder-start/",
"teaser": null
},{
"title": "LUG LOGO 征集活动",
"excerpt":"中国科学技术大学校学生 Linux 用户协会（简称 LUG）拟更换社团 LOGO，现采用征集活动的形式向全校师生，校友及所有开源社区的朋友征集 LOGO 设计方案，欢迎大家积极参与！     设计理念   LOGO 对于 LUG 的校内和校外形象有着重要的作用，它将用于以下用途：           网站图标；            帐号头像；            宣传海报；            幻灯片；            版衫和其他周边；            对外合作       等。   LUG 作为包容开放的技术类社团，设计作品可以参考以下方面（不要求全部满足）：           体现自由软件精神；            契合自由软件社区氛围；            具有时代感和较强的艺术表现力；            表现 LUG 的社团风格、特色、历史积淀。       LOGO 要求简明，清晰，辨识度高，设计方案不得侵犯他人著作权。   提交内容           参加征集的作品可以是 PNG，JPG 等位图格式，也可以是矢量图格式或 PSD 等格式。也可以是简笔画，表现自己的创意即可。作品提交时还应附上对作品的设计解释。            注意：经评选后，最终选定的一等奖作品要求能够提供成品矢量图或者 PSD 文件，包括透明背景，深色背景，以及浅色背景三个版本，并至少有一个与 USTCLUG 文字搭配使用的示例，但成品的制作可以在征集活动结束后完成。       奖励办法           一等奖 1 名：数位板或移动硬盘（二选一或选择其他等值奖品），和印有新 LOGO 的一系列定制周边（版衫，水杯，贴纸，鼠标垫，徽章，钥匙链）；设计作品作为 LUG 的 LOGO 使用，并在 LUG 主页上保留设计者的信息；            二等奖 2 名：印有新 LOGO 的部分定制周边（版衫，水杯，贴纸，鼠标垫，徽章，钥匙链）；            三等奖 5 名：印有新 LOGO 的部分定制周边（贴纸，鼠标垫，徽章，钥匙链）。       征集时间安排   作品提交截至时间： 7 月 10 日 24:00   投稿方式   参与征集的作品发至邮箱：logo@ustclug.org           邮件主题：设计者学号（若没有学号，需表明自己的身份，如教师标明教师）+ 姓名            邮件附件：设计作品（成品或简笔画）       版权归属   评选后选定的作品的知识产权和使用权归中国科学技术大学学生 Linux 用户协会和设计者共同所有，设计者不得私自转让或它用。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2018/05/lug-logo-collect/",
"teaser": null
},{
"title": "首届学生开源年会将在重庆召开！",
"excerpt":"   学生开源年会 Students Open Source Conference，简称 SOSCON，是国内首个面向学生的开源技术大会。SOSCON 是一个纯社区非商业非盈利的开源大会，票价全部免费，并且对学生讲者进行补助。     大会旨在鼓励学生享受开源、了解开源、参与开源、贡献开源，每年在不同城市轮流举办，从演讲者、组织者、志愿者到听众，绝大多数都为在校学生，包括中学生、大学生和研究生。联合创始社区包括：重庆大学 CONTINUE、清华大学 TUNA 协会、中科院开源软体协会、中科大 LUG、西南大学开源协会等、台湾大学开源会、重邮开源协会。   SOSCON 是中国大陆首届面向学生的开源会议，从演讲者到工作人员到听众几乎全部为学生，享受开源乐趣，参与开源贡献。关于畅想未来这件事，我们学生更有感觉。期望通过这次会议，分享开源精神，拓展与会者的视野；开源是一种精神，每位与会者，都是拥有贡献精神、乐于为社会付出的种子。期望今天的学生能成长为明日的参天大树，传承开源贡献的精神，传承理想主义的情怀，共同为推动社会的进步而无私努力。   参与方式   请访问 https://soscon.top/apply 申请入场券。   时间地点   SOSCON 2018 将于 2018 年 6 月 9 日 - 10 日在重庆大学 A 区（重庆市沙坪坝区沙正街 174 号）主教学楼三楼会议中心举行。学生可在大会官网获取入场券。   大会主办：开源工厂   大会官方网站：https://soscon.top   现场凭票签到还可领取首届学生开源年会纪念书签一套   更多信息   电报群：t.me/soscon   QQ 群：202790710   开源工场联系方式   Weibo：http://weibo.com/openingsource   Facebook：https://facebook.com/openingsource   Twitter：https://twitter.com/openingsource   Google +：https://google.com/+OpeningSource  ","categories": [],
"tags": [],
"url": "/news/2018/05/SOSCON18/",
"teaser": null
},{
"title": "服务器宕机通知",
"excerpt":"2018-06-16 UPDATE3:   目前以下服务已经恢复正常：      主页 (wiki)：https://lug.ustc.edu.cn/ （已恢复）   代码托管平台：https://git.ustclug.org/ （已恢复，建议用户切换新地址：git.lug.ustc.edu.cn）   LUG FTP：https://ftp.lug.ustc.edu.cn/ （已恢复）   反向代理：*.proxy.ustclug.org（已恢复）   如果您使用上述服务时遇到问题，请向我们反馈。   2018-06-15 UPDATE2:   目前以下服务已经恢复正常：      主页 (wiki)：https://lug.ustc.edu.cn/ （已恢复）   代码托管平台：https://git.ustclug.org/ （已恢复，建议用户切换新地址：git.lug.ustc.edu.cn）   LUG FTP：https://ftp.lug.ustc.edu.cn/ （已恢复）   由于网络架构的变化，部分服务需要您的 DNS 缓存过期后得到新的解析结果才能生效，这依赖于您的网络环境，您也可以尝试手动刷新缓存。维护期间服务的稳定性有下降，这是正常现象，如果您在使用中持续遇到问题，请联系我们。   从数据备份中恢复数据并没有计划中的这么一帆风顺，我们仍在努力恢复受影响的各项服务，接下来的工作计划是按照以下顺序继续恢复服务：      反向代理：*.proxy.ustclug.org   网络加速服务   VPN 在线申请系统   轻量级网络加速服务   给您带来的不便敬请谅解。   2018-06-14 UPDATE1:   初步的调查结果显示，此次宕机事件原因是虚拟机宿主机 3 号节点上的一块年代久远的硬盘因为老化或其他原因出现问题，导致该节点上运行的虚拟机全部宕机，并且导致该节点也无法被虚拟机集群控制，其上运行的虚拟机亦无法直接的迁移。   目前的修复方案是从我们的数据备份中恢复重要的服务到没有受影响的节点上重新运行，恢复备份和重建原有的网络环境还需要一段时间，给您带来的不便敬请谅解。     今天早些时候（2018-06-14 00:40 左右），由于我们的虚拟机宿主机 3 号节点的某些问题，LUG 内网包括网关与统一认证在内的部分关键服务器宕机，进而导致一部分服务不能正常提供，我们已经知悉并且开始处理这些问题。   以下服务因为此事件暂时不能正常运行，正在抢修中：      代码托管平台：https://git.ustclug.org/ （已恢复）   网络加速服务   防污染 DNS   主页 (wiki)：https://lug.ustc.edu.cn/ （已恢复）   反向代理：*.proxy.ustclug.org（已恢复）   VPN 在线申请系统   轻量级网络加速服务   服务器统一认证：ldap.ustclug.org   内网 VPN   LUG FTP：https://ftp.lug.ustc.edu.cn/ （已恢复）   Ganglia 监控：https://status.ustclug.org/   LDAP 配置管理系统（GOSA2）   以下服务暂不受此次事件影响：      开源镜像站（HTTP 访问）：https://mirrors.ustc.edu.cn/   开源镜像站（定时同步；rsync、FTP 访问；帮助页面）：https://mirrors.ustc.edu.cn/   权威 DNS：ns-a.ustclug.org. ns-b.ustclug.org. ns-c.ustclug.org.   网络启动：pxe.ustc.edu.cn   图书馆透明计算系统   PGP 密钥同步：https://pgp.ustc.edu.cn/   受影响服务的恢复时间有待我们进一步查明事件原因后给出，给您带来的不便敬请谅解！   USTCLUG   2018-06-14 01:10:50  ","categories": ["LUG 服务器"],
"tags": [],
"url": "/news/2018/06/server-down/",
"teaser": null
},{
"title": "2018 秋季学期新生活力课程",
"excerpt":"2018 年 8 月 25 号（星期六）晚，中国科学技术大学学生 Linux 用户协会（简称“协会”）在我校西校区 3A306 教室开展了本学期第一次新生活力课程，约 100 名同学参与了本次活动。   协会的本次新生活力课程主要面向面向才入学的大一新生，以“让大学生活效率腾飞：常用网络资源介绍”和“Linux：你所知道的与不知道的”为主题。前者主要介绍中科大校内的实用网络资源和一些校外的一些免费或付费资源，以帮助新生尽快提高学习效率，享受网络带来的便捷，后者通过对 Linux 和一些优秀桌面应用的介绍，为大家揭下 Linux 的神秘面纱，让大家看到一个更有趣的 Linux。      第一部分由社团 COO 任正行同学主讲。课程中介绍的网络资源将包括校内上网途径，学校购买的 Windows / Linux / macOS 下的各种正版软件，图书馆资源，论文数据库等;还有自助打印，GitLab，一卡通系统，中国最大的开源软件镜像站等服务。         中场休息时协会 CEO 何纪言解答大家的问题，并且简单介绍了我们协会的主题，日常活动，维护的服务，交流方式等。      第二部分是协会 VP 李文睿同学主讲。讲解了 Linux 是一套开源，自由，强大，有趣的操作系统，1991 年由芬兰大学生 Linus 开发，由于其开源的特性，任何人都可以对其作出贡献。Linux 出现近 30 年，现在早已广泛应用在各个领域。      台下的同学们认真的听讲，不时提出问题与主讲人互动。期间协会副会长马凯同学还解答了大家关于邮件列表的问题，协会副会长曾明亮还为大家解答了电脑选购的部分疑问。      本次活动我们还为新生同学们提供了自助饮料和纸杯。   活动结束后大家主动清理了教室并带走垃圾，本次新生活力课程圆满结束，感谢校团委，校学生社团管理指导委员会和计算机科学与技术学院团委的支持！   活动照片和讲稿：LUG FTP  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2018/08/freshman-course/",
"teaser": null
},{
"title": "LUG LOGO 征集结果",
"excerpt":"感谢同学们和开源社区的朋友们对我们 LOGO 征集活动的支持！     经过一段时间的征集和评选，我们得到了如下 LOGO 征集活动的结果：             一等奖 : Archlinuxcn 成员张盛宇            二等奖 : 崔灏，严鲸鲸            三等奖 : 薛瑞，蔡文韬，王若晖，王瑞，鲁吴越       在选出一等奖后，我们与获得一等奖的张盛宇先生进行了一系列关于 LOGO 细节修正的讨论，最后决定出了我们的 LOGO：                                                原版       带文字           LOGO 下载地址：logo.zip   根据我们的奖励办法，获得上述奖项的同学将获得印有新 LOGO 的定制周边等奖品，新 LOGO 已经选出，周边等奖品正在制作中，请获得奖品的同学耐心等待，奖品制作出之后我们会联系大家。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2018/09/lug-logo-collect-result/",
"teaser": null
},{
"title": "2018 软件自由日中国科大站",
"excerpt":"2018 年 9 月 15 日下午，2018 年软件自由日（SFD）中国科大站活动在西校区 3C103 教室成功举办。   本次活动我们有幸邀请到了来自 Linux foundation 的 Xu DiXing 和中国科学技术大学网络信息中心的张焕杰老师。Xu DiXing 为我们介绍了《A Hands-On Tutorial on using fabric-sdk-py and writing your first dapp with fabric》，张老师也做了《科大网络原理和 IPV6 介绍》，Linux 用户协会副会长马凯同学为大家介绍了《我已阅读并同意：软件许可证简介》，深受在场同学的欢迎。   不到 2:30 分，同学们便陆续赶到会场，在场工作人员为大家准备了 LUG 徽章等一些纪念品供大家自行领取。       2:30 分，活动正式开始，LUG CEO 何纪言同学先介绍了今年软件自由日的日程安排，赞助本次软件自由日的组织和闪电演讲的报名等。之后由中国科学技术大学网络信息中心的张焕杰老师给我们带来《科大网络原理和 IPV6 介绍》的讲座。张老师的讲座分中国科大校园网络简介，安徽省教育科研网简介，及校园网 IPV6 应用于管理三部分。在讲座中张老师还提及，校园网是没有防火墙的，但通过 IP 黑名单系统等措施使得校园网还是非常安全。由于讲座有很多相关校园网的问题，讲座结束后，很多同学积极提问，张老师也相应地作出了回答。        张老师的演讲结束后，由 Linux foundation 的 Xu DiXing 为我们介绍 Linux foundation 的 Hyperledger 项目，这是一个开源账本项目，由于内容较难，很多同学并不是很理解讲座的内容。       在茶歇时间，大家来到前面的桌子上取用我们准备的小零食，我们也趁此时间抽奖。我们根据签到表上的序号，使用 random.org产生随机数来抽奖。奖品为一些赞助组织提供的文化衫，由于衣服的数目较多，很多同学都中了奖。     下一场报告是马凯同学为大家介绍《我已阅读并同意：软件许可证简介》。马凯同学首先由大家熟知的“我已阅读并同意”开始，很多人安装软件时都不会仔细查看那些许可协议，而这真的安全吗？如何避免这种问题？由此引出了自由软件和开源软件的概念。两种概念又有区别，马凯同学又通过自己编造的一个“MLL (My Little License)“来说明开源软件不一定自由，而且相应地强调了查看许可协议的重要性。马凯同学的讲座通过丰富的例子向同学们阐释了开源软件，自由软件以及软件许可证等概念。    最后进行的是自由报名的闪电演讲。首先是宋一凡同学作了关于开源与大科学装置的演讲。大科学装置 (Large Scientific Facilities) 即一些规模很大的用于科学研究的装置，比如中国科大同步辐射实验室的加速器等。而这些装置，据宋同学阐述，很多都使用开源的引擎。然后就是郑子涵同学对开源订阅软件 Subscribe to anything 作出的一个简短的介绍。   感谢以下单位对本次活动的大力支持：      Canonical 提供了文化衫、贴纸等纪念品   深度科技提供了贴纸、钥匙链、活页本等纪念品   开源工场提供了文化衫、礼品袋等   谋智火狐提供了公仔和帆布袋和贴纸  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2018/09/2018-sfd-ustc/",
"teaser": null
},{
"title": "中国科学技术大学第五届信息安全大赛圆满结束",
"excerpt":"2018 年 10 月 16 日中午，随着分针滴答滴答地与时针在 12 点处重合，网站提交答案的窗口关闭，也宣布着第五届信息安全大赛落下帷幕。   本次比赛中，共有 4000 多人次线上报名参赛，2600 多人至少完成了一道题，参与人员涵盖校内外，分别来自于清华大学、北京大学、中国科学院大学等 91 所国内高校，以及几所海外高校。其中来自清华大学的同学获得总榜的第一名，最终以 6750 分结束比赛，中国科学技术大本科生选手邓龙以总分 4050 分获得校内榜第一，总榜第十的好成绩。本次比赛校内参加人数众多，共计 424 名本科生参与，139 名研究生博士生参与。   经过赛后主办方的统计，最终确定了获奖名单，并为校内参赛的同学颁奖。2019 年 1 月 3 日晚，第五届信息安全大赛颁奖仪式在西区举行，校内冠军邓龙荣获一等奖，付佳伟、莫子铭、徐一凡、贺泉、杨荣琛五位选手获得二等奖，还有王若麟等二十五位选手获得三等奖。此外还专门设置了面向大一新生的新生特别奖两名，分别为高泽豫和林焕承，面向女生的 Ada 奖一名，获奖者为林元芃。           自 2014 年起，科大信息安全大赛已经连续举办了五届，往届比赛均顺利进行，规模盛大，影响甚广。第五届信息安全大赛由中国科学技术大学网络空间安全学院、中国科学技术大学校团委、中国科学技术大学管指委主办，中国科学技术大学学生 Linux 用户协会、中国科学技术大学微软学生俱乐部等承办，并由南京大学微软学生俱乐部、湖南大学微软学生俱乐部等协办。本次比赛相比之前规模更大，参与人员更多，并邀请了更多国内高校参赛，旨在给国内高校的同学们提供一个学习交流的平台。并延续了往届的优良传统，努力结合科大特色，坚持向新生倾斜的原则，控制题目难度梯度，强调引导和教育工作。   本次比赛的题目在具有一定教育意义的同时也不失趣味性。题目“猫咪问答”让参赛选手在做题的过程中了解了科大的一些建校历史和 60 周年校庆知识，也向外校的选手宣传了科大；而有趣的“黑曜石浏览器”一题更是在知乎引起了热议。   赛后承办方组织参赛选手于网上 https://github.com/ustclug/hackergame2018-writeups 撰写了题目解答，并可在 https://hack2018.lug.ustc.edu.cn/ 上继续查看题目和提交。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2019/01/hackergame-awards/",
"teaser": null
},{
"title": "Linux 101 第一课暨 Linux 安装聚会成功举办",
"excerpt":"2019 年 3 月 10 日下午，由中国科大学生 Linux 用户协会承办的 Linux 101 第一课暨 Linux 安装聚会活动在西区 3C101 教室顺利举行。   在中国科大，同学们的学习和科研生活中都要广泛地接触 Linux 系统。Linux 101 是中科大 Linux 用户协会成员面向全校开设的长期课程，课程以应用角度出发，带领大家从零开始了解开源 Linux 系统并学会初步应用。Linux 安装聚会是多人集体安装 Linux 的线下活动，旨在由经验丰富的 Linux 用户帮助新手快速且“无痛”地完成 Linux 操作系统的安装。    下午 14:00，何纪言同学对同学们简单地介绍了 Linux 101 以及 Linux 用户协会，之后由李嘉豪同学作了“Linux 101 序–遇见 Linux”的演讲，也就是 Linux 101 第一课。在演讲中，李嘉豪同学介绍了什么是 Linux，它的发展历史，以及一些自由软件相关的知识，并进行了 WSL 和 Ubuntu 虚拟机的演示。    下午 15:00 左右，Linux 安装聚会开始。到场的同学很多，由于同学们的计算机品牌，硬件条件等有所不同，安装过程中不免遇到一些问题，而且由于人数较多，为同学们安装 Linux 的志愿者们忙得不可开交。    下午 16:30 左右，大部分同学已经安装好系统，由于安装过程中出现了问题的同学仍在忙碌，这时已经完成安装工作的同学为他们出谋划策。    下午 17:30 左右，基本所有的同学都完成了 Linux 系统的安装。参加活动的同学对协会志愿者表示了感谢，对活动予以了好评。今后的 Linux 101 课程将会更加深入地介绍 Linux 的使用以及一些原理，拥有了一个 Linux 操作系统将会使同学们在今后的 Linux 101 课程中能够方便地实践学习，学会 Linux。快速学会使用 Linux。同时，也希望同学们利用这次安装 Linux 的经验帮助身边的同学完成 Linux 安装，促进 Linux 和开源软件在中国科大的普及，弘扬自由软件精神！   （校团委、校学生社团管理指导委员会、Linux 用户协会）  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2019/03/linux-install-party/",
"teaser": null
},{
"title": "2019 Linux 板版衫设计方案征集",
"excerpt":"又是一年毕业季～ Linux 板 &amp; USTC LUG 版衫企划启动啦！   跟往年一样，首先征集设计方案。4 月底将通过投票选出最受欢迎的设计方案，并启动预订。6 月份毕业生离校前完成版衫制作和发放。   设计要求      主题：Linux 与自由软件，体现瀚海星云 Linux 板或 USTC LUG 特色   底色：不限，建议至少包含白色、灰色设计方案   图案：正面或双面图案（可设袖标），提交图案分辨率不低于 300DPI，并附简单效果图说明图案位置。   授权：投稿作品默认以 CC BY-SA 4.0 协议发布。如果选择其他授权，则应确保作品可以在 CC BY-SA 协议下再发布。   可以参考一下往年的版衫设计方案。   投稿方式      方式 1：回复瀚海星云 BBS 的征集贴，以附件形式附上设计图   方式 2：发邮件至 lug@ustc.edu.cn，标题「2019 版衫设计方案投稿」   方案选择   若方案多于 1 种，则通过投票来选出最终方案。投票将在方案征集后一周进行。   奖励      被选中方案的设计者可免费获得两件 2019 Linux 板版衫。   得票前 6 名的其他未选中方案，设计者可免费获得一件 2019 Linux 板版衫。   征集时间   即日起至北京时间 4 月 28 日（周日）23:59:59。   参考   LUG 相关素材  ","categories": ["LUG 活动"],
"tags": ["LUG","版衫"],
"url": "/news/2019/04/2019-bbs-linux-banshan/",
"teaser": null
},{
"title": "2019 Linux 版衫预订开始",
"excerpt":"经过版衫方案投票结果（2019 Linux 板版衫候选方案公布与投票），我们最终确定了 2019 Linux 版衫样式，并从即日起开始接受预定。   经过统计，包括微信公众号、BBS 等渠道所有投票中，方案二 Style 1 以 25.7% 的票数位居第一，恭喜设计者陈同学，也非常感谢其他投稿的同学。   我们与作者和供应商 T 社（tshe.com）沟通后决定制作黑色，白色，蓝色三种底色版本，效果图如下：   黑色版：      白色版：      蓝色版：      （前印花宽 19.4cm，高 25cm，距离领口 8cm；后印花宽 15cm，高 10.9cm，离领口 8cm）   预定说明   版衫定价：50.00 元/件   付款方式：支付宝转账（详见预定表单）   预定截止时间：2019 年 6 月 21 日 23:59:59 (UTC+8)   注意事项：      在校同学可以在到货之后自提，时间不限（如：暑期和下学期）。不在校的同学请填写准确的邮寄地址，我们将在收到版衫后统一以快递到付寄出（预计 6 月 27 日，较晚预订的同学可能会晚些收到）；   预定和付款同时进行，请在填写表单后尽快完成支付宝转账，备注信息填写预定者手机号；   如订单无效或未制作，付款将全额原路返还；   如需预定不同尺码，请多次填写表单；   出于成本考虑，每种颜色订单数大于 10 件才会制作；   按照投票人数估计，单件制作成本约为 50 元，如因预定数量提高，单件价格最终低于 50 元，则结余资金将作为 USTC LUG 社团经费，并公开使用情况；   任何问题请及时通过 goods@ustclug.org 和我们联系，预定截止后恕不接受退款。   预定方式：点击链接 https://www.wjx.cn/jq/41165916.aspx 填写，或扫描以下二维码预定。      更新：预定截止时间已由 6 月 18 日周二延至 6 月 21 日周五，发货时间也相应推迟；如果需要更改收货地址或有其他问题，请通过邮件联系我们：goods@ustclug.org     附 1：投票结果                  方案       票数       比例                       方案一       23       8.5%                 方案二 style 1       70       25.7%                 方案二 style 2(A)       45       16.5%                 方案二 style 2(B)       64       23.5%                 方案三       15       5.5%                 方案四       20       7.4%                 方案五       30       11.0%                 2017       2       0.7%                 2009       2       0.7%                 2015       1       0.4%           附 2: 尺码规格   ","categories": ["LUG 活动"],
"tags": ["LUG","版衫"],
"url": "/news/2019/06/2019-bbs-linux-banshan-preorder-start/",
"teaser": null
},{
"title": "2019 秋季学期新生活力课程",
"excerpt":"2019 年 8 月 31 日与 9 月 7 日，USTCLUG 在西校区的 3A110 教室开展了本学期的新生活力课程。   新生活力课程面向入学不久的大一新生。第一次新生活力课程以 Linux 为主题，上半场是由李文睿同学主讲的《Hello, Linux》，他从 Linux 的发行版、日常使用以及命令行等方面对 Linux 操作系统进行简单介绍，希望能够让同学们通过本次讲座了解 Linux；下半场是龚平同学的《Why learn Linux?》讲座，他从现今 Linux 应用情况，结合科大同学未来的学校生活和工作情况，介绍 Linux 系统的重要地位以及学习 Linux 的趣味性，希望能够激发同学们学习 Linux 的乐趣。         考虑到大部分科大新生都还没接触过 Linux 系统，我们专门将一台笔记本安装了 Linux 系统，带去课堂，给大家实机展示，并鼓励大家上手操作。讲座结束的提问环节，大家非常积极踊跃，提出了一系列不仅仅关于 Linux 还有将来四年的学习生活的问题。讲座结束，还有许多同学意犹未尽，希望可以进一步了解什么是 Linux，什么的是自由软件精神，并且希望能稍微了解 Linux 用户协会，我们就带他们去参观 Linux 用户协会的活动室。在活动室中，我们详细回答了关于 Linux 的种种问题。有一位对 Linux 特别感兴趣的同学从现场借走一本关于 Linux 的书籍。直到晚上 10 点左右，所有人才离开 LUG 活动室。   第二次新生活力课程以网络资源与信息安全为主题。上半场为由高泽豫同学带来的《让大学生活效率腾飞：常用网络资源介绍》。他介绍了中科大校内使用过的网络资源和一些校外的免费或者付费资源，帮助新生可以快速的使用学校的基础服务设施，提高学习工作生活效率。讲座下半场是陶柯宇同学的《日常生活的信息安全》。陶柯宇同学给大家科普了一些基础的网络知识，介绍了常见的信息安全漏洞，并提供了一系列防治措施，希望提高同学们网络风险的防范意识。特别是在万物互联，万物智能的物联网时代，网络风险的防范意识给格外的重要。同时，此次新生活力课程由于少院同学因院系安排无法参加，我们设置了直播与录播。         最终，本次新生活力课程圆满结束，感谢校团委，校学生社团管理指导委员会和计算机科学与技术学院团委的支持！   活动照片和讲稿：   第一次新生活力课程   第二次新生活力课程  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2019/09/2019-freshman-course/",
"teaser": null
},{
"title": "2019 软件自由日中国科大站",
"excerpt":"2019 年 9 月 21 日下午，2019 年软件自由日（SFD）中国科大站活动在西区 3C102 教室顺利举办。   本次活动我们邀请到了校友沈达以及王子博同学和刘紫檀同学为我们带来了精彩的演讲。其中沈达为我们介绍了《GNU TeXmacs: A Free Scientific Editing Platform》，王子博为我们介绍了《开源密码管理器 KeePass》，刘紫檀为我们介绍了《从 Makefile 到 Conan：手把手教你构建 C/C++ 项目》。   在活动开始前同学们陆续到达会场。LUG 为大家提供了一些徽章、贴纸等纪念品以及食物，供大家自行领取。      下午 2:30 活动正式开始。首先是由 LUG 的执行会长陶柯宇同学为大家介绍软件自由日、USTCLUG、本场软件自由日的日程安排，以及闪电演讲等事项。      在简短的介绍后就是校友沈达为大家带来《GNU TeXmacs: A Free Scientific Editing Platform》。TeXmacs 是一个为编写优雅美观的科技类文档而制作的编辑器，有 TeX 和 Emacs 的特点。沈达向大家介绍了 TeXmacs 的一些特性，例如方便的快捷键、导入导出 TeX 格式、调用其他数学计算程序的计算结果、使用 kbd-map 自定义宏等，并且介绍了 TeXmacs 的未来规划，以及他为改进 TeXmacs 编辑中文文档的体验上作出的努力。之后，很多好奇的同学都提出了相关的问题，沈达也一一作了回答。      之后由王子博同学向大家介绍 KeePass，在日常生活中管理网站密码，难道安全与易用不可兼得？密码管理器可以使二者得兼。KeePass 就是这样一款开源的密码管理器。之后，王子博同学还现场演示了 KeePass 的使用，介绍了 KeePass 的安全特性，最后还介绍了一些密码相关的小技巧。      在短暂的休息后，是刘紫檀同学对 C/C++ 项目构建系统的介绍。他从最简单的程序编译开始，一步步引入新的问题与解决方案，从最原始的编译的 Shell 脚本，到 Makefile，AutoTool 工具链，最后再到 CMake 和 Conan，举的例子很生动，并且提供了自己的电脑，以让现场的观众们当场实验。         最后是自由报名的闪电演讲。首先是陶柯宇同学向大家介绍了 Chisel 硬件编程语言，比较了 Chisel 与直接书写 Verilog 代码的优劣；付佳伟同学向大家介绍了静态网站生成器 Jekyll，指出有的时候 Jekyll 是比 Wordpress 等动态网站更好的方案；最后一项是李文睿同学介绍了开源游戏 Teeworlds，由于底层代码开源，开发者可以做出自己的定制，可玩性非常高。   感谢以下单位为本次活动的支持：      CodeWeavers 提供了 CrossOver 软件的激活卡片   深度科技提供了贴纸和活页本   Canonical 提供了贴纸  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2019/09/2019-sfd-ustc/",
"teaser": null
},{
"title": "中国科学技术大学第六届信息安全大赛圆满结束",
"excerpt":"2019 年 10 月 22 日中午 12:00，网站提交答案的窗口关闭，也宣布着第六届信息安全大赛落下帷幕。   经统计，在本次比赛中，总共有 2682 人注册，1904 人至少完成了一题。比赛期间所有人合计提交了 17098 次 flag，其中约 57.44% 为正确的提交。本次比赛由吉林大学、南开大学、北京邮电大学、重庆大学、哈尔滨工业大学和东北大学的计算机技术类及信息安全类的社团协办，此外还有来自其他高校的同学参加比赛。其中昵称为 Merg1n 的同学获得总榜的第一名，最终以 6400 分结束比赛；中国科学技术大学的本科生选手邓龙以总分 4200 分获得校内榜（不含已毕业同学）第一，总榜第 15 的好成绩。本次比赛校内参加人数众多，共计 395 人参与，其中有 297 名本科生。   经过赛后主办方的统计，最终确定了获奖名单，并为校内参赛的同学颁奖。2019 年 12 月 15 日晚，第六届信息安全大赛颁奖仪式在西区 3A112 举行，校内冠军邓龙荣获一等奖，胡航瑞、高泽豫、李永强、陈翊辉、汪若辰五位选手获得二等奖，还有陈泳融等二十五位选手获得三等奖。此外还专门设置了面向大一新生的新生特别奖两名，分别为陈泳融和谢亦秦，面向女生的 Ada 奖一名，获奖者为李静雯。此外，还颁发了一血奖和分类奖。               自 2014 年起，科大信息安全大赛已经连续举办了六届，往届比赛均顺利进行，规模盛大，影响甚广。第六届信息安全大赛由中国科学技术大学网络空间安全学院、中国科学技术大学校团委、中国科学技术大学管指委主办，中国科学技术大学学生 Linux 用户协会、中国科学技术大学微软学生俱乐部、中国科学技术大学 NEBULA 战队等承办，并由南开大学创新技术俱乐部、北京邮电大学微软学生俱乐部等协办。本次比赛延续了往届的优良传统，努力结合科大特色，坚持向新生倾斜的原则，控制题目难度梯度，强调引导和教育工作。   本次比赛的题目分为 4 类，包含了综合技能、程序逆向与漏洞利用、密码学与数学和网站安全类题目，在具有一定教育意义的同时也不失趣味性。例如，“宇宙终极问题”一题的第一小题与 9 月份科学家得到的丢番图方程 x^3 + y^3 + z^3 = 42 的解有关；“韭菜银行”一题有关区块链与智能合约的安全性；而“Flag 红包”一题通过流行的“成语接龙红包”的形式，带领选手了解图论、博弈论等算法知识。   赛后承办方组织参赛选手于网上 https://github.com/ustclug/hackergame2019-writeups 撰写了题目解答，并可在 https://hack2019.lug.ustc.edu.cn/ 上继续查看题目和提交。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2019/12/hackergame-2019/",
"teaser": null
},{
"title": "服务器宕机通知（已恢复）",
"excerpt":"2020-01-07 Update 3   代码托管平台 https://git.lug.ustc.edu.cn/ 已恢复正常。   2020-01-07 Update 2   以下服务目前仍有问题，正在抢修中：      代码托管平台：https://git.lug.ustc.edu.cn/   目前正常的服务：      主页 (wiki)：https://lug.ustc.edu.cn/   LUG FTP：https://ftp.lug.ustc.edu.cn/   反向代理：*.proxy.ustclug.org   校内网络加速服务   校内 VPN 在线申请系统   校内轻量级网络加速服务   服务器统一认证：ldap.ustclug.org   内网 VPN   Ganglia 监控：https://status.ustclug.org/   LDAP 配置管理系统（GOSA2）   开源镜像站（HTTP 访问）：https://mirrors.ustc.edu.cn/   开源镜像站（定时同步；rsync、FTP 访问；帮助页面）：https://mirrors.ustc.edu.cn/   权威 DNS：ns-a.ustclug.org. ns-b.ustclug.org. ns-c.ustclug.org.   网络启动：pxe.ustc.edu.cn   图书馆透明计算系统   如果您使用上述服务时遇到问题，请向我们反馈。     2020-01-07 Update 1   目前，科大校园网络已经恢复正常，故障原因可见 http://bbs.ustc.edu.cn/cgi/bbstcon?board=USTCnet&amp;file=M.1578332007.A。   我们正在确认目前受到影响的服务范围。     由于科大校园网络的未知故障，LUG 的所有网络服务现在处于不稳定状态。受影响服务的恢复时间暂时无法确定，给您带来的不便敬请谅解！   USTCLUG   2020-01-06 23:34:34  ","categories": ["LUG 服务器"],
"tags": [],
"url": "/news/2020/01/server-down/",
"teaser": null
},{
"title": "Linux 101 第一课在线上顺利举行",
"excerpt":"2020 年 3 月 15 日下午，由中国科大学生 Linux 用户协会承办的 Linux 101 第一课在线上顺利举行。   在中国科大，同学们的学习和科研生活中都要广泛地接触 Linux 系统。Linux 101 是中科大学生 Linux 用户协会成员面向全校开设的长期课程，课程以应用角度出发，带领大家从零开始了解开源 Linux 系统并学会初步应用。   受到疫情的影响，我们不得不在线上举行活动，并且暂停了往年会与 Linux 101 第一课一同开展的 Linux 安装聚会活动。并且，此次是我们第一次完全在线上举行活动。   在寒假期间，我们组织同学编写了活动系列讲义，存放于 https://101.lug.ustc.edu.cn/ 上。为了解决同学们学习 Linux 的配置环境问题，考虑到无法现场帮助同学们安装系统，在活动开始前，我们打包了一些 Linux 虚拟机镜像，在安装虚拟机软件之后就「开箱即用」。   下午 2:30，活动准时开始。金孜达同学开始向同学们介绍 UNIX 与 Linux 的发展历史，各个 Linux 发行版的基本区别，以及一些自由软件相关的知识，最后向同学们简单地介绍了学生 Linux 用户协会。在直播期间，活动直播间的「最高人气值」高达 3569，不仅有社团内的同学参加，也有很多社团外甚至校外感兴趣的同学过来参加。   在下午 3:55 时，活动正式结束。今后的 Linux 101 课程将会更加深入地介绍 Linux 的使用以及一些原理，拥有可操作的 Linux 操作系统环境将会使同学们在今后的 Linux 101 课程中能够方便地实践学习，学会 Linux。   本次线上活动的尝试不仅为未来的活动形式打开了新的可能性，并且从中也可见，尽管受到了疫情的影响，但是同学们仍然有迫切的学习 Linux，以及计算机技术的需求。我们之后也会做得更好。   （校团委、校学生社团管理指导委员会、Linux 用户协会）  ","categories": ["LUG 活动"],
"tags": ["Linux 101"],
"url": "/news/2020/03/linux101-online/",
"teaser": null
},{
"title": "「开源软件供应链点亮计划——暑期 2020」USTCLUG 项目提案",
"excerpt":"「开源软件供应链点亮计划」是由中国科学院软件研究所发起并长期支持一项活动，旨在解决基础开源软件面临的许可、质量、维护和技术支持等问题，进而影响整个软件产业的供应链。而「开源软件供应链点亮计划——暑期 2020」是由中科院软件所与 openEuler 社区共同举办的一项面向高校学生的暑期活动，旨在鼓励在校学生积极参与开源软件的开发维护，促进国内优秀开源软件社区的蓬勃发展。     此活动与 GSoC (Google Summer of Code) 的模式类似：开源项目/社区提供项目需求与导师 (mentor)；学生申请项目通过后利用暑期的时间进行开发，将成果贡献给社区；主办方（中科院软件所与 openEuler 社区）根据评估结果给学生发放奖金。所有参与的社区列表可查看 https://isrc.iscas.ac.cn/summer2020/#/organisations。   今年夏天，USTCLUG (中科大学生 Linux 用户协会) 计划以社区身份加入此暑期活动。以下是我们计划的项目提案，也欢迎社团的各位同学提出建议。   本提案参考了清华大学 TUNA 协会（清华大学学生网络与开源软件协会）的项目提案，在此表示感谢。   在报名前，请先阅读由主办方提供的学生指南。   科大镜像站前端架构改进   项目描述：目前，科大镜像站的前端架构仍然沿用着 2013 年的设计，但是随着时间的发展，我们也发现目前的镜像站前端架构在用户体验、维护与部署上带来了一些不便。目前的镜像站主页是由一套 Python 脚本每小时从模板生成得到的，虽然足够使用，但是在维护中也遇到了一些问题，诸如界面设计的实用性、主页与 status 页面显示不一致等问题。本项目希望能够通过调整镜像站前端架构，提高用户体验，降低维护的复杂度，也方便其他需要的镜像站部署页面显示的解决方案。   项目难度：低   项目社区导师：付佳伟   导师联系方式：ibug@ustclug.org   合作导师联系方式：陶柯宇 taoky@ustclug.org   项目产出要求：以下要求不需要全部达到，选择感兴趣的方向即可      调整页面结构，与 Nginx FancyIndex 结合，提供美观的文件列表页面   改进页面功能，提供准确的仓库最近更新时间（可以参考 status 页面）            为了得到准确的更新时间，需要能够与多种同步后端结合，包括科大镜像站目前使用的镜像同步工具 Yuki，以及传统的 crontab + 同步脚本的方式           与帮助页面更好的结合，例如            自动为新的帮助页添加首页上的链接           提升易用性，例如            提供一个各大发行版的软件源配置生成器，方便用户快速切换软件源           美化页面，例如            使用响应式设计在不同平台上都能提供良好的显示效果       提供对深色模式的支持           前端工程化，提高可维护性，例如            使用 Sass 或 LESS 重构 CSS 结构       使用 Vue.js 实现前端模板和（部分）动态页面效果       分离获取更新时间等仓库信息的这部分逻辑，更方便与其他数据源对接           改善部署文档，方便其他需要的镜像站部署   项目技术要求：      熟练一种方便灵活的编程语言及该语言常用的模板框架，例如            Python 和 Jinja2       Ruby 和 ERB           或者熟悉一种静态网站生成器的使用，例如            Jekyll       Hugo           熟悉 web 纯前端开发   相关的开源软件仓库列表：      https://git.lug.ustc.edu.cn/mirrors/mirrors-index   https://github.com/ustclug/yuki   License: GNU GPLv2   Hackergame CTF 比赛平台改进   项目描述：Hackergame 是 USTCLUG 开发的一套开源 CTF 比赛平台，主要用于每年举办的科大信息安全大赛，随真实需求不断进行技术迭代，并且重视生产环境下的安全性和可靠性。目前使用的是 Django + Vue.js 框架，但前后端解耦仍然不够充分，代码中写死了一些不合理的规则，很多地方缺少通用性和灵活性，测试和部署也不够方便。本项目希望能通过调整架构设计，重构部分代码，得到一个更加通用、健壮的比赛平台，让将来比赛中的实际需求更容易实现。   项目难度：中   项目社区导师：王子博   导师联系方式：hypercube@0x01.me   合作导师联系方式（选填）：暂无。   项目产出要求：以下要求不需要全部达到，选择感兴趣的方向即可      在不影响安全性和可靠性的前提下，用 Django REST Framework 重构后端，用现代前端工具链（Yarn、webpack 等）重构前端   增加自动测试、Docker 化部署、持续集成等工具   通过重构去除代码中写死的规则，如登录方式、参赛组列表、每个参赛组需要收集的个人信息   改正一些不正确的业务模型，如：            题目应该支持打开链接、下载源代码、下载文件等操作，而不是只能打开一个 URL       用户组、用户属性和权限的模型需要重新设计       比赛应该有尚未开始、正在进行、暂停、结束等多种状态，而不是只有开/关两种           增加一些新功能，如：            让出题、导入题目、审查题目、修改题目等操作更容易       所有操作保留历史记录以便审计和回滚       支持动态分数题目       支持 I18N           项目技术要求：      熟练使用 Python 和 Django   了解前后端开发和运维全过程   会避免常见的 web 安全漏洞   相关的开源软件仓库列表：      https://github.com/ustclug/hackergame   License: MIT   镜像站单副本对象存储   项目描述：   传统文件系统（如 XFS）、ZFS、RAID 等解决方案对于镜像站的负载类型来说并不高效：首先在用户读取文件时，RAID 会带来读取放大，在用户读取小文件时影响尤甚；其次文件系统的元数据无法确保一直缓存于内存中，从而使列目录等操作容易成为性能瓶颈。   而使用单副本的对象存储可以解决以上的两个问题：由于镜像站的数据更像是缓存，允许丢失，因此可以采用单副本的方式存储，免去冗余保护。坏盘后只需更新元数据删除对应的文件，触发增量同步即可；而关于元数据，在对象存储的实现中，大多使用数据库存放元数据，而数据库性能调优有许多成熟的工具和经验。这对元数据访问优化是比较有利的。   本项目的难点在于：对象存储的实现需要考虑坏盘更新元数据，删除对应文件，平滑过渡、平衡各个磁盘的读负载，避免负载集中在同一块磁盘上，以及使用 SSD 加速读取请求。目前开源的对象存储实现（如 OpenIO 和 minio）都无法很好满足需求；另外，下游的 rsync 同步会带来较高的并发量，fuse 可能会带来性能问题。   在工业界中，CDN 缓存的需求（数据可靠性不敏感、数据量大、吞吐量高）与本项目希望解决的问题也是类似的。   项目难度：高   项目社区导师：高一凡   导师联系方式：yifan@ustclug.org   合作导师联系方式（选填）：暂无。   项目产出要求：      基于现有的对象存储实现进行修改，支持以上提到的部分特性，包括：            坏盘更新元数据，删除对应文件，平滑过渡       平衡各个磁盘的读负载，避免负载集中在同一块磁盘上       SSD 加速读请求（可选）           测量下游的 rsync 同步为对象存储方案带来的性能影响。（可选）   服务器集群（可选）            使用单副本的方式，一旦磁盘故障，在下次成功同步之前，将会出现镜像不完整的问题。此时可以从集群中的其他节点获取数据。       镜像分级。对于不重要的镜像（或目录），可以在多个节点之间共享一个副本，从而提高可用空间，为更多镜像服务。           项目技术要求：      熟悉任何一种高性能的编程语言   能够阅读并理解现有对象存储的实现，以提出改进方案   对文件系统的实现有一定了解   相关的开源软件仓库列表：      https://www.openio.io (开源对象存储实现)   https://github.com/minio/minio (开源对象存储实现)   https://github.com/openstack/swift (开源对象存储实现)   https://rclone.org/ (S3 API fuse 实现)   https://github.com/kahing/goofys/ (S3 API fuse 实现)   License: 与指定修改的开源对象存储实现相同。   rsync 反向代理   项目描述：   镜像站通常会借助 rsync 协议，在上下游之间同步数据。在实践中，我们遇到的问题是：当有两台服务器分别存储不同的镜像内容（例如，一台存储热门内容，另一台存储冷门镜像），对外提供 rsync 服务时， 接入点无法统一。   本项目希望以反向代理 rsync 服务的方式解决此问题。 即：所有 rsync 请求通过一台统一的反向代理服务器，根据请求的 module name 代理至不同后端服务器。   项目难度：中   项目社区导师：高一凡   导师联系方式：yifan@ustclug.org   合作导师联系方式（选填）：暂无。   项目产出要求：      实现 rsync 反向代理            解析 rsync 握手协议       处理不同协议版本号间的兼容性           支持透明代理特性（可选）   项目技术要求：      对网络编程有一定了解   能够阅读并理解 rsync 工具源代码，理解其协议   相关的开源软件仓库列表：      https://git.samba.org/?p=rsync.git (原版 rsync)   https://github.com/tuna/rsync (TUNA 实现的 rsync，缓存元数据在内存中以减少磁盘开销。科大镜像站目前亦使用此版本的 rsync 为下游提供服务。)   License: 自定，OSI 组织认证的开源协议即可。注意：如果计划在完成项目时使用 rsync 的源代码，则协议需要使用 GNU GPLv3。  ","categories": [],
"tags": [],
"url": "/news/2020/05/opensource-summer-projects/",
"teaser": null
},{
"title": "近期部分服务中断通知（已修复）",
"excerpt":"2020-06-05 10:27 Update 5   ESXi 主机所在网段网络不稳定的原因已经查明，与网段内 ARP 包相关。目前已经修复。   此外，反向代理于 2 日进行了一些调整，详情见 https://github.com/ustclug/discussions/issues/325#issuecomment-637319675。   2020-05-31 22:45 Update 4   间歇性的网络问题仍然存在，我们将继续排查问题。   2020-05-31 14:09 Update 3   在校园网路由清空了内部转发表后，目前 ESXi 主机已经运行 7 小时而未出现网络问题。我们仍在监测问题是否已经解决。   2020-05-30 16:15 Update 2   我们注意到 ESXi 主机再次出现了间歇性的网络问题。包括 git.lug.ustc.edu.cn 在内的服务受到影响。我们正在尝试排查问题。   2020-05-26 23:10 Update 1   git.lug.ustc.edu.cn 目前已经恢复。     近期 USTCLUG 的一部分网络服务出现中断，具体情况如下：      *.proxy.ustclug.org（开源软件反向代理）与 servers.ustclug.org（服务器新闻站）的校外访问，24 日晚由于服务器月流量超额而暂停，具体情况见 https://github.com/ustclug/discussions/issues/325。在 6 月份服务恢复后，我们将对反代服务进行调整。   git.lug.ustc.edu.cn 于今日晚 22:24 由于 ESXi 主机的未知故障而下线。我们正在尝试修复。   2020-05-26 23:00:00  ","categories": ["LUG 服务器"],
"tags": [],
"url": "/news/2020/05/servers-down/",
"teaser": null
},{
"title": "新网站上线啦",
"excerpt":"经过多位成员连续多日的努力，Linux 用户协会的网站焕然一新。现在你所看到的页面正是我们新网站上线后的第一篇新闻。   新的网站采用 Jekyll 静态网站方案，基于 minimal-mistakes 修改的主题，并使用 GitHub Actions 自动构建，利用 webhook 通知服务器自动部署。   重新设计的网站架构带来了多方面的好处：      首先是更美观了：我们选用的主题既适用于首页等展示性页面，又适用于 wiki、文档、文章等内容性页面，同时还采用了响应式设计 (responsive design)，使得同一个页面在不同大小的屏幕上都能获得较好的显示效果   功能方面，我们终于将 wiki（即本网站）、news（社团新闻）和 planet（社团博客）合并到了一起，一定程度上解决了社团网站太多、内容过于分散、账号系统混乱的问题   基于 Git 的版本管理和协作更加方便：如同我们的旧新闻站，现在我们所有修改都有完整的历史记录，同时也能以 Pull Request 的形式接受投稿及修改建议   更易于维护及部署：纯静态的网站不需要维护数据库及 PHP 运行环境等，只需要一个能提供静态文件的服务器即可运行。我们采用了 OpenResty 作为 HTTP 服务器，在使用 Nginx 的同时还能通过 Lua 代码提供 webhook 相关功能   本网站的源码位于 ustclug/website，以 Creative Commons Attribution-NonCommercial-ShareAlike (BY-NC-SA) 4.0 协议开源。   原来的网站（wiki）已移动至 https://lug.ustc.edu.cn/oldwiki，旧新闻站仍保留在 https://news.ustclug.org/，其内容不再维护，留作存档。  ","categories": ["LUG 网站"],
"tags": [],
"url": "/news/2020/08/new-website/",
"teaser": null
},{
"title": "2020 软件自由日中国科大站",
"excerpt":"2020 年 9 月 26 日，USTCLUG 在西校区 3C103 教室开展了本学期第一个大型活动：软件自由日（Software Freedom Day）。   本次活动我们邀请了来自中科院软件所 PLCT 实验室的李威威，以及校内的陈泳融和明宇龙同学，为我们带来了精彩的演讲。   李威威为我们介绍了他所在的程序语言与编译技术实验室在编译技术领域进行的开源贡献。陈泳融同学带领我们走近 Swift 语言，了解 Swift 作为开源项目的发展进程和发展模式以及如何参与 Swift 项目与社区建设。Linux 用户协会 CTO 明宇龙同学向我们介绍了最近十分热门的 Rust 语言，并带领我们一步一步地使用 Rust 语言写出我们自己的内核。   不到 7 点，同学们便陆续来到教室。LUG 为大家提供了一些关于 LUG 和开源/自由软件的徽章、贴纸等纪念品以及饮料和零食，供大家自行取用。   武汉深之度科技公司（Deepin）给 LUG SFD2020 提供了贴纸、钥匙扣等纪念品，在此表示感谢。         七点整，软件自由日活动开始。   首先是 Linux 用户协会会长袁一玮介绍了今年软件自由日的日程安排以及闪电演讲的报名等事宜，之后便正式开始了今天的自由软件日活动。      首先是来自 PLCT 的李威威，他首先介绍了程序语言与编译技术实验室的背景，讲述了实验室的主要工作与目标。其次，他介绍了他们实验室的 RISCV 轻量级模拟器 spike 和 QEMU 的 RISCV vector v0.9 支持上所做的工作，这些都已经在 GitHub 上面开源，供大家修改、审计以及添加需要的功能。在结束后，李威威对同学们的问题一一做出了回答。         同时，我们在两场演讲的间隔中准备了零食与饮料供大家补充能量。         第二位演讲者是陈泳融，他带我们走近了 Swift 语言，首先介绍了苹果开源社区现状。   在 2015 年时，苹果拥抱了开源社区，将自己的代码共享出来，让社区共同参与语言的演进。      陈泳融带领我们了解 Swift 作为开源项目的发展进程和发展模式，以及如何参与 Swift 项目与社区建设。介绍了一个十分重要的概念：swift-evolution，介绍了社区如何通过 swift-evolution 帮助改进 swift 的语言特性，乃至 evolution 自身。      之后，明宇龙同学为我们讲解了如何用 Rust 构建安全的裸金属系统。   Rust 是新一代高性能且安全可靠的程序设计语言，已经被 Mozilla 基金会及其社区用在开发 Firefox 浏览器的引擎、编译器和操作系统上。Rust 解决了人们想要 C++、C 的速度和效率、但又不想解决 C++、C 中处理内存所固有的难题的问题。明宇龙同学的演讲让很多不了解 Rust 这个小众新兴语言的同学对 Rust 系统编程有更深入的理解。      在明宇龙同学结束演讲后，便来到了闪电演讲的环节。会长袁一玮向大家简单介绍了闪电演讲的要求后，闪电演讲的报名与小憩同时进行。与此同时，还有来自自由软件基金会（FSF）的自由软件日公益广告（Shoe tool），让大家意识到自由软件存在的价值和意义。   首先是马凯同学为我们带来了 emacs 的使用，从安装到基础的 lisp 语言入门，告诉我们可以通过 lisp 语言快速地完成一个小功能或者插件的编写，这对于 vscode、notepad++ 用户是一个新鲜的概念，我们通常要为插件专门创建一个项目，并且要为插件进行较完备的测试。而 lisp 编写的插件，可以直接在当前窗口调出一个编写插件的窗口，直接快速创建一个可以立即测试并使用的插件。除此之外，马凯还介绍了许多 emacs 的其他用法，都等我们带来了许多新鲜的使用理念。      第二位报名闪电演讲的同学是吴雨飞，他介绍了 TiddlyWiki 笔记软件，这是一个单文件的笔记软件，HTML 文件既是笔记界面，又是笔记数据保存的位置，便于备份以及分享。同时，TiddlyWiki 还能够实现演示文档的功能，通过几步即可实现简单的演示功能。      第三个闪电演讲是由明宇龙同学带来的 Antigen，是 zsh 的另一个插件管理器，可以作为 oh-my-zsh 的替代，或者与 oh-my-zsh 配合使用，增强其功能。      在 10 点时，大家的演讲全部结束，自由软件日圆满结束。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2020/09/software-freedom-day/",
"teaser": null
},{
"title": "游戏安全与 Cheat Engine 核心指北",
"excerpt":"在 2020 年 10 月 17 日，USTCLUG 在西校区 3C102 教室开展了一次 Linux 用户协会小聚活动，邀请了李晨宇同学分享标题为《游戏安全与 Cheat Engine 核心指北》的演讲。   不到七点，就已经有较多的同学来到了教室，等待演讲的开始。在临近开始时，200 人的教室已接近满员。是 LUG 参与人数最多的活动之一。      在开始前，李晨宇同学重申了游戏逆向可能带来的法律风险，告诫同学们绝不可使用逆向工具从事非法的事情。我们固然是科技类社团，但是应当让科技在管控之下，方能使其发挥最大的效用。      之后，李晨宇同学便正式开始了今天的演讲。他介绍了今天的演讲所使用的软件 Cheat Engine，并介绍了 Lua 脚本语言。他的可移植性以及较高的性能，得到了大家的青睐，许多安全工程师都会使用 Lua。   同时，他也介绍了，作为一个 Hypervisor，它提供了对程序与内核之间隔离的方法，使得既是在调试过程中程序崩溃了，甚至导致虚拟出来的内核出错，也不会影响运行中的内核。保证了安全性。      在介绍完了理论知识之后，李晨宇同学使用 Cheat Engine 介绍了如何给 PvZ 这个热门的游戏制作外挂。使用 Lua 的脚本，我们能够实现代码注入，内存查找，代码劫持等功能，如此，我们可以实现包括且不限于向日葵无限产生阳光、秒杀、没有技能冷却的时间、加快时间等操作。虽然看起来这个游戏变得无趣了，但是我们通过游戏逆向的方法，我们掌握了基本的内存存储方法，代码执行等基础技能。      在最后，李晨宇同学带领我们完成了简单的上手实践，回答了同学们的一些问题，并且给同学们点出了相应的学习资料。   至此，本次小聚圆满结束。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2020/10/ce-and-reverse/",
"teaser": null
},{
"title": "LUG 全员大会",
"excerpt":"在 2020 年 10 月 24 日星期六，USTCLUG 在西校区 3C102 教室召开了 LUG 全员大会，由 LUG 主要成员向新成员介绍 LUG 组织的各项精彩活动、维护的服务等信息。   七点整，LUG 全员大会正式开始。      首先，Linux 用户协会会长袁一玮简要介绍了 LUG 概况，包括 LUG 的建立、荣誉、组成以及 LUG 的目标，为新成员解答了“LUG 是什么”这一问题。      LUG 是一个以推广自由软件文化、宣传自由软件价值为目的的协会组织，为带给科大的 Linux 等技术爱好者一个交流学习的环境而努力。   接下来，由 Linux 用户协会 COO 罗丽薇介绍 LUG 所举办的丰富活动。 她先是回顾了刚举办不久的 SFD（软件自由日）和每周小聚，让新成员了解到 LUG 所举办的这类分享活动的形式和主题。      之后，她向新成员介绍了 LUG 即将举办的 Hackergame 活动，鼓励新成员在这一充满趣味性的比赛中学习并得到成长。   她还提到了 LUG 常有的参观网络信息中心活动以及每年举办的 Linux101 活动，展示了 LUG 往年制作的精美版衫、贴纸和徽章，让新成员对 LUG 丰富而精彩的日常活动有了充分的了解。   最终，罗丽薇同学向新成员介绍了 LUG 的各种活动通知方式以及 LUG 的联系方式，让新成员能够与 LUG 有更紧密的联系。   罗丽薇同学做完对 LUG 活动的介绍后，由会长袁一玮对 LUG 提供的网络服务进行介绍。 Mirrors 开源软件镜像站、LUG Gitlab、LUG FTP、网络加速服务等，都是能为同学们提供极大帮助的服务。      最后，袁一玮同学展示了 LUG 全员大会的职能。在确认没有同学提出修改章程后，本次 LUG 全员大会圆满结束。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2020/10/freshmen-meeting/",
"teaser": null
},{
"title": "中国科学技术大学第七届信息安全大赛圆满结束",
"excerpt":"2020 年 11 月 7 日中午 12:00，网站提交答案的窗口关闭，也宣布着第七届信息安全大赛落下帷幕。   经统计，在本次比赛中，总共有 3733 人注册，2410 人至少完成了一题。比赛期间所有人合计提交了 23545 次 flag，其中有 12240 次是正确的提交。本次比赛由浙江大学、哈尔滨工业大学、吉林大学、西安交通大学、重庆大学、北京邮电大学、东北大学和南京航空航天大学的计算机类的社团或战队协办，此外还有来自其他高校的同学参加比赛。其中昵称为 mcfx 的同学获得总榜的第一名，最终 AK、以 7100 分结束比赛；中国科学技术大学的本科生选手谢强以总分 3800 分获得校内榜（不含已毕业同学）第一、总榜第 17 的好成绩。本次比赛校内参加人数众多，共计 395 人参与，其中有 297 名本科生。   赛后主办方的统计，最终确定了获奖名单，并为校内参赛的同学颁奖。2020 年 12 月 6 日晚，第七届信息安全大赛颁奖仪式在西区 3A111 举行。      校内冠军谢强荣获一等奖。      崔泽仁、邓龙、疏智磊、韩睿天、谢璟毅五位选手获得二等奖。      还有李嘉豪等二十五位选手获得三等奖。      此外还专门设置了面向大一新生的新生特别奖两名，分别为崔泽仁和 Goh Yi Hang。此外，还颁发了一血奖和分类奖。   自 2014 年起，科大信息安全大赛已经连续举办了七届，往届比赛均顺利进行，规模盛大、影响甚广。第七届信息安全大赛由中国科学技术大学网络空间安全学院、中国科学技术大学校团委、中国科学技术大学管指委主办，中国科学技术大学学生 Linux 用户协会、中国科学技术大学微软学生俱乐部、中国科学技术大学 NEBULA 战队和中国科学技术大学信息安全俱乐部承办，并由浙江大学 AAA 战队、哈尔滨工业大学 Linux 开源学生俱乐部等协办。本次比赛延续了往届的优良传统，努力结合科大特色，坚持向新生倾斜的原则，控制题目难度梯度，强调引导和教育工作。   本次比赛的题目分为 4 类，包含了综合技能、程序逆向与漏洞利用、密码学与数学和网站安全类题目，在具有一定教育意义的同时也不失趣味性。例如，“从零开始的火星文生活”一题让选手了解了文本编码的知识；“来自一教的图片”一题则结合了物理学的傅里叶光学实验；而“超安全的代理服务器”一题和 http2 的 feature 推送（PUSH）有关。   赛后承办方组织参赛选手于网上 https://github.com/USTC-Hackergame/hackergame2020-writeups 撰写了题目解答。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2020/12/hackergame-2020/",
"teaser": null
},{
"title": "无主题小聚",
"excerpt":"2020 年 12 月 13 日，USTCLUG 和 MSC 在西区 3A109 教室开展了本年度第一次无主题小聚活动。   明宇龙同学从介绍时代背景开始，表示了民用 CPU 核心数的增加和 GPU 计算的普及，并行变得越来越重要。他从异步和多进程开始，讲述了多进程和资源的概念、各种语言的多进程实现和其弊端，引出了线程、纤程和协程的概念。         之后由李文睿同学介绍 Grafana，一个能将服务器的运行状况可视化的软件。他以一个开源社区游戏为例，详细地讲述了如何使用 TIG 套件监视游戏的在线人数、服务器的运行状况等等信息。      陶柯宇同学介绍了如何使用 Electron 框架开发跨平台桌面应用程序，分享了他近期积累的相关经验。他从各种操作系统下有的图形库开始，引出了 Electron 基础的用法。同时，他结合自己之前做的一个项目，详细地为大家讲解了 Electron 的配置。      古宜民同学讲述了如何使用 Vivado 的 Debug 模式调试 Verilog 代码，分享了在 FPGA 开发方面的一些经验。      付佳伟同学讲述了静态网站的搭建，并且拿了 LUG 官网和几位同学的博客作为例子进行比较。      郑子涵同学通过两个程序示例介绍了 x86 和 arm64 在内存模型方面的差异。     ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2020/12/multitopic-party/",
"teaser": null
},{
"title": "无主题小聚",
"excerpt":"2020 年 12 月 27 日，USTC LUG 和 MSC 在西区 3C101 教室举办了本年度第二次无主题小聚。   金泽文同学介绍了 Serverless Computing，他以一个生动的例子开篇，展示了 Serverless 的巨大优势，随后深入介绍了 Apache OpenWhisk 的具体实现和 Serverless 目前的局限性。      随后，古宜民同学介绍了 GRUB 和 Linux 启动修复，他从 GRUB 在 Linux 启动中的作用开始，讲解并演示了如何在 GRUB 启动失败时进行修复。      接下来，刘紫檀介绍了他近期参与搭建的 Verilog OJ 在线评测系统。      之后，袁一玮同学介绍了手机实现快充的原理，简述 USB-PD 协议的定义。      最后，明宇龙同学即兴发挥，分享了自己使用 AWS Lambda、Azure Function 和 Cloudflare Worker 的心得体会，介绍了自己 Serverless 架构的博客。     ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2020/12/multitopic-party-2/",
"teaser": null
},{
"title": "无主题小聚",
"excerpt":"2021 年 3 月 31 日下午，我们在西区 3A108 教室开展了本学期的第一次小聚，由明宇龙和袁一玮两位同学主讲。      从 jQuery 到 React、从 webpack 到 esbuild，前端开发迭代出了纷繁复杂的工具链。 明宇龙同学从 JavaScript 的历史讲起，系统梳理了 Web 前端开发工具的历史沿革，结合自己的学习历程，概述了前端开发的现状。      袁一玮同学则介绍了家庭组网各种方法。开始简略描述了常见的 frp 反代、突破 ISP 的 NAT，到 zerotier 一键组网，再到自己使用 Tinc 和 WireGuard 在本地进行组网和开发不再活跃的 Tinc 所带来的缺陷，最后介绍了使用 OSPF 和 BGP 在内网路由的 dn42、扮演 ISP、注册 ASN、拿到 IPv4 和 IPv6 地址池并进行广播。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2021/03/multitopic-party/",
"teaser": null
},{
"title": "Linux 101 第一课",
"excerpt":"2021 年 4 月 11 日下午，USTCLUG 在西区 3C104 教室举办了 Linux 101 活动的第一课：LIP（Linux Install Party）。      Linux 101 是 USTCLUG 每年举办的 Linux 教学活动系列。在此系列活动中，USTCLUG 将介绍 Linux 的方方面面，带领大家认识 Linux、熟悉 Linux，掌握基本的 Linux 使用技巧，从而提高工作效率、增加个人技能。      LIP 是 Linux 101 的第一课。正如其名，USTCLUG 在此次活动中为前来的同学指导安装了 Linux 的各个发行版，解决了同学们基本的 Linux 安装问题。USTCLUG 的指导员热情友善，参加的同学们乐于发问、渴求知识，活动取得了巨大的成功。      同学们借助此机会认识了 Linux 的基本特点，也为大家埋下了中国开源社区的基础。         此次 LIP 活动只是 Linux 101 活动系列的第一课，之后将会有进一步的课程举办，欢迎大家前来参加！  ","categories": ["LUG 活动","Linux 101","Linux Install Party"],
"tags": [],
"url": "/news/2021/04/linux-101-1/",
"teaser": null
},{
"title": "Linux 101 第二课",
"excerpt":"2021 年 4 月 18 日下午，USTCLUG 在西区 3C104 教室举办了 Linux 101 活动的第二课：Shell 基础、软件和命令行工具。      Linux 101 是 USTCLUG 每年举办的 Linux 教学活动系列。在此系列活动中，USTCLUG 将介绍 Linux 的命令行使用技巧，带领大家认识 Shell、熟悉 Linux 的基本命令行工具，掌握基本的 Linux 使用技巧，从而提高工作效率、增加个人技能。         这是 Linux 101 的第二课。USTCLUG 在此次活动中为前来的同学提供了基本的命令行操作教学，解决了同学们 Linux 的基本使用问题。USTCLUG 的指导员热情友善，参加的同学们乐于发问、渴求知识，活动取得了巨大的成功。同学们借助此机会认识了 Linux 的基本特点，也为大家埋下了中国开源社区的基础。   此次活动是 Linux 101 活动系列的第二课，之后也将会有进一步的课程举办，欢迎大家前来参加！  ","categories": ["LUG 活动","Linux 101"],
"tags": [],
"url": "/news/2021/04/linux-101-2/",
"teaser": null
},{
"title": "「开源软件供应链点亮计划——暑期 2021」USTCLUG 项目提案",
"excerpt":"「开源软件供应链点亮计划」是由中国科学院软件研究所发起并长期支持一项活动，旨在解决基础开源软件面临的许可、质量、维护和技术支持等问题，进而影响整个软件产业的供应链。而「开源软件供应链点亮计划——暑期 2021」是由中科院软件所与 openEuler 社区共同举办的一项面向高校学生的暑期活动，旨在鼓励在校学生积极参与开源软件的开发维护，促进国内优秀开源软件社区的蓬勃发展。     此活动与 GSoC (Google Summer of Code) 的模式类似：开源项目/社区提供项目需求与导师 (mentor)；学生申请项目通过后利用暑期的时间进行开发，将成果贡献给社区；主办方（中科院软件所与 openEuler 社区）根据评估结果给学生发放奖金。所有参与的社区列表可查看 https://summer.iscas.ac.cn/#/org。   今年夏天，USTCLUG (中科大学生 Linux 用户协会) 计划以社区身份加入此暑期活动。以下是我们计划的项目提案，也欢迎社团的各位同学提出建议。   在报名前，请先阅读由主办方提供的学生指南。   通用反向代理缓存程序   项目描述：受到磁盘空间等的限制，镜像站有些时候无法完整同步上游的文件。退而求其次，能否只缓存“流行”的文件？能否在对缓存的总容量大小与文件过期时间进行限制的情况下管理缓存的文件？能否查看缓存命中率等指标，进行问题排查与优化？尽管现有的反向代理实现能够做到缓存，但是配置并不够灵活，无法满足需求。本项目计划构建一个灵活的、适用于镜像站场景的通用的 HTTP 反向代理缓存程序，提高用户体验。   项目难度：中   LICENSE：自选开源协议。   项目社区导师：陶柯宇   导师联系方式：taoky AT ustclug.org   合作导师：明宇龙   联系方式：myl AT ustclug.org   项目产出要求：一个稳定的、经过测试可用的 HTTP 反向代理缓存程序（缓存得到的文件存储在传统文件系统上），包括以下要求：      包含对缓存总大小与文件过期时间限制的缓存规则实现。            能够定时或实时清理不符合缓存条件的文件。           用户可编写配置文件，针对符合不同规则的路径，配置不同的缓存规则。   实现日志与用量统计。   通过有效性测试，可正确对 pypi/conda 镜像设置反代。   项目技术要求：      对 HTTP(S) 相关协议有基础了解。   有高性能的网络编程语言的编程能力。   有使用内存数据库的经验。   相关开源软件仓库列表：      https://github.com/sjtug/mirror-intel（SJTUG 镜像的智能缓存方案，缺少本提案中计划的一些特性）   Rsync 在传统文件系统架构上的性能改进   项目描述：Rsync 是镜像站上下游间进行同步的事实标准，但是由于每次同步时 rsync 服务器与客户端都需要扫描一遍本地的文件列表，即使只有少量的文件需要更新，每次同步仍然会带来很高的 I/O 消耗，大幅度提高了服务的负载，降低了服务性能。本项目计划通过修改 rsync 服务端与客户端的实现，在不大幅影响整体架构的情况下优化 rsync 对文件元数据的读写性能（读取为主），降低镜像站的负载，提升 rsync 同步速度与服务性能。   项目难度：高   LICENSE：自选开源协议。对 rsync 的修改需要以 GPL v3 发布。   项目社区导师：陶柯宇   导师联系方式：taoky AT ustclug.org   合作导师：明宇龙   联系方式：myl AT ustclug.org   项目产出要求：本项目包含对 rsync 服务端和客户端这两个部分进行改进的要求。以下要求作为参考，如果有更好的 idea 在讨论后也可实现。      Rsync 客户端            修改 rsync 客户端，使其能够访问 rsync-huai 的元数据，以在同步时减小对主仓库的磁盘压力。       修改 rsync 客户端，针对镜像站场景减少多余的本地读写，提高性能。           Rsync 服务端            不修改服务端（rsync-huai）的源代码，而是使用 FUSE 设计高性能的、只存储文件元数据的文件系统存储文件元数据。例如，可以将元数据存储在内存数据库中，以减小 rsync-huai 在获取文件元数据时对磁盘的压力。       或者，修改服务端代码，使其可以绕过 kernel (FUSE) 直接连接相关数据库读取元信息。           项目技术要求：      有 rsync 的使用经验。   C 语言编程能力，以及其他系统开发语言（如 C++, Go, Rust 等）的编程能力。   有 FUSE 的编程经验。   相关开源软件仓库列表：      https://rsync.samba.org/（Rsync 官方实现）   https://github.com/tuna/rsync（Rsync-huai 实现）   https://github.com/facebook/rocksdb（RocksDB 数据库，可作为在实现使用 FUSE 的元数据文件系统的参考）   全连通内网守护程序   项目描述：一个组织的鉴权接口、数据库接口等服务都不应在公网公开，而内网（IntraNet）的瓶颈通常会出现在转发流量的网关上，若任意两台机器间直连则可以让总网络压力下降不少（一般需要借助中心节点协助 NAT 后的机器打洞）。Tinc 等优秀项目年久失修、无人维护，WireGuard 等新兴 Site2Site 的虚拟专用网络较轻便简单但是未实现 mesh、会对中心网关产生较大的流量压力。本项目计划构建一个灵活高效的全连通内网守护程序（IntraNet VPN）。   项目难度：中   LICENSE：自选开源协议。   项目社区导师：袁一玮   导师联系方式：totoroyyw AT ustclug.org   合作导师：明宇龙   合作导师联系方式：myl AT ustclug.org   项目产出要求：一个稳定的、全连通内网守护程序，包括以下要求：      用户可方便地对内网中的节点进行增删与同步配置（亦可选用其他虚拟专用网络实现作为基础）            基于 WireGuard，将 AllowedIPs 变为 AllowedMacs（实现基于 Mac 地址而非 IP 地址的配置描述）       在内网新加入一台机器后，整个内网可以自动更新、同步节点配置（选做）           通过有效性测试，可以在快速路由迭代后实现任意节点间的 mesh 连接   程序尽可能高效，减少内网中较大流量机器的 CPU 压力   可以让两台在 NAT 之后的机器直接相连（选做，假设 NAT 打洞完可以持续使用）   项目技术要求：      对 OSI 二层或三层模型有所了解，对内网搭建和架构有所了解   有高性能的网络编程语言的编程能力   相关开源软件仓库列表：      https://github.com/cloudflare/boringtun (Rust 下的用户态 WireGuard 实现)   https://github.com/WireGuard/wireguard-go (Go 下的 WireGuard 实现)   https://gitlab.com/NickCao/RAIT/ (基于 WireGuard 的三层分布式全连通网络实现，缺少本提案中计划的一些特性)   https://github.com/gsliepen/tinc (工作在 OSI 二层或三层的全连通网络实现，但其已年久失修，最近一次稳定版 release 是两年前)  ","categories": [],
"tags": [],
"url": "/news/2021/04/opensource-summer-iscas/",
"teaser": null
},{
"title": "2021 Linux 板版衫设计方案征集",
"excerpt":"经过了去年的疫情，时隔一年，Linux 板 &amp; USTC LUG 版衫企划再次启动啦！   跟往年一样，首先征集设计方案。   5 月中旬将通过投票选出最受欢迎的设计方案，并启动预订。尽力在 6 月份毕业生离校前完成版衫制作和发放。   设计要求      主题：Linux 与自由软件，体现瀚海星云 Linux 板或 USTC LUG 特色   底色：不限，建议至少包含白色、黑色设计方案   图案：正面或双面图案（可设袖标），提交图案分辨率不低于 300DPI，并附简单效果图说明图案位置。   授权：投稿作品默认以 CC BY-SA 4.0 协议发布。如果选择其他授权，则应确保作品可以在 CC BY-SA 协议下再发布。   投稿方式      方式 1：回复瀚海星云 BBS 的征集贴，以附件形式附上设计图   方式 2：发邮件至 lug@ustc.edu.cn，标题「2021 版衫设计方案投稿」   方案选择   若方案多于 1 种，则通过投票来选出最终方案。投票将在方案征集后一周进行。   奖励      被选中方案的设计者可免费获得两件 2021 Linux 板版衫。   得票前 6 名的其他未选中方案，设计者可免费获得一件 2021 Linux 板版衫。   征集时间   即日起至北京时间 5 月 16 日（周日）23:59:59。   参考   LUG 相关素材 往届板衫设计图  ","categories": ["LUG 活动"],
"tags": ["LUG","版衫"],
"url": "/news/2021/04/lug-banshan/",
"teaser": null
},{
"title": "Linux 101 第三课",
"excerpt":"2021 年 4 月 28 日，中国科学技术大学 Linux 用户协会在 3A211 教室举办了本学期第三次 Linux 101 课程，本次课程的主要内容是 Linux 下的用户管理和权限机制，同时介绍了 Linux 下文件系统层次规范，主讲同学准备了大量操作演示。同时，同学们交流了近期 Linux 使用存在的若干问题，现场氛围融洽。   讲稿现已上传 LUG FTP。  ","categories": ["LUG 活动","Linux 101"],
"tags": [],
"url": "/news/2021/04/linux-101-3/",
"teaser": null
},{
"title": "Linux 101 第四课",
"excerpt":"2021 年 5 月 16 日，中国科学技术大学 Linux 用户协会在 3C101 教室举办了本学期第四次 Linux 101 课程，本次课程的主要内容是 Linux 下的进程的概念，由主讲同学刘隆邦同学带来课程。   在课堂上，刘隆邦同学准备了大量的演示操作，通过 htop 以及多个小程序展示了进程和信号的概念。   讲稿和活动视频现已上传 LUGFTP：https://ftp.lug.ustc.edu.cn/%E6%B4%BB%E5%8A%A8/2021.05.16_Linux_101_%E7%AC%AC%E5%9B%9B%E8%AF%BE/linux-101-ch04.pdf。  ","categories": ["LUG 活动","Linux 101"],
"tags": [],
"url": "/news/2021/05/linux-101-4/",
"teaser": null
},{
"title": "PCB 设计与电子制作入门",
"excerpt":"6 月 5 日，USTC LUG 与无线电协会在西区 3A108 教室举办了主题为“PCB 设计与电子制作入门”的小聚，由古宜民同学主讲。在介绍了 PCB 设计的基本流程后，他演示了 Altium Designer 和开源工具 KiCAD 的使用，同时分享了自己从设计到联系厂家加工的经验心得。现场同学们积极提问，气氛融洽。   讲稿和活动视频现已上传 LUGFTP：https://ftp.lug.ustc.edu.cn/weekly_party/2021.6.5_PCB%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%94%B5%E5%AD%90%E5%88%B6%E4%BD%9C%E5%85%A5%E9%97%A8/。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2021/06/pcb/",
"teaser": null
},{
"title": "2021 Linux 板版衫开始预订!",
"excerpt":"经过版衫方案投票结果（2021 Linux 板版衫候选方案公布与投票），我们最终确定了 2021 Linux 版衫样式，并从即日起开始接受预定。   经过统计，方案二的票数位居第一，恭喜设计者邓同学，也非常感谢其他投稿的同学。投票结果见附 1。   我们和供应商 T 社（tshe.com）沟通后决定制作黑色，白色两种底色版本，效果图如下：      另，原投票中方案二后背的文字是 join，而实际设计者提供的原稿文件为 login，经过决策后，我们选择 login 作为最终定稿版，在此勘误，希望大家谅解。   预定说明   版衫定价：70.00 元/件   付款方式：支付宝转账（详见预定表单）   预定截止时间：2021 年 6 月 22 日 23:59:59 (UTC+8)   注意事项：      在校同学可以在到货之后自提，时间不限（如：暑期和下学期）。不在校的同学请填写准确的邮寄地址，我们将在收到版衫后统一以快递到付寄出（预计 6 月 30 日）   预定和付款同时进行，请在填写表单后尽快完成支付宝转账，备注信息填写预定者手机号   如订单无效或未制作，付款将全额原路返还   如需预定不同尺码，请多次填写表单   尺码表见附 2   出于成本考虑，两种颜色订单数合计大于 50 件才会制作   按照投票人数估计，单件制作成本约为 70 元，如因预定数量提高，单件价格最终低于 70 元，则结余资金将作为 USTCLUG 社团经费，并公开使用情况   任何问题请及时通过 goods@ustclug.org 和我们联系，预定截止后恕不接受退款   预定方式：填写 https://forms.office.com/r/tmLyZ97zQ7 中的表单，或扫描以下二维码预定。      如有其他问题欢迎邮件联系。联系邮箱：goods@ustclug.org   附 1：投票结果                  方案       票数       比例                       方案一       43       30.9%                 方案二       58       41.7%                 方案一       38       27.3%           附 2：尺码表      附 3：彩蛋   我们也收到了一份娱乐版的版衫，相关的设计文件已经放在 https://ftp.lug.ustc.edu.cn/%E7%89%88%E8%A1%AB/2021banshan/amusement/。欢迎感兴趣的同学自行取用 :D  ","categories": ["LUG 活动"],
"tags": ["LUG","版衫"],
"url": "/news/2021/06/lug-banshan-order/",
"teaser": null
},{
"title": "2021 软件自由日中国科大站",
"excerpt":"2021 年 9 月 25 日，开源社区传统活动软件自由日（Software Freedom Day）于下午 2 点 30 分在西区 3C101 教室如期举行，本次活动我们邀请到来自 TUNA 的 Zenithal 同学，以及 18 级曹嘉琪、19 级蔡智臻同学为我们带来精彩的演讲。除此之外，在闪电演讲环节中 21 级新生袁宝杰、科大校友吴峰光、以及来自线上的 Zhou Zhiqiang 三位演讲者的精心准备也为我们带来意外惊喜。   得益于第二课堂系统以及社团游园会的宣传，本次活动在新生中的影响力空前，大量新生来到现场参与本次自由软件日活动。也许对于大部分新同学而言，演讲的内容对于他们是陌生的，也无法通过一次演讲对其主 题进行全面地了解和深入的理解，然而演讲的内容仍然可在记忆之中沉淀，形成对技术的认知。      2 点 30 分，简短的活动引入环节扼要地介绍了今日的流程安排和演讲嘉宾后，软件自由日活动正式开始。   首先由蔡智臻同学为我们介绍堪称开源界明星的 wireguard 组件。只需寥寥几行配置，活动室的机器和演讲者的主机便处于同一局域网下，继承了 Unix 哲学一贯的简单优雅。随后，蔡智臻同学深入介绍了背后的逻辑——做为内核模块工作时，其将自身模拟为网络设备，复用系统的 TCP/IP 路由表实现网络的通信与中继。在享受嵌入内核模块获得极致的速度提升的同时充分利用了利用已有的路由配置规则，降低了维护者学习记忆的成本，与配置复杂的 IPsec 以及在用户态与内核态往复横跳的 OpenVPN 相比在实际应用层面上高下立判。其实这一思想正是著名的“一切皆文件”观点的延续，也由此获得了 Linus 的共鸣 —— “state my love”      了解完网络建构工具，来自 TUNA 协会的 Zenithal 同学为我们带来镜像站联盟计划 —— MirrorZ 项目。Z 同学从镜像站的维护切入主题，先行分享自己的镜像维护历程，让未能经历的同学们一窥镜像维护的琐事。而正是在维护镜像的过程中，Z 同学既看到各大高校镜像站的蓬勃发展，也注意到终端用户存在着信息获取困难，镜像选择不便等问题，以此出发发起 MirrorZ 项目，并获得各大高校镜像站的响应。总而言之，该项目意在完成镜像站之间的信息整合与接口统一工作，并实现自动择优机制。各大镜像站将镜像状态信息推送至 MirrorZ 前端，实现信息的统一呈现。而镜像站针对拉取镜像请求，根据用户的意愿，基于镜像站评分为用户自动跳转至最优镜像，以获得最快的镜像下载速度。和大多数开源软件一样，MirrorZ 受使用过程中的不便性启发，以开源协作的模式解决问题，这样一个开源项目的动机与组织形式，值得开源社区的所有同仁借鉴。      身在科大，自然当对学术上开源软件留心。曹嘉琪同学为我们带来科学计算软件 Maxima 的介绍与基本操作。Maxima 源自于 Macsyma，被 Maple 及 Mathematica 等计算机代数系统所借鉴。在日常计算任务中可以一定程度上替代商业软件 Mathematica。在图形界面 wxMaxima 的帮助下，曹嘉琪同学通过逐条演示的方式，为我们详细介绍了常用的 Maxima 的常用功能 —— 符号计算、数值求解、求导积分、作图 ······ 所见即所得，更直观地让听众了解到 Maxima 的语言风格与使用效果。         三场演讲结束，欣赏之余未免有些疲倦。正值茶歇，同学们陆续前来领取水和零食。由于错误地预估了参与的人数，零食很快被瓜分完毕。按照往年惯例，现场提供了印有开源软件 logo 的贴纸，做为对自由软件的宣传。贴纸上的符号是开源文化的一部分，而使用贴纸往往可以增强对开源文化的归属感。无论是因为熟悉还是因为好奇，lug 新做的贴纸成功地吸引了一部分同学的注意，前来领取贴纸贴在笔记本上。闪电演讲的名单上多出了一位 21 级的同学袁保杰，想对他所熟悉的开源终端 ConEmu 做一番推荐；一位科大校友，lug 的老社员吴峰光也参与进来，希望向观众介绍 Nix 包管理器；线上的 Zhou Zhiqiang 也提前报名，将为我们带来混沌工程概念，SFD 的下半场，足以令人拭目以待。      SFD 进入到下半场，首先由袁保杰同学介绍 Windows 平台可定制化终端 ConEmu，其提供了终端背景定制，多窗口，并集成了文件管理器等其他组件，可以在一定程度上缓解 Windows 自带终端对双眼造成的不适。其易于上手的特性对于新人来说更加友好。   一味小菜过后，吴峰光校友为我们带来 Nix —— 一个包管理器，或者一种依赖管理思想，该思想正是 “share everything” 和 “share nothing” 的折衷，即 “share when possible”。Nix 完全按照版本依赖要求安装被依赖方的对应版本，将不同版本的软件视为不同的软件，以哈希值决定不同版本的访问路径。这意味着其以完全违反 Linux 所规定的目录结构为代价，获得软件包依赖的绝对正确。理解了其基本思想后，演讲者顺势引入 Nix 语言与 Nix 包配置格式，Nix 的包管理方式由此展现出一个巨大的优势，即在 Nix 包管理系统下，可以让一个系统整体对应唯一的配置文件，环境的复现将通过该统一配置文件的迁移实现。正如刘紫檀同学在讨论过程中所说，Nix 与 Docker 的目标是一致的，该配置文件扮演 dockerfile 的角色。随后是对 Nix 应用的介绍：通过使用 NixOS，所有软件及内核均在 Nix 版本控制之下，可以用于嵌入式、云端部署领域批量化部署等应用场景。虽然 Nix 仍然是一个新兴技术，其由于文档稀少、社区小众造成的入门困难一定程度上限制了其普及速度，其镜像的庞大复杂也为镜像站提供服务造成困难，但 Nix 的未来仍然值得期待。         最后，Zhou Zhiqiang 通过线上会议的方式加入现场，为我们带来“混沌工程”这样一个较为陌生的话题。根据演讲者的介绍，所谓混沌工程，即是在实验环境中加入各种具有破坏性的运行干扰，如以一定频率加入延时，篡改目录，假报硬盘故障，切断网络，乃至从集群中离线单节点等，构造一个“稳定产生不稳定因素”的系统。演讲者以 chaos mesh 平台为例，从平台的架构解析混沌系统的一种实现方式，又以一个简单的混沌实验，展示了实验过程中设置的主要参数。随后，演讲者选取了文件系统错误注入，细致地讨论了如何通过 hook 系统调用，随机性篡改函数参数并将错误原封返回，达到模拟错误的目的。混沌系统可以为开源软件的安全性、稳定性提供可行的基准测试方案，为确保开源软件的质量做出贡献。      由于时间原因，两位本来报名了闪电演讲的同学未能演讲，着实遗憾。但分享自由的时光总是短暂，同学们陆续扫码签退，离开会场。原定的聚餐环节由于第二天将有更多 lug 老成员前来临时更改了日期，所以做完善后工作后，几位熟悉的同学在食堂相聚，为今年的 SFD 做上小结。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2021/09/SFD/",
"teaser": null
},{
"title": "2021 全员大会",
"excerpt":"2021 年 11 月 17 日，下午 4:30，校学生 Linux 用户协会秋季学期全员大会如期举行，本届全员大会一如既往，承担着向新成员介绍 LUG 社团内部情况的任务，同时也进行了 LUG 章程讨论环节。指导老师与本届负责人悉数到场，为现场的新同学们答疑解惑。部分社团老人也参与到社团建设的讨论中，时刻关注着社团的发展。   在社团中直播负责人刘正韬的忙碌下，直播设施在全员大会之前顺利地搭建完毕。线上线下的全员大会参与者们在 4:30 顺利通过直播进入到会场。在为需要二课学时的同学们让出五分钟签到时间后，全员大会正式开始。   首先由刘隆邦同学开门见山，向新成员介绍了全员大会的意义。随后通过对 Linux，对 Linux User，对 Linux User Group 的逐层剖析，向新成员们揭示了 Linux 社群的形成原因以及 Linux 社群所包含的的内在精神 —— 开拓、探索、分享。最后谈到科大的 Linux 用户协会的成立往事，为大家呈现出一个有历史传承的 LUG 组织，尽力将 LUG 描述得具体而真实。         活动，是一个社团的能保持活力的关键所在，所以接下来由刘隆邦同学继续介绍社团中的四大活动：自由软件日、Hackergame 信息安全竞赛、Linux 101 系列课程以及在平时进行的每周小聚。   首先，是对自由软件日和 Hackergame 的回顾，自由软件日活动给了自由软件爱好者们一个理由，让他们可以在这一天聚会分享自己在自由软件上的经验。而 Hackergame 则是为同学们提供了一个可以学到软件知识，享受探索乐趣的平台，其以对萌新友好的特性成为了影响极大的 LUG 标志性活动。如果说自由软件日体现了身为自由软件爱好者的分享精神，那么 Hackergame 则集中体现了自由软件爱好者们的进取与探索，两个活动完美地诠释了 LUG 社团存在的意义。   随后，刘隆邦同学向新成员们预告了 Linux 101 教学活动和每周小聚的开展。Linux 101 活动体现了社团在技术教学上为科大做出的一份贡献，在教学活动过程中，社团核心成员们将引导同学们一步一步地完成从认识 Linux 到熟练使用 Linux 的蜕变。每周小聚则是社团内部互相分享自己探索所得的日常活动，社员们在每周小聚互相探讨，互相学习，共同进步。   接下来则由龚乐同学为我们介绍社团的网络服务部分，首先是 LUG 的核心服务——开源软件镜像站，为同学们在校内提供了一个高速，完备的开源软件镜像，为同学们下载开源软件提供便利。随后介绍的是 LUG 提供的代码托管服务—— GitLab，为同学们在校内提供一个高质量的代码协作平台，避免了 GitHub 等代码托管平台的高延迟访问。      同时龚乐同学还介绍了 LUG 的 FTP 服务，上面存储了 LUG 以往小聚的信息，对想要了解的后来者有很大帮助。最后还提到了 vlab 服务，虽然服务本身并不是由社团直接提供，但 LUG 主要成员为其提供技术支持，vlab 自投入使用以来广受师生欢迎，广泛应用于课堂教学实验中，影响广泛。   最后，龚乐同学向新人们介绍了 Linux 相关技术的学习方法和技巧，在探索、查找和交流中逐步提升自己的技术水平。   在进行了短暂的休息后，我们开放了二课签退码，无意参与 LUG 社团章程讨论的同学可以先行离开。在大部分在场同学离开后，我们对章程中的表述进行了修改，并得到了出席社团成员三分之二人数表决通过。章程表述修改如下：   将《中国科学技术大学学生 Linux 用户协会章程》中第八条末尾“委员会会长任期⼀年，不得连任”表述，修改为“委员会会长任期⼀年，一般不得连任，特殊情况下最多可连任一届”。   修改后章程可在 ftp 上查看。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2021/11/freshman-meeting/",
"teaser": null
},{
"title": "中国科学技术大学第八届信息安全大赛",
"excerpt":"2021 年 10 月 30 日，正午十二时，Hackergame 网站答案提交窗口如约关闭，这场持续七天的属于 hacker 们的盛宴落下帷幕。   经统计，在本次比赛中，总共有 4023 人注册，2740 人至少完成了一题。比赛期间所有人合计提交了 23522 次 flag，其中有 11975 次是正确的提交。本次比赛由浙江大学、哈尔滨工业大学、吉林大学、西安交通大学、重庆大学、北京邮电大学、东北大学和南京航空航天大学的计算机类的社团或战队协办，此外还有来自其他高校的同学参加比赛。其中昵称为 mcfx 的同学获得总榜的第一名，最终 AK、以 9450 分结束比赛；中国科学技术大学的 21 级研究生选手马瑞丰以总分 4200 分获得校内榜（不含已毕业同学）第一、总榜第 23 的好成绩。本次比赛校内参加人数众多，共计 569 人参与，其中有 436 名本科生。   赛后经主办方统计，确定了获奖同学以及奖项，并为校内参赛的同学颁奖。2021 年 11 月 27 日晚，第八届信息安全大赛颁奖仪式在西区 3A212 举行。网络空间安全学院党委书记谭勇、校 NEBULA 战队指导老师吴文涛出席本次颁奖典礼，并为获奖同学颁发证书。      校内冠军马瑞丰荣获一等奖。   胡航瑞、毛浩宇、樊一展、黄致远、Goh Yi Hang 五位选手获得二等奖。      还有甘文迪等二十五位选手获得三等奖。      此外还专门设置了面向大一新生的新生特别奖两名，分别为陈骆鑫和赵奕。此外，还颁发了一血奖和分类奖。      自 2014 年起，科大信息安全大赛已经连续举办了八届，往届比赛均顺利进行，规模盛大、影响甚广。第八届信息安全大赛由中国科学技术大学网络空间安全学院、中国科学技术大学校团委、中国科学技术大学管指委主办，中国科学技术大学学生 Linux 用户协会、中国科学技术大学微软学生俱乐部、中国科学技术大学 NEBULA 战队和中国科学技术大学信息安全俱乐部承办，并由浙江大学 AAA 战队、哈尔滨工业大学 Linux 开源学生俱乐部等协办。本次比赛延续了往届的优良传统，努力结合科大特色，坚持向新生倾斜的原则，控制题目难度梯度，强调引导和教育工作。   本次比赛的题目分为 4 类，包含了综合技能、程序逆向与漏洞利用、密码学与数学和网站安全类题目，在具有一定教育意义的同时也未曾放弃对趣味性的追逐：如何利用手中的“秤”逃脱华强的刁难？如何利用旅行照片在世界地图上大海捞针？如何让你的程序学会玩 Overcooked？如何让不存在的好友帮你的 flag 大砍一刀？当然更有一些题目考验着同学们的数理基础：如何骑走一辆二维码被打了码的共享单车？如何将矩阵点亮成 LUG 的形状？当然，更加硬核的题目永远为勇攀高峰的选手准备着，也总有选手不曾屈服于未知而复杂的技术，攻坚克难，在排行榜上默然前行。   赛后承办方于 https://github.com/USTC-Hackergame/hackergame2021-writeups 公布了官方题解，并收集了参赛选手的题目解答。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2021/11/hackergame-2021/",
"teaser": null
},{
"title": "桌面美化",
"excerpt":"2021 年 12 月 5 日，LUG 社团于 3A212 教室开展了本学期第一次小聚分享活动，本次是由诙谐幽默的赵作竑同学为同学们带来 Linux 桌面美化方案的介绍。（顺带狠狠地捧了一把 Arch Linux 发行版）      赵作竑同学深知介绍新事物，要从听众所熟悉的内容入手。于是演讲一开始，纯净的蓝天，白絮的闲云便迎面而来，翠绿的草甸勾勒出舒畅的坡形，我的文档、电脑、网上邻居坐落有序 —— 这就是同学们小时候的 XP 啊！      界面是那么朴素，年代是那么久远，直到同学们熟悉的命令行的出现，它才褪去了伪装。XP 桌面主题用它的天衣无缝，向同学们证明了 Linux 桌面美化的无限可能。   赵作竑同学借此机会向同学们推荐了演示所用的 B00merang 主题，它可以让同学们的 Linux 桌面审美风格倒退 20 年，向 Windows XP 看齐，同时建议同学们尝试采用 B00merang 下其他 Windows 版本的主题，以得到形似 Windows 但更加流畅的界面体验。   简单的引入环节后，赵作竑同学向同学们系统地介绍了桌面配置背后的逻辑：   首先将桌面环境的软件分为四类：程序、窗口管理，外设设置（状态栏），桌面常用软件，其他功能。同学们可以从某一类入手，对系统的环境进行调节。   随后赵作竑同学从窗口管理器入手，介绍了平铺式，层叠式和混合式窗口管理器的区别，并举例说明，供大家按喜好选择。顺便推荐了 Arch Wiki 上的窗口管理器页面 Window manager - ArchWiki，供同学们参考。      接下来是面板和启动器，赵作竑同学推荐了 Rofi + Polybar 的配置，并推荐了 GitHub 上的 adi1090x 用户的配置方案做参考。同时提醒同学们这个方案提供的是外观，如果希望可以在面板上进行调节亮度，连接 wifi 等操作，需要安装对应的软件包，因为对控件的操作本身是对对应命令的调用。   完成了上述过程后，同学们就有了一套属于自己的可控风格的系统，接下来就可以开始对风格进行调整了——赵作竑向同学们推荐了他的经验：根据自己最喜欢的终端配色方案进行各控件的颜色配置。而对 GTK 或 Qt 应用的主题也可以使用对应插件实现。   若希望更进一步的优化，需要细节上的耐心：如工作栏的字体，图标风格等的挑选。   在小聚的最后，赵作竑同学为同学们演示了如何参与社团的开源桌面美化方案投稿：只需要在投稿仓库 Open-Source-Desktop-Show 的 issue 板块中中选择对应的 Template 填写后提交，即可完成投稿。      小聚结束后，陶柯宇同学为同学们演示了参与二课的同学如何将自己的学校账号和 GitHub 账号关联起来：首先访问 https://ghauth.ustclug.org，依次点击 Authenticate USTC 和 Authenticate GitHub ，最后点击 token 导出密钥，在二课提交时应将密钥附在提交窗口中。   若希望了解小聚的更多细节，可阅读本次讲座的小聚讲稿。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2021/12/linux-beautify/",
"teaser": null
},{
"title": "网络资源&技术部介绍",
"excerpt":"2021 年 12 月 12 日，LUG 社团再一次迎来小聚分享活动，本次小聚由两部分组成，首先由蔡智臻同学为我们带来学校网络资源的介绍，随后由我们社团的技术主力陶柯宇同学为我们分享 LUG 技术部的日常。      蔡智臻同学用简明扼要的方式为我们列出了做为科大同学可以得到的便捷信息：首先是对于计算机类课程学习至关重要的参考材料，有往年试卷，往年实验样例，甚至是半开卷考试准许携带的 cheatsheet。掌握了这些信息资源，我们可以进行更有目的的学习和复习。随后是对校内关键网络资源的介绍，这些资源信息关系着同学们的校园生活，可以通过 ustc.life、i.ustc.edu.cn 这两个集成了我们学校中关键站点的导航网站前往。邮件系统、网盘系统、图书馆查询系统、以及部分同学会用到的学校个人主页支持、创新实践基地预约，这些都是校园中的宝贵资源。      随后蔡智臻同学又介绍了其他校园服务相关内容，如打印机、一卡通、校园网、研讨室等学习生活相关的事项的处理。最后向同学们推荐了一些技术性的资源，如 LaTeX 模板，计科相关的软件推荐，顺带对 LUG 的 Linux 101 系列课程以及 FTP 资源进行了宣传。      随后的时间交给了在 LUG 技术部中尽责的陶柯宇同学，这位陪伴了 LUG 4 年的老同学将在接下来的 ppt 中，为我们理清科大镜像站背后的琐碎。从简单来讲，LUG 所维护的服务主要是镜像站，当然日常的维护工作还包括基础设施。于是首先陶柯宇同学向我们简要介绍了建立科大镜像站的目的、服务现状以及服务所依赖的基础设施。   镜像服务中最基础的自然是可靠的存储，于是有了 ZFS 文件系统、硬件 RAID 冗余、LVM 缓存加速的架构，在保证了稳定性的同时提高了系统的性能。而有了基础后，构建的镜像站应当有对外提供服务、同步上游数据的能力。针对 HTTP(s) 访问，镜像站使用 OpenResty 拓展 Nginx 提供服务，对于 Rsync 请求自然使用 Rsync 提供服务。至于同步任务，LUG 维护组使用自行开发的 Yuki 同步框架，辅以 Docker 虚拟化批量管理，实现对上游镜像的稳定同步。      除了镜像站外，LUG 技术部还需要维护好其他对外服务，如 FTP 和 GitLab。为了维护这些服务，LUG 技术部构建了配套的网络基础设施：LDAP 用于服务器集群的统一鉴权，Telegraf + InfluxDB + Grafana 对服务器的 IO、网络、内存占用和存储状态进行实时监控，ESXi 进行服务器的虚拟化。为了可持续性地传承 LUG 技术部的维护，LUG 将技术文档公开于 docs.ustclug.org，可以供维护人员以及对 LUG 技术部感兴趣的同学参考。      介绍完较为正式的 LUG 服务，技术部成员还为社团的运行提供便利。如在本次的桌面投稿活动中，技术部的同学编写了 gh-auth 项目用于关联 GitHub 账号和提交同学的统一身份认证；在游园会活动中陶柯宇同学提供了用 rust 编写的终端问答小程序做为游园会答题项目，让每一位前来 LUG 摊位的同学体会到了 LUG 的技术氛围；在 Linux 101 系列课程中，为线上讲义的实时部署配置 GitHub Actions ……   做为一个合格的运维人员，关心服务的安全问题是必不可少的，所以运维同学的日常任务中往往包括关注安全资讯，对各组件进行定期的安全检查，及时更新。同时还要应对从各个渠道发来的用户反馈，及时给予回应，这正是运维同学日常辛苦所在。   看到大家饶有兴致地听着技术部的介绍，陶柯宇同学切换了 PPT，为我们细致地讲述了在服务器维护中遇到的问题以及解决问题的详尽过程，让我们有机会一窥技术部同学们的广博、严谨与钻研。   小聚结束后，我们也如愿吸引了一些来自低年级的同学与我们共同探讨技术话题。这是令人兴奋的事情，因为只有新人对技术讨论的参与，才能让 LUG 这个足够“古老”的社团得以一直延续。   小聚相关的讲义、照片已上传 FTP，可在此获取。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2021/12/USTC-resources-LUG-tech-intro/",
"teaser": null
},{
"title": "适合个人开发者的网站开发方案",
"excerpt":"12 月 18 日 19:30，本学期的第三次也是最后一次小聚正式拉开序幕，本次小聚由王子博为大家介绍适合个人开发者的网站开发方法，讨论前后端常用框架和常见问题。由于演讲者不方便回校，小聚改为线上举行。   想要开发一个网站，必须先了解网站的工作原理。王子博同学从大家访问网站时在浏览器输入的 URL 开始，自顶向下，逐层深入的剖析了浏览器把我们的输入转化为报文发送，交由后端处理，再返回的完整过程，让大家对 HTTP 的响应原理有了一个大概的了解。随即以此为引子，列出了建设网站需要的几个环节，即域名，服务器，服务器端程序，HTML、CSS，浏览器端程序。简单的一页 ppt，就梳理清楚了一个网站成功运行所需要的几个最重要的环节。   框架梳理完成后，为了加深同学们的理解，王子博同学还结合自己开发 ustc.life，南七集市等网站的经验，带着大家分析了搭建这些网站所需要的技术。其中提到不少现代的技术以及免费的建站资源，给了同学们很大的启发。这些具体的方案也为大家以后自己搭建网站提供了参考。   在了解的网站运行背后的技术后，很多同学可能会问，这里面有很多条技术路线，我该如何学习呢？王子博同学很快为大家解决疑惑，他凭借自己学习和实际开发网站的经验，由浅到深的总结出学习的方向，覆盖了开发，部署，存储，工具等等方方面面的技术。紧接着，他还列出了几个学习的网站，供大家使用。   当然，在实际开发网站的过程中，我们还需要对前后端的一些架构做出更精细的规划，以应对各种可能的网络流量，并把安全性也列入考量。因此，接下来的时间里，王子博主要针对这些实际问题进行细致的讲解并给出解决方案。自此，我们的网站可以正式部署在公共网络，供大家访问了。   讲解结束后，还有很多同学就会议中提到的技术与应用场景与王子博同学进行了全面的交流，在思维的碰撞中获得对 web 技术的新理解。 今年的最后一次小聚至此圆满结束，会议材料可在小聚材料中找到。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2021/12/web-development/",
"teaser": null
},{
"title": "Linux 101 第一课",
"excerpt":"3 月 13 日下午，Linux 用户协会在西区 3C101 教室举办了 Linux 101 系列活动的第一课： LIP (Linux Install Party)。   Linux 用户协会每年都将举办的 Linux 101 系列活动， 并编写了在线讲义。 在此期间，Linux 用户协会将全面介绍 Linux 的使用， 带领同学们认识和熟悉 Linux，掌握基本的使用方法， 了解使用技巧，从而提高工作效率、增进相关技能。   Linux Install Party 作为 Linux 101 的第一课， 介绍了什么是 Linux 和 Linux 可以做什么， 普及了 Linux 背后的自由软件和开源软件的历史，激发了同学们对 Linux 的兴趣。         此外，Linux 用户协会成员在活动中帮助其他同学安装了常见 Linux 发行版， 解答其他同学在 Linux 使用中遇到的问题。现场交流氛围融洽，活动顺利举办。            在之后的活动中，Linux 用户协会将全面介绍 Linux 使用， 欢迎同学们参与 Linux 101 的后续活动。  ","categories": ["LUG 活动","Linux 101","Linux Install Party"],
"tags": [],
"url": "/news/2022/03/linux-101-1/",
"teaser": null
},{
"title": "Linux 101 第二课",
"excerpt":"4 月 3 日下午，Linux 用户协会于线上举办了 Linux 101 系列活动的第二课：命令行界面的使用。   命令行界面是 Linux 系统使用的精髓所在，熟练地使用命令行可以让同学们更加高效地在 Linux 系统下处理任务。本节 101 由赵作竑同学为我们进行 shell 相关内容的讲解。   初次接触命令行界面（shell），自然应当由简入繁，循序渐进。所以赵作竑同学在带领大家认识并打开 shell 后，首先介绍了几个简单的命令，如 ls、cd、cal、date，让大家清楚命令行的输出格式。      稍作了解后，我们需要系统性地学习命令行的使用，而最关键的自然是如何理解命令的帮助文档。赵作竑同学以 ls 命令为例，为我们讲解了其对应文档的结构以及应当如何去理解命令文档。      由于对命令行的介绍不能脱离对 Linux 系统本身的理解，所以赵作竑同学为我们附带介绍了 Linux 文件系统相关的内容，包括文件类型、文件权限、Linux 下的目录结构，软硬链接等，并介绍创建文件的命令。      本节课的讲义位于 LUG ftp 上：slides  ","categories": ["LUG 活动","Linux 101"],
"tags": [],
"url": "/news/2022/04/linux-101-2/",
"teaser": null
},{
"title": "Linux 101 第三课",
"excerpt":"4 月 17 日下午，Linux 用户协会线上举办了 Linux 101 系列活动的第三课：Linux 环境下的编程。   Linux 本身提供的是一个使用计算机的环境，因此，学习 Linux 的过程即是了解如何使用 Linux 完成各项任务的过程。而 Linux 上的编程开发正是使用中无法绕过的一环。本节 Linux 101 由明宇龙同学为我们讲解如何在 Linux 下完成 C/C++, Python 等编程语言的开发。      首先，明宇龙同学向大家介绍了 C 与 C++ 语言在 Linux 上的开发过程。对于简单的单文件而言，一行 gcc 命令即可完成编译过程。更进一步，我们可以了解到编译过程的四步过程分别由 cpp、cc1、ar、ld 完成。然而在面对多文件大项目时，需要严格的编译顺序管理和并行管理，于是我们使用 make 工具对编译过程进行管理，这涉及到 Makefile 的编写。随着项目增大，文件增多，出现了 cmake 等工具来自动编写管理 Makefile 文件。      随后明宇龙同学向我们介绍了 Linux 上 python 环境相关的基础内容，包括 python 的包管理器，python 语法版本变迁以及 python 语言的各种实现，这些内容对于构建符合自身需求和兼容性要求的 python 应用至关重要。      在课程最后的提问环节，明宇龙同学细心地为大家解答了 Linux 相关疑问，探讨了从编程环境配置到 LUG 相关的问题，在轻松愉快的氛围中结束了 Linux 101 第三课的讨论。   本节课的讲义位于 LUG ftp 上：slides  ","categories": ["LUG 活动","Linux 101"],
"tags": [],
"url": "/news/2022/04/linux-101-3/",
"teaser": null
},{
"title": "「开源软件供应链点亮计划——暑期 2022」USTCLUG 项目提案",
"excerpt":"「开源软件供应链点亮计划」是由中国科学院软件研究所发起并长期支持一项活动，旨在解决基础开源软件面临的许可、质量、维护和技术支持等问题，进而影响整个软件产业的供应链。而「开源软件供应链点亮计划——暑期 2022」是由中科院软件所与 openEuler 社区共同举办的一项面向高校学生的暑期活动，旨在鼓励在校学生积极参与开源软件的开发维护，促进国内优秀开源软件社区的蓬勃发展。     此活动与 GSoC (Google Summer of Code) 的模式类似：开源项目/社区提供项目需求与导师 (mentor)；学生申请项目通过后利用暑期的时间进行开发，将成果贡献给社区；主办方（中科院软件所与 openEuler 社区）根据评估结果给学生发放奖金。所有参与的社区列表可查看 https://summer-ospp.ac.cn/#/org。   今年夏天，USTCLUG (中科大学生 Linux 用户协会) 计划以社区身份加入此暑期活动。以下是我们计划的项目提案，也欢迎社团的各位同学提出建议。   在报名前，请先阅读由主办方提供的学生指南。   网络测量系统   项目描述：在校园网管理中，很多时候我们需要看某个网站/服务器在学校不同地点、不同运营商网络出口下的访问质量，分别到不同机器上手工测试并汇总常常会带来巨大的人工成本，在 https://ping.chinaz.com/ 或者类似的网站上我们可以很方便的看网站/服务器在全国各地访问的情况，但是可惜网站的主体和客户端都不是开源的。本项目计划建设一个可自己搭建的分布式网络测量系统，架构为控制端 + 多个测量 agent。   项目难度：基础   LICENSE：自选开源协议   项目社区导师：totoroyyw   导师联系方式：totoroyyw AT ustclug.org   项目产出要求：建设一个可自己搭建的分布式网络测量系统，控制端 + 多个测量 agent：      控制端            控制端提供 Web 界面，接收测试指令、发给测量 agent、收集并展现测量结果       对不同级别的用户有权限控制（比如普通用户不能开放 TCP 端口扫描功能）           测量 agent            启动后连接到控制端，接收测试指令、进行测试、返回测试结果       隶属于多个组，可以按照组选择运行测量指令       docker 封装部署，预计数量在 N*10 量级           测量功能包含多节点 ping、DNS 解析、http/https get、TCP 端口连接测试、TCP 端口扫描、traceroute，具体可以参考相关网站的功能            测量功能方便扩展           项目技术要求：      掌握网络编程语言   拥有 Web 开发能力   相关网站：      https://www.17ce.com/   https://ping.pe/   https://ping.sx/ping   https://ping.chinaz.com/   网盘睿客网的 SDK 及 Rclone plugin 开发   项目描述：中科大校内有一套网盘系统睿客网（英文指代暂规定为 recdrive），此系统目前仅有网页界面而没有命令行接口，因而无法轻松地将睿客网提供的云存储整合到其他系统中。我们计划在此次项目中，为睿客网实现一套 SDK，支持基础的文件 CURD 操作，然后将此 SDK 整合到云存储命令行工具 Rclone 中，提供给用户一份 Rclone plugin 或是直接合并至 Rclone 上游。   项目难度：进阶   LICENSE：可自选开源协议，但推荐 Apache 2.0   项目社区导师：myl7   导师联系方式：myl AT ustclug.org   项目产出要求：      基础：提供一套 SDK 支持睿客网网盘文件的 CURD            需要保证 Go 中可用以满足下一阶段的条件       除 Go 外，可以使用 Rust/C/C++ 编写，只须提供 Go 中调用的方案即可       由我们提供测试帐号           进阶：对接 Rclone，提供一份睿客网的 Rclone plugin            Rclone 的各种子功能，如 cache 等，可以酬情对接，以可用为第一要义       开发者可以尝试将此功能提交到 Rclone 上游进行合并           项目技术要求：      掌握 Go 语言，或是掌握 Go 语言 FFI 并掌握另一门可 Go FFI 的语言   能理解文件系统语义，对 FUSE 等类似部件有一定了解   能阅读以 Rclone 为例的大型 Go 开源项目的源码并分析出扩展时需要对接的部分   相关网站：      睿客网：https://rec.ustc.edu.cn/   Rclone：官网：https://rclone.org/ 源码：https://github.com/rclone/rclone   一个参考性质的半成品：https://github.com/myl7/recdrive  ","categories": [],
"tags": [],
"url": "/news/2022/05/opensource-summer-iscas/",
"teaser": null
},{
"title": "复古计算与无线电展",
"excerpt":"2022 年 5 月 8 日下午，由中国科学技术大学学生 Linux 用户协会与学生业余无线电协会承办的复古计算和无线电展活动在中区 3 号楼架空层圆满落幕。本次活动中，由学生业余无线电协会社长刘紫檀及两社社员共同筹借的复古设备得以“重见天日”，向我们再次讲述那个曾经属于它们的时代。   摩尔定律曾预言，每隔 18 个月，计算机的性能就将提高一倍。这意味着，短短 20 年，计算设备的性能已经发生了翻天覆地的改变。本次复古计算展，筹办团队不是仅仅满足于让这些被时间淘汰的设备陈列展出，而是将其修复的同时上电运行，让参观者获得属于那个时代的交互、文化和操作体验——可以说是一门让时光“倒流”的艺术。   作为常与计算技术打交道的无线电社员与 LUG 社员们，旧式荧屏的辉光对于我们有着莫大的吸引力。在 LUG 活动室中，留存着老一代社员们遗留下来的各种旧硬件，或是龙芯 MIPS 笔记本，或是苹果最后一代 PowerBook。而在网络信息中心的角落，悄然静置着一台 DEC 生产的 80486-DX2 处理器品牌机，即使曾是一个时代算力的骄傲，如今也埋没在故纸堆里。   筹备   或许是听到了这些被时代淘汰的芯片们不甘的叹息，由业余无线电协会会长刘紫檀同学牵头的复古计算展览计划悄然开始筹划。为了搜罗更多更有趣的展品，也为了让喜欢复古计算的同学们看可以更好的参与进来，两社共同成立了复古计算和无线电展筹备 QQ 群，并且通过管指委、Linux 用户协会公众号等多种渠道向校内同学发出征集通告。在同学们的踊跃参与下，展览收集到了计算尺、8086 兼容便携式计算机、486 PC-98 兼容机、PowerBook G4 等复古计算设备，CRT 电视机、VHS 影碟机、收音机、磁带机等复古电器设备。   此外，展览展出的展品还得到了校内多位老师的支持。网络信息中心的张焕杰老师得知展览的信息，向筹备同学们借出了曾经在校园网上工作过的 DEC 486 品牌机和 CRT 显示器。科大讯飞的方明老师，则贡献了曾经风靡的 FC 仿制机“小霸王”和电视机，以及几台晶体管收音机。同时，在少年班学院的代镭老师的帮助下，筹备组还借到了存放于少年班学院主控室内的库存串口鼠标器、Maxtor ATA 硬盘等硬件，以及 Windows 98、Visual Studio 6.0 等上个世纪的盒装软件。   场地是参观体验中的重要一环。得知两社筹办展览的消息，中校区创新实践基地的崔峰老师同意我们在展览当天使用中校区 3 号楼架空层北侧的场地，并且提供了插线板和桌子来布展。   同时，精美的宣传图片则是展现复古计算设备的绝佳方式。在摄影协会的帮助和支持下，筹备组于 4 月 29 日在摄影协会的影棚内拍摄了展品的展示图片，制作海报的同学之后又进行了仔细的排布。      但是，最重要的还是让复古计算设备可以正常运行，提供属于那个时代的操作体验。计划展出的 DEC 486 PC 机，因为原配的 540 MiB 康诺硬盘已经无法正常读取并且引导，筹备组要寻找一块合适的 ATA 硬盘进行替换。同时，该机 BIOS 不支持由 CD-ROM 驱动器进行引导和启动，而 3.5’’软盘驱动器又会在引导时提示读取失败，筹备组同学只能选择将系统镜像直接写入硬盘中。由于该机 BIOS 年代久远，对于硬盘驱动器需要手工设置 C/H/S 参数，而稍后十年中流行的 ATA 硬盘均为数十 GiB，这曾一度对修复工作产生了很大的阻碍。不过终于，在展览前几日，刘紫檀同学利用 86box 和 ATA 标准大概猜测了 BIOS 读取大硬盘时卡住的原因，将 C/H/S 参数手工设置为了 1023/16/63，并且关闭了 13H 磁盘读取中断的”LBA Convert”选项，最后让该机可以成功读取主引导记录，并且引导硬盘中前 503 MiB 安装的 MS-DOS 7.1 和 Windows 98 操作系统。至于展览所展出的 Amstrad PPC512 便携式计算机，则因其软驱只兼容 3.5‘’720KiB 磁盘，拷贝内容颇费了一番功夫。      展出   时间来到 5 月 8 日，在九点的阳光眷顾不到的架空层实践基地中，摊位已在桌子上铺展开来。近处是无线电设备展区，稍远些是各年代的主机，远处则是与“旧时代计算机“密切相关的 3.5’’，5.25’’和 8’’软盘与盒装 CD-ROM 发行的操作系统和应用软件。大厅中，旧物错落而设，踱步其中，唯有回忆斑驳。社员们和前来参与活动的同学们三两成簇而谈，四五环屏而观。   本次展览在复古计算之余，还融入了曾经颇为流行的业余无线电活动的科普介绍。业余无线电协会提供了协谷 G90S 短波电台、ICOM IC-R71E 短波接收机、宝峰 UV-5R 手持电台和德生 PL-680 收音机等设备送展，还有用于拍发等幅电报的多种电键以及配套的天线以供把玩。在中间聊的火热的，正是呼号为 BH6AIK 的业余无线电协会成员张逸凡，他在向围观的同学们细心地介绍业余无线电的玩法与意义，以及设备与通联的基本知识。虽然加入协会的时间尚不足一年，但他在讲解过程中的热情与流利，通联示范中的随性与娴熟，暗示着他已经可以独当一面了。在经过关于频率划分、摩尔斯电码和电波传播规律的科普后，不少同学都对这一爱好表现出浓厚的兴趣，显得跃跃欲试了。协会也在其中安排了一些实践环节，如指导新人使用中国科大业余电台 BY6DX 的呼号通联合肥本地友台，用收音机接收位于陕西西安的中科院国家授时中心播发的摩尔斯电码并解出对应的字母（BPM），聆听来自欧洲和大洋洲的广播节目，空中交通管制（ATC）语音信号等。这些无线电相关的一切都散发着信息超视距传输的魅力。      复古计算的“明星展品”之一是之前由刘紫檀同学负责修复的 DEC 486 微机。来参观的同学，很多都对这台 32MiB 内存，66MHz 主频，并且装有 VGA 显示卡，14GiB 硬盘的“大屁股电脑”展示出了浓厚的兴趣。这台计算机安装有 Windows 98 操作系统，在展览时好奇的同学的帮助下又安装了 Visual C++ 6.0——大家纷纷惊讶于 504MiB 的分区里，操作系统只占用了 250MiB，而编译器和 IDE 也只需百兆出头。看到 IDE 熟悉的界面，有的同学开始体验在 Windows 98 上复习自己的 C 语言程序设计。      “我晕，原来你也网上冲浪啊！”筹办团队中不少人对于互联网最初的记忆，都是拨号上网时调制解调器滴滴答答的拨号声音。本次展览中，筹办团队精心准备了由一台实达 56Kbps 串口调制解调器、一台 TCL 电话交换机和一台 Lenovo ThinkPad X61 笔记本内置的调制解调器组成的简易拨号上网体验平台。安装有 Windows 98 的 DEC 486 微机，通过串口连接实达调制解调器，再通过电话线和电话交换机连接到运行有 PPP 服务的 X61 笔记本，该笔记本再通过以太网连接到作为网关的笔记本，这台笔记本运行有 NAT 服务，可以将数据包转发到 eduroam 无线网。   服务配置过程并非是一帆风顺。先是 HyperTerminal 的“非法访问”，再是作为接入服务器的 X61 笔记本上运行的 RRAS 服务无法启动。但好在，各种“复古问题”经过详尽的资料查询和反复实验被一一解决，这台电脑最后终于连上“信息高速公路”，实现了“赛博飞升”，大家激动之余纷纷拍照。            在这台 DEC 486 微机旁边，其貌不扬的“上网本”却内藏玄机。该笔记本采用龙芯中科开发的龙芯 2F 处理器，从 BIOS 到操作系统均为开放源代码的自由软件。不少同学也登入系统，细细欣赏 cpuinfo 中的“ICT Loongson-2”字样。   PC-98 是 NEC 公司独立设计的一系列个人电脑产品的略称，而本次展出的“PC-98 兼容机”EPSON PC486NAS2 对于电子音乐和东方 Project 爱好者来说都是不容错过的展品。90 年代的膝上计算机、古铜烁金般的屏幕主色、网点与栅格交织出的纹理细节、略带拖影的视觉效果、干涩又略吵闹的背景音乐，这些要素加在一起，原汁原味的还原了东方 Project 旧作的表现。除东方系列作品外，参展者还特地演示了如何在这一设备上利用合成器进行编曲，着实令人大开眼界。      展览最内侧的设备可谓最为“复古”，一把对数计算尺吸引着不少人的目光。对数计算尺可以比较高效的计算乘法、三角函数和开平方等操作，是计算机出现之前的“利器”。除了计算尺，展览还展出了盒装 CD-ROM 软件和各种型号的软盘。一位参观的同学幽默地表示“今天终于见到了保存按钮的实体手办！”而 VHS 影碟机、白炽灯和录音机则将时光又偷偷往前拉回了一段时间。         乘兴欣然往，兴尽自然归，大半日的复古计算与无线电展在欢笑中落下帷幕。通过此次活动，同学们对早期的计算设备有了更多的认识。现在不仅是个人计算机，我们随身携带的手机，甚至是手环的计算能力都远超出这些设备。但是正是在这些看似缓慢而又简陋的设备的基础上，人们不断探索与推进，才促使了计算设备功能与性能的大幅发展。  ","categories": ["LUG 活动","业余无线电协会活动"],
"tags": [],
"url": "/news/2022/05/retrocomputing-and-radio-show/",
"teaser": null
},{
"title": "2022 秋季学期新生系列活动",
"excerpt":"在 2022 年 8 月 29 日、8 月 31 日、9 月 1 日、9 月 2 日，中国科学技术大学学生 Linux 用户协会分别于西校区的 3C201、203 教室和东校区的 2504、2621 教室开展了本学期的社团宣讲以及新生活力课程系列活动。         新生系列活动面向刚加入科大家庭，还在军训的同学们，希望通过我们的介绍让大家了解 Linux 和自由软件文化。我们的新生系列活动第一站是面向 2022 级信息学院同学的社团介绍。廖巍同学和李博诚同学分别在两个教室展开了宣讲，简要介绍了 LUG 的性质、维护的服务以及每年会举办的多样活动。廖巍还与在场的同学们现场演示了 Hackergame 2021 的赛题「旅行照片」，带领大家从一张普通图片的图片解读出拍摄的位置，赢得众人惊叹。      LUG 新生系列活动的第二站是新生活力课程第一部分：「网络资源/科研工具介绍」。我们来到了二教 2621 教室，与 2022 级计算机学院的一百余位同学进行线下分享，LUG 的指导教师程雨老师也来到了现场。李博诚同学准备了详尽的校内网络资源和学习科研工具的介绍，从校内常用网址到学校提供的正版软件，从 LaTeX 到 Markdown，从 Semantic Scholar 到 CSRankings，介绍的内容涵盖了学习和科研的方方面面。李博诚同学还当场向同学们演示了一下 LaTeX 在线编辑工具 Overleaf 与开源 Markdown 编辑器 MarkText 的使用，用实际的操作告诉大家排版精良的论文是如何编写出来的，而这一切每个人都可以做到。这次课程的内容十分详实，相信能为新同学们将来的学习生活提供不小的帮助。在第二天我们为少年班学院的同学进行了相同的一次分享，现场互动热烈，LUG 的招新工作也进行得十分顺利。         我们新生系列活动的第三站是新生活力课程第二部分：「Hello,World 漫谈」，由袁保杰同学为 2022 级计算机学院的新生讲授，LUG 的指导教师程雨老师也来到现场。袁保杰同学在课程中向同学们详细地阐述了一个程序的前世今生，讲述了我们用键盘敲下的程序从按下 F11 键开始，是怎样地经过预处理、编译、汇编、链接最终成为可执行文件的过程。之后他以一个非常简单的 C 程序为例，演示了逆向工程的过程，熟悉的 C 代码摇身一变成为汇编出现在我们眼前，分析这些汇编指令，看懂他们的逻辑是逆向工程的重点。在我们的课程现场，袁保杰同学还为同学演示了利用栈溢出攻击，将一个登录界面 Hack 掉的过程。袁保杰同学之后还提到了开放源代码和自由软件运动，他用天赋人权来形容自由软件精神。我们应该成为程序的主人，应该享有学习和修改程序代码的权力，我们使用程序更要懂得程序。此次课程深入计算的内核，探索程序的本质，相信袁保杰给同学们带来了看待程序的全新视野。      在 LUG 协会成员的努力和同学们的积极参与下，本次新生活力课程圆满结束。感谢校团委，校学生社团管理指导委员会和计算机科学与技术学院团委、信息科学技术学院团委和少年班学院团委的支持！   我们的社团活力课程讲义及活动照片均已上传到 LUG FTP 上：   第一次社团活力课程「网络资源/科研工具介绍」及社团介绍 PPT   第二次社团活力课程「Hello,World 漫谈」及社团介绍 PPT  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2022/09/2022-freshman-course/",
"teaser": null
},{
"title": "2022 软件自由日中国科大站",
"excerpt":"2022 年 9 月 17 日，中国科学技术大学软件自由日（Software Freedom Day）活动于下午 2 时 30 分在西区 3C101 教室及 B 站线上直播同步举行。本次活动我们邀请到中国科学技术大学网络信息中心总工程师张焕杰老师、PLCT 实验室的创始人及项目总监吴伟、那一科技 CEO 贾枭和中科院计算所在读博士生王凯帆为我们带来精彩的演讲。除此之外，在闪电演讲环节中陶柯宇和王永福同学也为我们带来了开源软件的使用心得。   由于第二课堂系统的推广效果，本次活动吸引了众多刚入学的大一同学来到现场参与本次自由软件日活动。相信这次活动能在同学心中播种下自由软件精神的种子。      2 点 30 分，在会长李博诚简洁地介绍了今日的流程安排和演讲嘉宾后，软件自由日活动正式开始。   首先由张焕杰老师为我们介绍了智能家居解决方案 Home Assistant，以及如何基于 Home Assistant，方便地连接各种外部设备，手动或按照自己的需求自动化地联动这些外部设备。介绍完成之后，张老师现场进行了演示过程，访问了家中的 Home Assistant 服务页面，向我们展示了如何在一分钟之内查看土壤湿度肥力，完成院子中桃树、李树和梅花的浇灌，并知道所消耗的水量。张焕杰老师的演讲让同学们进一步体会到了 Home Assistant 作为一个开源智能家居系统的强大能力，并让在场的众多同学对于这个开源解决方案产生了兴趣。      接下来，PLCT 实验室的创始人及项目总监吴伟为我们详细介绍了 RISC-V 以及其开源生态。他从拥抱开源软件的必要性开始切入，为我们先介绍了 RISC-V 诞生的背景和历史。其次介绍了围绕着 RISC-V 国际基金会开展的各类新进展；第三部分介绍国内 RISC-V 现状以及活跃的开发团队；最后，介绍 PLCT 实验室和 TARSIER 团队在 RISC-V 开源软件项目中的进展和同学们可以参与的新机会。作为一个新兴和开放的指令集架构，RISC-V 的发展势头正劲，出货量已超 100 亿颗，非常有希望在 2025-2030 左右跻身世界三大指令集架构之一。吴伟老师的演讲让同学们对于 RISC-V 的发展有了更深入的了解，也让同学们对于 RISC-V 开源生态的发展有了更多的期待。      随后那一科技 CEO 贾枭为我们介绍了软件供应链的安全问题。他为我们详细介绍了软件开发中从开发者编写、提交、依赖、构建和分发的各个环节中可能存在的威胁，并给出了一些解决的方法。比如：面对开发者提交有风险的改动，需要认真做好 Code Review。面对构建环境被污染的风险，可以考虑 CI 不联网/CI 从头开始/对工具链进行版本控制等。贾枭随后介绍了 “SLSA Levels” 用于评估安全等级。最后介绍了 Google 内部的具体实现方法，用真实的示例讲解如何真正做好供应链安全。      之后中科院计算所在读博士生王凯帆为我们介绍了香山处理器的敏捷开发实践过程。香山处理器作为一款开源的高性能 RISC-V 处理器在去年正式亮相，受到学术界和工业界的广泛关注。为了帮助开发，团队设计了一系列支持处理器敏捷开发的基础工具，如在仿真时拍摄快照，便于出错时回滚的工具等等。随后他为同学们介绍了一生一芯计划的开展情况，即使是本科生也可以通过一生一芯计划，通过学习，设计芯片并流片。         在简短的茶歇之后，闪电演讲拉开帷幕，远在北京的陶柯宇学长向我们介绍了 Wayland 的使用体验，和 X server 比较，指出了它的优势与不足。而王永福同学则上台现场快速用 Tailscale 建立了通道，使得两台主机通过在互联网上“打洞”互联。         约下午 6 点钟，今年的 SFD 活动顺利结束。自由软件就在我们身边，希望通过这次软件自由日活动，能够让更多的同学了解到自由软件，开始尝试并参与到自由软件的开发中来。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2022/09/SFD/",
"teaser": null
},{
"title": "Hackergame 2022 动员会",
"excerpt":"学生 Linux 用户协会于 2022 年 10 月 21 日晚 19:00 举办了中国科学技术大学第九届信息安全大赛（Hackergame 2022）动员会，旨在为参赛者提供比赛规则、流程和常用工具的介绍，帮助大家更好地准备比赛。      Hackergame 2022 是一项旨在推广信息安全知识和提高参赛者信息安全技能的比赛。比赛涵盖了多个方向的比赛题目，包括但不限于综合技能、程序逆向与漏洞利用、密码学与数学和网站安全类，通过同台竞技来激发同学们对信息安全的兴趣和热情，进一步提高大家的技术水平和实战能力。除了比赛本身，Hackergame 还提供了一个交流和分享的平台，参赛者可以借机和其他参赛者的交流和讨论，分享自己的技术和心得，进一步提高自己的水平。      在动员会上，袁保杰同学向参赛者详细介绍了比赛的内容、规则和注意事项，还演示了比赛的参赛流程和一些常用的工具和方法，为参赛者提供了有力的支持和帮助。袁保杰同学还向参赛者介绍了 Web 的基础知识——网络服务是如何由服务端和浏览器端合作呈现，以及这过程中可能会出现的漏洞。这为之后的比赛铺垫了基础知识。      随后，USTC NEBULA 战队队长李蔚林进行了战队介绍和招新宣讲。他向参赛者展示了 NEBULA 战队获得的各种荣耀和征战四方的过去经历，并介绍了 CTF 的入门方法。此外，他还向参赛者介绍了战队新生的培养方案，鼓励更多的同学加入到 NEBULA 战队中，提高自己的信息安全技能水平。      大赛动员会原定于线下在 3C101 进行，但在活动当天，突入其来的疫情防控打破了原先的安排，在多次调整后，动员会顺利在腾讯会议和 B 站直播同步举行。   整场录像已经上传至 LUG FTP，欢迎大家观看：LUG FTP  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2022/10/Hackergame2022-pep-rally/",
"teaser": null
},{
"title": "LUG 小聚：Node.js 介绍",
"excerpt":"2022 年 10 月 26 日，学生 Linux 用户协会举行了小聚活动。本次小聚是由刘良宇同学为我们带来的关于 Node.js 的技术分享。   Node.js 是一种基于 Chrome V8 引擎的 JavaScript 运行环境，可以使 JavaScript 在服务器端运行，使 JavaScript 不仅仅只是一种浏览器端脚本语言。Node.js 的出现使得前端工程师能够在服务端运行 JavaScript 代码，从而可以通过 JavaScript 来开发 Web 应用的整个应用程序。      刘良宇同学从 Node.js 的开发背景与概念、并发与异步、包管理器、构建系统与网页、应用等方面向我们全面介绍了 Node.js 的技术细节。      接下来是对 Node.js 的技术细节讲解。Node.js 有其独特的有点如高性能的异步 I/O 模型、超完善的 npm 仓库。刘良宇同学以 Yunzai-Bot &amp; oicq 为例子，用源码简单地介绍了 Node.js 在实战中的优势。      包管理也是 Node.js 的重要特色。刘良宇同学用一幅图，生动地展示了 Node.js 层层打包的特色。也教了大家如何管理依赖和自行打包。      在刘良宇同学的介绍下，我们初步了解了 Node.js 这一常伴我们的开发利器，相信会在将来的学习工作中起到帮助。  ","categories": ["LUG 活动","LUG 小聚"],
"tags": [],
"url": "/news/2022/10/gathering-nodejs/",
"teaser": null
},{
"title": "LCPU x USTCLUG 联合沙龙：Xmake 和墨干编辑器",
"excerpt":"2022 年 10 月 27 日晚 19:00，北京大学学生 Linux 俱乐部与中国科学技术大学 Linux 用户协会举办了联合沙龙。本次沙龙邀请到了 Xmake 的主要开发者 Ruki 和墨者实验室的开发者们，向参与者们介绍了这两个工具的用途和优势。  Xmake 是广受赞誉的轻量级跨平台自动构建工具，可以帮助开发者快速构建和打包应用程序，同时也支持远程构建和缓存等功能，可以理解为 Build backend + Project Generator + Package Manager + [Remote|Distributed] Build + Cache 的集大成者。Ruki 向我们介绍了 Xmake 的使用和开发历程。接下来介绍的墨干编辑器就是用 Xmake 构建的。   墨干编辑器，是墨者实验室开发的 GNU TeXmacs 的衍生版，对于论文等公式符号密集型写作。它提供了许多强大的功能，如实时预览、即时渲染、公式编辑、多平台支持等。开发者们从使用方法、工程结构、实际教学使用体验等多角度为我们介绍了墨干编辑器。他们的官网是 https://mogan.app 欢迎大家尝试。   活动录像：LCPU&amp;USTCLUG 联合沙龙  ","categories": ["LUG 活动","LUG 小聚"],
"tags": [],
"url": "/news/2022/10/gathering-xmake/",
"teaser": null
},{
"title": "Linux 101 讲义修订",
"excerpt":"2023 年 2 月，USTCLUG 成员对 Linux 101 讲义进行了审阅和修订。   主要工作：      将涉及到接近生命周期末期的发行版（例如 Ubuntu 18.04）的教程内容替换为最新版本（Ubuntu 22.04）的教程内容。   对教程中可能存在的错误进行修改，对教程中有不足的部分进行补充。   具体修改内容可参见 GitHub 仓库：ustclug/Linux101-docs  ","categories": [],
"tags": [],
"url": "/news/2023/03/linux101-revision/",
"teaser": null
},{
"title": "中国科学技术大学第九届信息安全大赛圆满落幕",
"excerpt":"中国科学技术大学第九届信息安全大赛圆满落幕。   2023 年 3 月 19 日下午，中国科学技术大学第九届信息安全大赛颁奖仪式在西区 3B103 举行。网络空间安全学院谭勇书记、USTC-NEBULA 战队指导老师吴文涛老师、本届比赛负责人、USTC-NEBULA 战队成员、本届比赛参赛选手出席了本次颁奖典礼。       谭勇书记发表了颁奖致辞。他鼓励同学们通过比赛提高分析问题和实际解决问题的能力，并分享了自己在研究生期间动手参与项目的经历。他号召同学们积极参与实践，希望本次信息安全大赛能够成为同学们展示科大风采的起点，为更多更广的比赛和活动奠定基础。根据得分结果，中国科学技术大学第九届信息安全大赛校内组评选出一等奖 1 名、二等奖 5 名、三等奖 25 名、新生奖 2 名、分类奖 4 名以及一血奖 18 名。谭勇书记和吴文涛老师为获奖同学颁发了奖项。      刘成龙同学荣获一等奖。      刘良宇、甘文迪、卢天祥、毛浩宇、武汉同学荣获二等奖。   刘威、叶知易、吴远韬、陈思、郝英屹、许睿达、郑逸、吕思源、余达一、牛楚蒙、谭旭、熊轶旸、李蔚林、叶升宇、李翰阳、舒英特、李远航、彭博、王星河、郑闻杰、郭耸霄、洪文杰、高宇、杨柳、黄科鑫同学荣获三等奖。      叶知易、吕思源同学荣获新生特别奖。      刘良宇、刘成龙、陈思、黄科鑫分别在综合技能（general）、 程序逆向与漏洞利用（binary）、密码学与数学（math）、网站安全（web）获得分类奖。      关佳旺、刘良宇、马瑞丰、卢天祥、刘成龙、罗浩铭、郑逸、吴正旭、贺若舟、刘泽仁、甘文迪、王星河、陈思、李蔚林、叶知易、郝英屹、何昕、牛楚蒙作为各题目的首位答对者，荣获了一血奖。      中国科学技术大学第九届信息安全大赛由中国科学技术大学网络空间安全学院、中国科学技术大学团委、中国科学技术大学管指委主办，中国科学技术大学学生 Linux 用户协会、中国科学技术大学微软学生俱乐部、中国科学技术大学 NEBULA 战队和中国科学技术大学信息安全俱乐部承办。此外，东北大学 NEX 信息安全创新团队、复旦大学信息网络安全协会、复旦大学六星战队、国防科技大学 BOI 战队、哈尔滨工业大学 Linux 开源学生俱乐部、哈尔滨工业大学紫丁香 CTF 俱乐部、吉林大学 Linux 用户协会、吉林大学 Spirit 战队、南京航空航天大学 Asuri 信息安全战队、同济大学 xd1ddw 战队、西安电子科技大学信息安全协会、浙江大学 AAA 战队（Azure Assassin Alliance）、中国海洋大学 Blue-Whale 战队、中山大学互联网与开源技术协会和中山大学 W4terDr0p 战队也参与了此次比赛的协办。      本届比赛于 10 月 22 日中午 12:00 正式开启，历时七天，参赛人数超过 4500 人，刷新了历史记录。比赛共设置了约 25 道题目，涵盖了综合技能、程序逆向与漏洞利用、密码学与数学、Web 安全等多个方向。命题延续了往届的优良特色，努力结合科大特色，坚持向新生倾斜，控制题目难度梯度，强调引导和教育工作。正如信息安全的千变万化，每道题目各有其独有的魅力。《旅行照片 2.0》通过照片追随学长脚步；《关于 RoboGame 的轮子永远调不准速度这件事》、《线路板》、《片上系统》等题目则是做了硬件里的信息安全的尝试。比赛选手们则通过洞幽察微，打破常规，综合运用方法技能，勇攀信息安全的高峰。   官方题解和参赛选手的解答公布于 hackergame2022-writeups ，欢迎大家学习交流。  ","categories": [],
"tags": [],
"url": "/news/2023/03/hackergame-award-ceremony/",
"teaser": null
},{
"title": "Linux Install Party 2023",
"excerpt":"Linux Install Party 是中国科学技术大学 Linux 用户协会每年必办的活动，通过手把手帮助同学们安装 Linux，来增进大家对 Linux 了解，宣传开源和自由软件精神。      2023 年 4 月 2 日下午， Linux Install Party 作为本期 Linux 101 课程的第一课在 3C101 举行。由廖巍同学和王永福同学介绍了 Linux 的来源、优点和各大发行版的区别之后，令人心动的 Linux 安装就正式开始了。      本次活动我们尝试了多种 Linux 的安装体验方式，如注册使用 Vlab ，尝试 Windows Subsystem for Linux ，安装打包好的 Linux 虚拟机镜像，在虚拟机中体验安装过程和直接真机安装。      很多同学在使用虚拟机体验 Linux 之后决定腾出硬盘空间来安装双系统。在确认相应分区无重要数据后，使用 Windows 的压缩卷功能腾出用来安装的空间。随后在 BIOS 中关闭安全启动并选择使用 U 盘引导，最后在 Ventoy 的列表中选择相应发行版的安装镜像就能进行相应的安装。   因为在 Mac 上的 Linux 安装比较复杂，同为 Mac 用户的会长李博诚负责为同学们的安装过程进行指导。      时间很快来到了六点，同学们纷纷带着各个 Linux 发行版满意地离开了教室，相信 Linux 和自由软件们可以自此常伴大家。   我们本次的讲解视频回放已上传到 LUG FTP，欢迎观看。  ","categories": ["LUG 活动"],
"tags": ["linux-install-party"],
"url": "/news/2023/04/Linux_Install_Party_2023/",
"teaser": null
},{
"title": "Linux 用户协会参加 2023 开源软件论坛",
"excerpt":"2023 年 8 月 19 日，由南京大学人工微结构科学与技术协同创新中心主办的“2023 开源软件论坛”在南京大学鼓楼校区举行。论坛主要围绕“高校中的开源软件”、“高校中的开源服务”、“高校中的开源组织”和“高性能计算”等议题展开讨论。中国科学技术大学学生 Linux 用户协会会长廖巍同学在会上做了报告，分享在信息安全大赛中的规划、筹办和运营等相关经验。      中国科学技术大学信息安全大赛，比赛平台链接是 hack.lug.ustc.edu.cn。在去年的第九届信息安全大赛中，注册选手数超过了 4500 人，并有 10 余所协办高校。赛题难度梯度提升，比赛在提高题目质量的同时，也有对新手循序渐进的引导。题目背景结合实时，富有趣味，选手在解密过程中既能丰富各种小知识，又能提高信息安全能力。      信息安全大赛的时间跨度较大，在 10 月前主要是一些准备工作，比如招募比赛的出题人和分管负责人，并完成出题工作。10 月到赛前这段时间中，需要对题目和平台进行全面的测试，同时进行宣传工作，通过公开平台对比赛进行宣传推广，并处理与协办高校的外联事务等。比赛进行期间，需要维持比赛秩序，比如防止讨论题目解法等作弊行为；还要保持对比赛相关问题的高度响应，比如有选手邮件反馈比赛相关问题时，需要及时排查及时回信。赛后需要整理各榜单的成绩认证，以及颁奖等收尾工作。      2022 年第九届信息安全大赛于 10 月 22 日中午 12:00 正式开启，历时七天，参赛人数超过 4500 人，刷新了历史记录。比赛共设置了约 25 道题目，涵盖了综合技能、程序逆向与漏洞利用、密码学与数学、Web 安全等多个方向。命题延续了往届的优良特色，努力结合科大特色，坚持向新生倾斜，控制题目难度梯度，强调引导和教育工作。正如信息安全的千变万化，每道题目各有其独有的魅力。《旅行照片 2.0》通过照片追随学长脚步；《关于 RoboGame 的轮子永远调不准速度这件事》、《线路板》、《片上系统》等题目则是做了硬件里的信息安全的尝试。比赛选手们则通过洞幽察微，打破常规，综合运用方法技能，勇攀信息安全的高峰。      除中国科学技术大学外，同作报告的还有来自南京大学、清华大学、山东大学、北京大学、浙江大学、西安交通大学、吉林大学等高校的师生。与会成员在论坛上进行了广泛且深入的交流。这次论坛为高校中的开源软件爱好者们提供了交流的平台，对在高校和科研院所中推广开源软件，建设开源生态具有积极的推动作用。  ","categories": [],
"tags": [],
"url": "/news/2023/08/nju-talk/",
"teaser": null
},{
"title": "2023 秋季学期新生活力课堂",
"excerpt":"在 2023 年 9 月 2 日，中国科学技术大学学生 Linux 用户协会于西校区的 3A102 教室开展了本学期的新生活力课程系列活动与社团宣讲。         新生活力课堂面向刚入学还在军训期间的新同学们。活动的上半场中，廖巍同学为大家带来了《实用工具介绍》，主要内容为科大的网络资源与学习生活中的实用工具的使用，希望新生能够在大学阶段快速地获取所需内容、利用常用的工具来提高学习科研的效率。廖巍从校内常用网址及其内容出发，讲到由科大计算机实验教学中心提供的 Vlab 云桌面、由 LUG 维护的 GitLab、由中国科学技术大学网络信息中心维护的 USTC LaTeX 这些云工具，再讲到一些专属于在校同学的“特权服务”。在后续的常用工具的介绍中，廖巍现场演示了 LaTeX 与基础 Markdown 编辑器 Typora 的使用，简明直观，现场反响互动热烈。      新生活力课程的下半场是王永福同学的《日常生活的信息安全》，他给同学们科普了基础的网络安全知识与常见的信息安全漏洞。提及网络安全防范时，王永福以 2022 年网络信息中心开展的以“中秋免费月饼领取”为主题的钓鱼邮件演练活动为例，警醒同学们网络诈骗无处不在。该次课程内容生动详实、贴近大家的日常生活，相信能为新生留下深刻的印象。      活动的最后，我们简要地介绍了 LUG 的性质、维护服务与开设活动，同时也对开源软件进行了一定的宣传与推广。在 LUG 协会成员的努力和同学们的积极参与下，本次新生活力课程圆满结束。感谢校团委与校学生社团管理指导委员会的支持！   活动照片和讲稿均可在 LUG FTP 上查看：   《实用工具介绍》PPT   《日常生活的信息安全》PPT  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2023/09/2023-freshmen-course/",
"teaser": null
},{
"title": "2023 软件自由日中国科大站",
"excerpt":"2023 年 9 月 16 日，中国科学技术大学软件自由日（Software Freedom Day）活动于下午 2 时 30 分在西区 3C101 教室及 B 站线上直播同步举行。本次活动邀请来自 PLCT 实验室的项目总监吴伟、来自大连理工大学的胡张治同学、来自 PLCT 实验室的软件开发工程师章翔以及来自墨客社区的沈达为我们带来精彩的演讲。除此之外，在闪电演讲环节中陶柯宇同学也为我们分享了他为科大镜像站编写的实用工具。      14 时 30 分，校学生 Linux 用户协会会长廖巍同学简洁地介绍了活动流程安排和演讲嘉宾后，软件自由日活动正式开始。         首先，吴伟老师回顾了 RISC-V 诞生的背景和历史。他由三个基本的观测得出两点推论，一是开源软件会将“吞噬一切”，二是必将出现自由开放的指令集，由此 RISC-V 应运而生。吴老师表示 RISC-V 的出现正好在一个合适的时间，为开源生态填补上了重要一环。在这之后，吴老师介绍了开源软件世界对 RISC-V 支持的各类新进展，同时也介绍了国内 RISC-V 现状以及活跃的开发团队、全球开源社区对 RISC-V 做出的支持与适配。其中，吴老师特别提到 PLCT 实验室对 RISC-V 开源软件项目做出了相应的贡献，期待能有更多人能够参与建设 RISC-V 社区。演讲结束后，吴伟老师为现场到来的同学每人赠送了一块 RISC-V 开发板，引起了热烈反响。      接下来，远在大连理工大学的 Arch Linux 用户胡张治同学通过现场连线与我们交流。作为一名 archlinuxcn 的维护者、FSF 成员，胡同学分享了自己参与开源社区的经历。在他演讲的第二部分，胡同学强调了自由软件的价值、推崇对用户自由与安全的重视，并分享了他个人目前正在使用的自由软硬件。在讲述的同时，胡同学通过远程拍摄展示了他的电子设备，包括装有 Arch Linux 的笔记本电脑、装有各类开源自由软件的智能手机等。他介绍了 Mastodon 分布式的社交网络与 Matrix 等开放协议，并回答了与 GNU/Linux、Android 系统相关的问题。在演讲的最后，胡同学提及了一些未来有潜力的自由软硬件，并与现场同学交流了国内自由软硬件的使用心得，引发了线上和现场同学的广泛讨论。      经过短暂的茶歇，同样来自 PLCT 实验室的软件开发工程师章翔老师为我们介绍了 OpenJDK8 移植 riscv64 的过程与进展，希望新人做移植工作时少走弯路。章老师首先对 OpenJDK 做了一些简要的介绍，然后从编译开始到解释器的移植与最后的运行调试，逐步介绍了移植的进展与过程，并着重分享了几点宝贵的移植经验。演讲结束后，现场同学积极提问，这让同学们对这一工作也有了更加深入的理解。         在这之后，闪电演讲拉开帷幕。来自墨客社区的沈达学长讲述了墨客社区的筹建工作，并分享了他追逐梦想的过程中经历的些许坎坷。墨客社区希望构建一个开放式的科技知识库，沈达学长在分享自己创业之路的同时也鼓励各位同学将自己的想法付诸实践。陶柯宇同学紧随其后，为大家介绍了自己编写的 HTTPS 镜像同步工具，通过解析目录树网页的方法来替代 HEAD 请求以获取源数据，降低了同步的开销。      17 时 30 分，今年的软件自由日活动完满结束。活动场上场下互动交流效果理想，演讲和分享丰富了同学对开源社区和自由软硬件的认识，同时也激发了同学们的思考和创造力，相信无论是开源社区还是自由软硬件的宣传都将深入人心。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2023/09/SFD/",
"teaser": null
},{
"title": "LUG 小聚：Git 简介与使用心得分享",
"excerpt":"2023 年 10 月 22 日，校学生 Linux 用户协会举办了一场小聚活动。本次小聚是由王永福同学为我们带来的关于 Git 的简介与使用心得分享。      Git 是一款开源的分布式版本控制软件，多用于项目的管理与合作开发，能够便捷地进行开发历史回溯。Git 由一系列的小工具组成，配合使用以完成工作任务。      首先，王永福同学从创建工作目录、初始化 Git 版本库、编辑文件、添加到暂存区、进行最终的提交等方面演示了 Git 的基本操作，给线上线下的同学们一个对 Git 使用的直观理解。      紧接着，王同学结合他上述操作为大家讲明了 Git 的基本工作原理。工作区中含有一个 .git 目录，存放着 Git 版本库。Git 所有东西都是对象存储的，基本命令可以将文件在工作区与版本库间移动。每个提交（commit）构成了一个节点，Git 对分支的生成、合并与并行合作都有较好的支持。      在介绍完基础知识后，王同学也同样介绍了 Git 的一些进阶使用技巧，如分支（branch）相关操作、代码托管等等，同时也列举出了 Git 的常用命令并对其进行解释。为了对开发历史版本有更直观的了解，王同学推荐了几款图形化工具，其中重点展示了 VSCode 与 GitLens 的协同工作效果。      小聚接近尾声，王同学在最后分享了自己 Windows 与 Linux 协同工作时的心得体会，也提供了更深入了解 Git 操作的渠道。分享结束后，现场的同学积极提问，这周的小聚便在热烈的讨论声中画上了句号。  ","categories": ["LUG 活动","LUG 小聚"],
"tags": [],
"url": "/news/2023/10/gathering-git/",
"teaser": null
},{
"title": "Hackergame 2023 动员会",
"excerpt":"校学生 Linux 用户协会于 2023 年 10 月 27 日晚 19:00 举办了中国科学技术大学第十届信息安全大赛（Hackergame 2023）动员会，旨在为参赛者提供比赛规则、流程和常用工具的介绍，帮助大家更好地准备比赛。      Hackergame 作为一项旨在推广信息安全知识和提高参赛者信息安全技能的比赛，涵盖了多个方向的赛题，包括但不限于综合技能、程序逆向与漏洞利用、密码学与数学和网站安全类等。Hackergame 的题目设计不仅考察了参赛者的理论知识，更注重实际操作，使参赛者能够在比赛中不断提高自己的技术水平和实战能力。除了比赛本身的挑战，Hackergame 还提供了一个宝贵的交流和分享的平台。参赛者有机会与其他技术爱好者交流，分享自己的技术心得，并学习他人的经验。这种技术社交不仅促进了信息安全领域的知识传播，也为年轻的技术爱好者提供了与同行互动的机会。通过这种互动，参赛者能够建立联系、拓宽视野，更好地了解信息安全领域的前沿发展，这对于个人的职业发展和技术成长都具有重要意义。      活动首先由 Linux 用户协会的杨柳同学担任主讲人，他详细介绍了比赛的基本信息，包括比赛时间、网址和参赛须知等。杨柳同学还分享了一些自己的解题思路与往年的参赛经验，让参赛者能够更好地准备自己，迎接比赛的挑战。      紧接着，NEBULA 战队的崔泽仁同学上台进行了战队的招新宣传。他介绍了 NEBULA 战队的背景和成就。崔泽仁同学还详细介绍了 CTF（Capture The Flag）比赛的一些情况，包括比赛形式和赛程等，为想要参与比赛的同学提供了宝贵的信息。他还回答了同学们提出的问题，解除了他们的疑虑，吸引了一部分同学加入这个充满活力的团队。      最后，NEBULA 战队的袁保杰同学举例了 Hackergame 2022 的部分题目，为大家详细介绍了一些题目的解题方法。他通过实际案例，生动形象地展示了解题的过程，让参赛者们能够更好地理解和掌握解题的技巧。袁保杰同学的示范受到了在场学生的欢迎，大家纷纷表示受益匪浅。      整个动员会充满了技术氛围，参与者们积极互动，踊跃提问，展示了大家对技术挑战的浓厚兴趣。通过本次动员会，参赛者不仅获得了宝贵的比赛信息和解题思路，还有机会加入 NEBULA 战队，与志同道合的伙伴一起挑战技术巅峰。   Hackergame 2023 动员会为比赛的顺利进行提供了有力支持。希望更多的同学能够积极参与比赛，锻炼自己的技术能力，同时也感谢 NEBULA 战队为大家提供了如此精彩的分享和招新机会。期待能在比赛中见证同学们的精彩表现！  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2023/10/Hackergame2023-pep-rally/",
"teaser": null
},{
"title": "Hello! LUG Planet",
"excerpt":"欢迎大家来到 LUG Planet！这是一个刚刚被发现的新星球，百废待兴。本文是 LUG Planet 的说明书，在你入驻之前，不妨先驻足欣赏一下这片风景。😀   LUG Planet 是什么？   LUG Planet 是……      由 USTCLUG 负责运营和管理的群体博客。   目标读者与参与者：            USTCLUG 会员；       认同 USTCLUG 理念的同好；       希望积极参加 USTCLUG 线上活动的朋友。           主要话题为 USTCLUG 社团的活动覆盖范围：            UNIX、Linux 及自由/开源软件；       Windows 与 Microsoft 新技术；       信息安全；       这些技术与 USTC 的碰撞与融合。           LUG Planet 是精神上的 Linux 文摘 计划的延续。我们认可这个群策群力式的知识汇集的理念，但使用更方便和更自由的形式，从而鼓励大家能更积极地参与到这个项目中来。   订阅我们   你可以做一个默默潜水的读者，也可以在评论区与作者激辩，或者亲自成为写作者。但无论如何，你一定非常关注 LUG Planet 的动态。所以我们提供了多种方式确保你能得到及时的通知：      RSS 订阅（推荐）。由 LUG Planet 本身提供的服务，最完善且及时；   QQ 公众号。QQ 号：2786229166；   微信公众号。ID：ustclug；   Telegram 频道。邀请链接：https://t.me/lug_planet。   免责声明：我们可能不会将所有动态都公布在这些信息渠道上。   如果你想“共襄盛举”，加入写作者的行列，就请仔细阅读下面的内容，确保我们达成共识～   运作方式   作为一个群体博客，LUG Planet 严重依赖于各位作者的辛勤劳动，没有内容，博客将不能称为博客。虽然为时尚早，但请允许我在此提前表示感谢！ 🙂   在 LUG Planet 上，主要有两种角色类型：作者和编辑。下面我们详细介绍这两类角色的职责。如果你不认可其中的某些条款，请与我们联络并陈述理由。   （其实还有“牛顿”——运维人员，不过就让他们继续呆在幕后吧～）   作者   任何人都可以成为作者！我们不限制你的身份，无论你是否是 USTC 的学生、校友、老师，只要你认同 USTCLUG 的理念，我们就欢迎你的来稿。   参与的方法很简单，只需为 本网站仓库 提交 Pull request 即可（如果文章包含图片等大二进制文件，需要将相关文件 PR 到 网站静态内容仓库）。具体操作细节可参考 仓库 README 与 Planet 文章模板   如果觉得麻烦，可以使用邮件（见文章最后）等方式单独联系我们，我们可以帮助排版并发布 :-)   （在未来我们会根据反馈定期对文章进行评选，优秀作品的作者有机会得到我们的奖品哦~）   与此同时，作者应该承担如下责任：      遵守 LUG 网络服务总则；   对内容的真实性、有效性和合法性负责；   配合编辑对稿件质量进行提升。   发布后，我们鼓励作者根据读者的评论持续改进文章质量。   任何作品的著作权属于原作者，但如果你想在 LUG Planet 这个平台上发布作品，需要同意：      USTCLUG 可以对这些内容进行再分发，即可以在 LUG Planet 及其他 LUG 官方信息渠道（包括但不限于 QQ 空间、Telegram 频道等）重发布；   USTCLUG 可以对这些内容进行微小修改。我们不会改变文意，大概是帮助你修改一些错别字和术语大小写等等细枝末节的问题；   USTCLUG 可以使用 USTCLUG 的名义对这些作品进行宣传；   文章发布以“现状”发布。不同版本的同一作品，其授权许可应该是互相独立的。在 LUG Planet 上发布作品就代表你同意：即使未来变更作品的许可协议，已被发布的版本将仍然按原有协议许可给 USTCLUG 展示或以上述被提及的方式继续使用。在未作出特别陈述的情况下，在 LUG Planet 上编辑你撰写的已经发布的文章默认继续使用上一个版本的许可协议。（简单说，就是一旦你的文章被发布，就无法撤回了。但你有权选择将新版本的文章不授权给 LUG Planet 使用。）   为了方便起见，除了这些条款，你应该允许你的作品在 CC BY-NC-SA 4.0 (国际) 协议下发布，同时同意上面的附加条款。这是因为我们不是律师，所以选择一个已经写好的许可证书。   这里需要提醒一下，虽然文章的版权仍然属于原作者，但发布与否是由编辑决定的。   编辑      审核评论及垃圾评论清理；   审核稿件是否适合发布在 LUG Planet 上；   在能力范围内，协助作者确认发布该文章是合法的（但不提供任何担保）；   在能力范围内，协助作者改进文章质量。   投稿标准与类型   为了鼓励大家能积极投稿而不要过多地考虑质量问题，我们设立的标准非常宽松：      合法；   内容长度不少于三句话；   使用简体中文（汉语普通话），正确使用标点符号；   语句通顺，正确输入专有名词的大小写，不故意欺骗读者；   符合本博客的活动主题。   我们特别欢迎以下类型投稿：      小聚话题的延伸   折腾的心得体会   自由/开源软件教程   有趣的自由/开源软件的推介   通俗易懂的技术内幕   但如果你要长篇连载（连载篇数大于等于 3），那么请向编辑们证明你能完结这个系列！   上面说得可能有些抽象，下面举几个例子吧。当然，不限于这些例子。      你是小聚的主讲人。讲完后意犹未尽，那么你可以在这里进一步阐述；   你是小聚的听众之一。听完后意犹未尽，那么你可以在这里发表你的看法并进行延伸讨论；   你是 Linux 新手，不管是安装还是维护 Linux 都有了自己的独特的心得和体会，那么我们也欢迎你在这里发布；   你解决了 Linux 在某种硬件上的兼容性问题，而在互联网的其他地方并不能找到解决方案，那么我们特别欢迎你在这里发布；   你对某种 Microsoft 新技术有一定了解，那么我们欢迎你在这里向大家介绍。   标准很宽松，话虽这么说，但我们仍然有“禁区”。下面这些话题是我们认为不适宜的：      过偏过难的技术向文章            过于专门的文章我们也许无力审核       读者面过于狭窄，且可能与 LUG Planet 目标读者重叠较小，发布在 LUG Planet 上“性价比”较低           业界资讯            这类文章时效性强，与更偏向于积累知识的 LUG Planet 不太搭调       我们认为这类文章有更好的资讯站点           商业广告及赞助内容            USTCLUG 是一个不营利的学生社团           与 LUG 主题没有任何关系的内容            包括但不限于新式永动机设计、大陆漂移学说不成立的分析、相对论错误的第 114514 种证明       编辑和读者对这些内容都不感兴趣，所以不能发布           其他任何编辑认为不适宜的内容   联系方式   如果你有任何有关文章发表上的问题、或任何对 LUG Planet 发展上的建议，请立即与我们联络。联系邮箱：planet@ustclug.org。   目前 LUG Planet 不知道谁在负责 😥   更新日志   2021-01-24: 删除了有关 Wordpress 的内容，并更新了订阅方式。   2021-01-26: 更新了投稿操作细节。  ","categories": [],
"tags": [],
"url": "/planet/2018/08/hello-lug-planet/",
"teaser": null
},{
"title": "USTC Linux 用户生存指南",
"excerpt":"本指南指导中科大 Linux 用户如何使用 Linux 完成各门课程、处理学业事项，以及运行需要的专业软件。“兼容性”仅代表使用 Linux 完成任务的难易程度，与其他指标（如课程本身质量和难度）无关。   注意：本指南目前仅包含部分计算机专业本科课程。欢迎其他同学贡献更多内容！   课程   程序设计   mk (16 级):   程序设计课程主要讲授 C 语言知识，而 C 语言本身就是用来 UNIX 的原生语言，所以不会有任何障碍。   建议使用 GCC 或 Clang 作为编译器，使用 GDB 作为调试器。可以选用任意一款文本编辑器（Vim、Emacs、Sublime、Atom、VSCode、gedit、Kate 等）或集成开发环境（如 CLion、Geany、KDevelop）。   兼容性：★★★★★   数据结构   mk (16 级):   主要讲授数据结构及其 C 语言实现。和程序设计一样没有任何问题。   课本（严蔚敏版数据结构）分光盘版和无盘版。光盘内容为算法和数据结构的演示程序，仅支持 MS-DOS 和 Windows，其功能可完全由 VisuAlgo 替代。所以建议购买无盘版。   taoky (17 级):   补充一点，如果真的要跑光盘的话，用 wine 和 DOSBOX 可以顺利执行。   兼容性：★★★★★   模拟与数字电路实验   mk (16 级):   旧开发板：Digilent Nexys 2 和 3 均有 Linux 工具，Xilinx ISE 也有 Linux 版本。笔者经验是 Xilinx ISE 可以正常使用。   新开发板(Digilent Nexys 4 DDR)：Xilinx Vivado 有 Linux 版本。可模拟，综合，实现，烧录。（含串口通讯等 exe 文件的实验可能无法正常开展）   注：除了烧录 FPGA，可以完全使用自由软件替代。仿真可以使用 Icarus Verilog 和 GTKWave。   兼容性：★★★☆☆   taoky (17 级):   我们这一届开始全面用新的开发板 (Nexys 4 DDR)，实验可以完整在 Linux 上完成。（没有见到上面说的串口通讯实验）   兼容性：★★★★★   计算机系统概论（H）   mk (16 级):   LC3 Tools 提供 Linux 版本。作业和 Lab 只需提交 PDF 版本。教学资源、课程要求见课本官网或课程官网：http://acsa.ustc.edu.cn/ics/。   LC3 Tools 二进制文件(.AppImage)   taoky (17 级):   LC3 Tools Linux version 没有中断的支持。不过我们这一届没有出这个实验。   兼容性：★★★★☆   计算机组成原理   mk (16 级):   实验主要为仿真，FPGA 开发板使用较少。部分仿真实验使用 Xilinx ISE 较为方便。最后的大作业可选烧录到 FPGA 上。   注意，本课程可能必须使用 Xilinx ISE 进行仿真，因为只有 ISE 支持以直观方式查看「内存」的内容。   兼容性：★★★☆☆   taoky (17 级):   和数电实验一样。而且我觉得搞 MIPS/RISC-V 的 toolchain Linux 更方便。   兼容性：★★★★★   regymm (17 级):   注：如果有串口通信实验，在 Linux 上有 picocom 等工具，不必非要使用专门的 exe 软件。   操作系统原理与设计   mk (16 级):   操作系统课不可能绕过 Linux！就算是 Windows 用户也会被迫安装 Linux 虚拟机。所以 Linux 用户不会遇到任何问题。   兼容性：★★★★★   编译原理与技术   mk (16 级):   本课程会大量使用开源/自由软件，如 Flex、Bison、ANTLR、LLVM 等。作为 Linux 用户，当然 Feel at home~   兼容性：★★★★★   计算机网络   mk (16 级):   使用 Wireshark，支持 Linux。   taoky (17 级):   不同班级的实验会不一样，但是基本上都需要使用 Wireshark。有些实验会有 socket 编程相关的内容，兼容性上没有问题。   兼容性：★★★★★   微机原理与系统   mk (16 级):   需要用到 MASM。大概使用 DOSBox 就能应付（？）   taoky (17 级):   我记得我做微机原理实验的时候，开了个 Windows XP 的 VM，毕竟实模式的 DOS 还是有点麻烦的，如果处理不好，每次都要重开 DOSBOX。而 XP 的好处是可以用 NTVDM 直接跑 MASM，并且大部分实验中编译得到的 .com 文件也可以直接跑，只有少部分实验不得不开 DOSBox。   另一个麻烦的东西是 Emu8086。没有测试过它能不能用 wine 跑起来（感觉应该可以）。   相比于其他依赖 Windows 的实验来说，微机原理比较好的一点是，可以直接开个非常轻量的 Windows XP 虚拟机完成所有实验。不过这门课现在变成选修了。   BTW: 有同学问如何让 DOSBox 在 Linux 下在当前终端处理输入输出。如果有这样的需求（比如说你在用 VSCode Remote 连到某台机器上做实验），可以尝试 https://github.com/dosemu2/dosemu2，参考 https://retrocomputing.stackexchange.com/questions/16173/emulate-a-text-mode-dos-program-using-a-unix-terminal。   兼容性：★★★☆☆   算法基础   mk (16 级):   和数据结构差不多，写一些与平台无关的算法代码。   兼容性：★★★★★   数据库系统及应用   mk (16 级):   PowerDesigner?! 看起来只能 Wine / 虚拟机 了。   taoky (17 级):   我这届金培权老师班级的实验是：实验一写 SQL，实验二用 PowerDesigner 画图，实验三写使用 MySQL 的小 project。实验一和三都可以在 Linux 下顺利完成，只有实验二需要依赖 Windows。   兼容性：★★☆☆☆   人工智能基础   mk (16 级):   实验与操作系统关系不是很大~   兼容性：★★★★★   计算机体系结构   mk (16 级):   写模拟程序，可以使用任何语言，所以问题不大。   兼容性：★★★★★   taoky (17 级):   目前体系结构实验变成了写 Verilog，跑 Vivado。最后一个实验要求运行多 Cache 一致性和 Tomasulo 模拟器，这两个是 Windows 程序。我用 wine 尝试跑过，发现显示有一些问题。   兼容性：★★★☆☆   大学英语听说 I-IV   regymm (17 级):   这门课可能需要随书附带光盘中的练习资料。自带的练习软件无法在 wine 中运行。然而，光盘中的音频和视频文件均可以直接播放（老师可能也会提到这一点）。   同时，二教 8 楼等听力考试的机房似乎也在平时开放供同学使用。   兼容性：★★★☆☆   金工实习   regymm (17 级):   需要使用 AutoCAD 和 SolidWorks 完成课后设计作业。或许有自由软件替代。这类软件对图形要求较高，VirtualBox 上表现不佳，我只能选择使用 VMWare。这方面似乎 Linux 上确实无太好的解决方案。   虚拟仿真实验需要安装科大平台提供的 Windows 程序并在指定浏览器运行。在 VirtualBox 中使用时图形性能十分低下，不影响完成实验但体验不佳。   如果手头没有性能较好能够在 VMWare 中运行 CAD 软件的机器，可以选择在工院机房完成，那里有性能不错并预装好所需软件的 Windows 机器。   兼容性：★☆☆☆☆   大物实验   regymm (17 级):   对于大部分实验，只需要处理数据并绘图。Origin 是”官方推荐“的软件，但是用 MATLAB 或 Python 等可以胜任。   个别实验似乎会要求用 U 盘拷贝 Origin 文件并课下分析，这就没有办法只能用 Origin 了。而也有个别实验让我觉得 Origin 明显是更加明智的选择。   个别实验需要用（可能是实验室助教自己编写的）基于 MFC 等框架的处理程序，但我遇见的所有情况都是在课上分析完成，并不需要在自己电脑上使用这些程序。   核物理专业实验等需要分析一些专门处理软件（探测器上位机）或示波器导出的数据，但似乎都是纯文本，用 Linux 不会有什么困难。有时也可能使用 ROOT.   总之，如果你只需要做一级实验，应该不会遇到任何 Linux 无法处理的情况。然而如果你需要做三级甚至更多级，最好为 corner case 做好准备。对于这一系列本就较为繁琐的课程，从节约时间的角度考虑，装上 Origin 以备不时之需也是应该的，即使是在偶有问题的 wine 上。   兼容性：★★★★☆（一级二级），★★★☆☆（三级至五十三级）   计算物理   regymm (17 级):   除了 C、C++、Fortran 等编程外，可能用到 MATLAB、Mathematica、Origin  等，但没有任何一个是必须的。可以根据个人喜好或兼容性选择。   兼容性：★★★★★   计算方法   regymm (17 级):   除了基本程序设计软件之外，可能会用到 MATLAB.   兼容性：★★★★★   学业杂项   托福   regymm (17 级):   小站托福可以在 Crossover 中较好的运行，有 bug 但并不会在做题过程中出现。不建议在虚拟机中使用，因为音频可能质量下降。   兼容性：★★★★☆   实验报告/文书编写   regymm (17 级):   无论是 LaTeX、LyX、Texmacs 还是 IDE 如 TexStudio，都有 Linux 版本，甚至可能安装更加容易。   Word 或 Excel 等格式的文件主要是社团/学生会/班级的填报表格等，WPS for Linux 可以胜任。如果不放心，可以在手机上的 Office 软件中 double check. 另外，我在 Crossover 中安装的 Office 2010 套装运行良好（而 Office 2013 和 Office 2016 经常出现各种问题）。   兼容性：★★★★☆   申请出国   regymm (17 级):   文书可以用 TeX，填写各种申请表也只需要一个 modern 的浏览器。需要在 PDF 中添加注释，或在 Word 文档中编辑的情况很少但确实存在。Linux 上的 Foxit Reader 是不错的 PDF 编辑器，但在这种事情上我还是选择了虚拟机中的福昕企业版（科大正版软件有提供）和较新的 Office 套装。   兼容性：★★★★★   专业软件   MATLAB   regymm (17 级):   专利软件 MATLAB 是有 Linux 版的，并且科大正版软件有所提供。本人在用 MATLAB 完成计算、绘图、网络编程、Simulink 等任务时均未遇到任何问题。   然而，如果要使用一些第三方厂商提供的模块和/或进行硬件控制，可能会遇到 Linux 上无法正常使用的情况。   兼容性：★★★★☆   Mathematica   regymm (17 级):   专利软件 Mathematica 是有 Linux 版的，并且科大正版软件有所提供。尽管界面相比 Windows 版稍丑（个人看法），未遇到任何功能问题。   兼容性：★★★★★   Origin   regymm (17 级):   专利软件 Origin 是交互式科学绘图和数据分析工具，没有 Linux 版。在 Origin 2017 / Origin 最新版 / wine 32 位 Win10 模式 / wine 64 位 Win10 模式的组合中，大部分可以正常安装运行。   然而，需要注意的是，尽管大部分功能能正常运行，一些个别功能可能会 fail silently，如果遇到某一操作无法执行，除了自己操作错误外，也可能是其本身的问题。这可能耽误很多时间。   VirtualBox 可以正常运行。   可以考虑 QtiPlot、gnuplot、甚至 ROOT 完成绘图。   兼容性：★★☆☆☆   ROOT   regymm (17 级):   CERN 的 ROOT 同样有原生 Linux 支持。课程提供的程序文件中只可能有个别地方，如文件路径格式等，需要修改。   兼容性：★★★★★  ","categories": ["Experience"],
"tags": ["Courses"],
"url": "/planet/2018/08/USTC-Linux-user-guide/",
"teaser": null
},{
"title": "一根网线安装 Linux——PXE 介绍",
"excerpt":"预启动执行环境（Preboot eXecution Environment，PXE，也被称为预执行环境)提供了一种使用网络接口（Network Interface）启动计算机的机制。这种机制让计算机的启动可以不依赖本地数据存储设备（如硬盘）或本地已安装的操作系统。——摘自 Archwiki   PXE 原理介绍   PXE 协议是由 Intel 设计的，它可以使计算机通过网络启动。协议分为 client 和 server 两端，PXE client 在网卡的 ROM 中，当计算机引导时，BIOS 把 PXE client 调入内存执行，并显示出命令菜单，经用户选择后，PXE client 将放置在远端的操作系统通过网络下载到本地运行。   PXE 可以通过网络直接启动一些 Live Linux，或者调用 Linux Installer，GParted 等工具，较使用 U 盘启动更加方便快捷，有多种工具，Live 系统等可供用户挑选，在紧急维护情况下也有很大的作用。   例子：图书馆查询机   图书馆内的图书查询机就是用 PXE 启动的，启动镜像叫 liims，里面包含了一个以图书馆透明计算系统为主页的浏览器（主页包括了图书查询，邮箱登录，学习空间预约等功能），还有瀚海星云的 telnet 客户端和彩虹猫，用户也可以自己启动一个虚拟机，用 PXE 启动进入查询系统。   PXE 怎么用   使用条件   电脑最好内置有 PXE Boot Agent，并且已经激活；没有现成支持的话，有几种解决办法。 所在的网段最好有能提供正确的 PXE 信息的 DHCP 服务器，以及可以通过 TFTP 数据包的网关；没有的话可以请管理员加以设置，或自己动手把网络启动系统加入 GRUB/LILO 菜单。 如果所在实验室用地址转换/伪装技术建立了自己的子网，则需要配置。   科大校园网   连接校园网（一般需要插网线）调节 BIOS 设置进入 PXE 环境即可直接进入 USTC PXE   非科大校园网   首先需要进入 PXE 环境，这里以在 virtualbox 虚拟机使用 iPXE 为例， virtualbox 自带的 PXE 功能比较简单，所以使用 iPXE 替代之。从 iPXE 官网下载 iPXE 的 ISO，然后让虚拟机从这个 ISO 启动。 按 Ctrl + B 进入 iPXE 的命令行模式。然后输入以下命令：   dhcp //如果已经获取到了地址则请忽略 set 210:string http://202.38.93.94/boot/tftp/ chain ${210:string}pxelinux.0   注：目前 PXE 处于更新状态，新版 PXE 还有一些问题，使用上述命令出现问题的同学请使用旧版 PXE，使用 Windows PE 的同学也请先使用旧版 PXE，命令如下   dhcp //如果已经获取到了地址则请忽略 set 210:string http://202.38.93.94/boot/tftp/ chain ${210:string}lpxelinux.0   接下来你就能见到 USTC PXE 的界面了 🙂   注意到我们使用的 iPXE 的命令里使用的是 http 协议，这也为一些在 NAT 后面而无法使用 tftp 的用户提供使用 USTC PXE 的方法。   另外 iPXE 也可以刻录到 usb 上，这样主机如果想用 PXE 就可以用 usb 启动 iPXE （如果主机自带的 PXE 比较弱），然后使用上面的命令进入 USTC PXE 了。 iPXE 的 usb 镜像可以从 http://boot.ipxe.org/ipxe.usb 下载，然后用 dd if=ipxe.usb of=/dev/sdX 来刻录。   下载 iso 作为虚拟光驱挂载在虚拟机上，从 CD 启动，   PXE 有什么             PXE 的启动菜单        Linux 安装工具      Ubuntu   Debian   Kali   OpenSUSE   Centos   Arch Linux   Fedora   Live System      Ubuntu   Debian   Deepin   Archlinux   Manjaro   Windows PE      实用工具           Hardware Detection Tools (hdt)             hdt 中的查看硬盘信息部分          PXE Knife   GParted Live   Clonezilla live   图书馆查询系统      应用场景分析   体验新系统   PXE 的 Live System 菜单中包含了 Debian，Deepin，Arch Linux，Manjaro 等 Live 系统，选择一个 Live 系统启动，就可以不用安装就能体验 Linux 的使用。   安装新系统   PXE 中 Linux Installer 菜单下有 Debian，Kali 等多种 Linux 发行版的安装器，当然也可以通过 Live System 进行安装，PXE 使用的 Live System 与写了 Live iso 的 U 盘功能是一样的。   Linux 密码恢复，磁盘检查等   Linux 用户通常需要准备一个 Live USB，在忘记密码，磁盘检查等需要对根分区进行操作等情况下能够进入 Live，再 Live 上面对本机系统进行各种操作。PXE 其实就在不需要 U 盘的前提下实现了这个功能，而且由于 PXE 上面有多种镜像，用户就有了多种选择。   进入 Live 之后，如果进入图形界面，启动一个终端模拟器（即 terminal）即可，或者进入 tty。进行密码恢复等操作一般需要 root 权限。   密码恢复：首先挂载本机系统的根分区（mount 设备名(如 /dev/sda1)**挂载点），然后 chroot 进入挂载点，再用 passwd 用户名（root 可以不加参数）命令修改密码。   磁盘检查，分区修改等：fsck 和 fdisk 命令均需要进行操作的分区未被挂载。如果磁盘检查，fsck 设备名 即可。分区修改，如扩容等操作先 fdisk 设备名，进入 fdisk 程序内部，再执行 fdisk 命令即可。fdisk 命令可以使用 m 查看。fdisk 命令较为简单，如 p 为打印分区表，d 为删除分区，n 为新建一个分区，w 为写入分区表等，执行命令后 fdisk 会对接下来进行的操作给出提示。分区修改也可以使用 gparted live，图形界面可能更友好一些，下文会进行介绍。   硬盘分区扩容   GParted 的界面较为直观，选择设备后界面就会出现这个设备的分区情况，点击一块分区可以进行删除，移动，改变大小或复制，如果有空闲空间也可以点击 New 新建分区。移动分区或向前扩容时要注意，改变分区起始位置可能会使文件系统损坏。每次进行一次操作后最下方会增加一个条目，确认修改时要点击 Apply，此时 GParted 会根据 operation list 进行操作并给出日志，在完成之后会更新分区表。    使用 GParted 改变分区大小和位置   Windows 下的启动修复等   PXE 上还有 Windows PE 的镜像，因此也可以通过 PE 来对本机的 Windows 进行启动修复，文件移动复制，修改注册表等操作。   总结   相比使用 U 盘安装时还需要下载镜像，制作启动盘等繁琐的操作，使用 PXE 只需要插上网线，并且调节 BIOS 设置即可进入 live linux，而且还有 GParted 等一系列工具可用，在服务器等出现问题时应急处理也很有帮助，还是很方便的。同学们也可以事先安装 ipxe，以便在校外或直接连接时连接不上等特殊情况时也可以使用 PXE。   PXE 目前由李文睿同学维护，如果需要反馈 BUG，可以发邮件到 lug AT ustc.edu.cn 或 sirius AT ustclug.org。  ","categories": ["Technology"],
"tags": ["PXE"],
"url": "/planet/2018/10/PXE-intro/",
"teaser": null
},{
"title": "一个 NFS 的简介",
"excerpt":"NFS（网络文件系统，Network File System）是一个分布式的文件系统，可以用于在局域网中共享文件。它通常运用在 Unix 与类 Unix 操作系统中。对于 Linux 服务器之间的文件共享来说，NFS 相比于其他的方案（如 Samba）更加方便，性能也更好。对于应用程序来说，NFS 也是透明的。   简单配置 NFS   我们以两台 Debian 10 的机器为例1简单配置 NFS 服务端。其余的发行版可以查询各自的手册以获取详细信息。   在绝大多数情况下，NFS 支持已经安装在 Linux 内核中。我们可以使用以下命令安装内核态的 NFS 服务器实现：   sudo apt install nfs-kernel-server   （如果有兼容 NFSv2 和 NFSv3 的需求，需要安装 portmap）   出于安全性的考虑2，我们假设 NFS 共享的根目录是 /srv/nfs4。 如果需要共享的目录在其他位置，可以使用 bind mount 的方式挂载上去。（当然，对于简单的配置来说，不这样做问题也不大）   mount --bind 实际放置文件的目录 /srv/nfs/your_folder_name   编辑 /etc/exports，设置共享文件夹的位置、允许访问的 IP、权限等，以下是一个示例。   /srv/nfs4/Downloads 192.168.124.0/24(rw,sync)   这里设置了 /srv/nfs4/Downloads 可以被 192.168.124.0/24 的子网访问，如果希望所有人都可以访问，可以用星号 * 代替这里的网段。参数为可读写 (rw)，同步 (sync，即更改操作完成之后才会返回用户的请求)。更多的参数细节可以至 man exports 查看。   接下来，重启 NFS 服务，服务器端就配置好了。   sudo systemctl restart nfs-kernel-server   接下来配置一下客户端。安装 nfs-common，之后就可以愉快地挂载了。   sudo mount -t nfs4 192.168.124.18:/srv/nfs4/Downloads /mnt/nfs_mount/   此处将服务器 192.168.124.18 上的 NFS 共享挂载到了 /mnt/nfs_mount/ 文件夹下。可以看到服务器的文件显示在了客户端中，可以正常打开。   可以使用 showmount -e 服务器名称或 IP 来查看某台服务器上可挂载的 NFS 共享。   如果发现写入没有权限的话，这是由于客户端用户访问时的权限在服务器端会变为匿名用户 (nobody. uid, gid = 65534) 以保障安全性。可以调整文件夹的权限、调整「匿名用户」为指定的 UID 和 GID，或者设置导出参数 no_root_squash，使客户端用户权限可以在服务端保持（很危险，因为在挂载点中，客户端的 root 和服务端的 root 是一样的）。   Windows 和 macOS 也支持（当客户端）吗？   当然啦。（虽然可能有点麻烦）   Windows   下面以一台在同一局域网的 Windows 10 机器为例。在「启用或关闭 Windows 功能」中添加 NFS 客户端支持。             Windows 功能 =&gt; NFS 服务 =&gt; NFS 客户端        此客户端会在系统中安装 mount 等工具。             Windows 版本 mount 的使用帮助        如果我们需要挂载上面那个服务器的共享，可以输入以下命令：   mount \\\\服务器名称\\共享路径 设备名（盘符）             大概是成功挂载了        只不过……好像哪里不太对劲？             中文的文件名变成了乱码        Windows 中官方的 NFS 支持提供的 mount 不支持 UTF-8 编码，导致了乱码的产生。如果需要 Windows 支持，考虑以下一些方法：      使用 fuse-convmvfs 修改服务端文件的编码，详见此 Super User 上的回答。   找一个别的 Windows 的 NFS 客户端。   如果正在使用新版的 Windows 10，在区域设置中启用 Beta 版本的 UTF-8 支持。注意这可能会导致一部分软件出现乱码。   如果要取消挂载，使用 umount 即可。   macOS   相比于 Windows 的挂载体验来说，macOS 由于是 Unix 系的操作系统，挂载 NFS 就方便一些。直接把 Linux 的命令复制过来就……   $ sudo mount -t nfs4 192.168.124.18:/srv/nfs4/Downloads nfs_mount Password: mount: exec /Library/Filesystems/nfs4.fs/Contents/Resources/mount_nfs4 for /Users/tao/nfs_mount: No such file or directory   诶？稍微调整一下……   $ sudo mount -t nfs 192.168.124.18:/srv/nfs4/Downloads nfs_mount mount_nfs: can't mount /srv/nfs4/Downloads from 192.168.124.18 onto /Users/tao/nfs_mount: Operation not permitted   这是因为 NFS 服务器默认配置要求来源端口小于 1024 以「保障安全」（因为这样的端口只有 root 用户可以开）。当然 macOS 中 mount_nfs 的文档里面也这样吐槽：      resvport: Use a reserved socket port number.     This is useful for mounting servers that require clients to use a reserved port number on the mistaken belief that this makes NFS more secure. (For the rare case where the client has a trusted root account but untrustworthy users and the network cables are in secure areas this does help, but for normal desktop clients this does not apply.)     BSD System Manager’s Manual, mount_nfs    有两个解决方案：      服务器端参数加入 insecure。这样的话 Finder 也可以轻松挂载。   命令行加入 -o resvport 参数。   挂载之后，在 Finder 侧边栏也会显示。编码显示非常正常。MS 出来挨打   在 mirrors 中的实践   在新的存储等设备买来配置好之前，我们的 mirrors 服务由服务器 mirrors2 提供。随着各种镜像逐年增大，我们的 ZFS pool 的空间越来越小，尤其是在同步的时候。这个月已经出现了多次空间吃光的情况，出现时会导致导致同步任务堆积无法完成，系统负载达到 100 以上，I/O 性能急剧下降。   我们对日志分析后发现，bioc 仓库（R 语言的分子生物学软件仓库）访问量很小，但是空间占用巨大（约 1.4 TB）。由于我们前段时间多出一台闲置的服务器（命名为 mirrors3），目前我们将 bioc 放置在了 mirrors3 上，同步任务也由 mirrors3 完成，NFS 到 mirrors2 上继续正常提供服务。这一项工作主要由付佳伟同学完成。多出来的磁盘空间应该可以维持比较长一段时间的稳定工作。   在一部分细节方面，服务器还没有配置完成，在 status 页面的显示也比较奇怪，这是因为此页面读取的是 mirrors2 的数据。我们未来会进行改进，如果你在使用 bioc 仓库时遇到问题，也欢迎通过发送邮件到 lug@ustc.edu.cn 或者在 https://github.com/ustclug/discussions 中提交 issue 进行反馈。     另外，planet 已经有将近一年的时间处于死寂的状态。我写的其实不太好，此次更新主要是希望能够引起大家的注意，收到更多的稿件。另外有一些（未完成的）稿件在我们的草稿箱里，我会去给对应的作者催稿的（   由于 WordPress 的用户权限配置问题，你在注册账号后可能找不到投稿的地方。直接发送邮件到 planet@ustclug.org 跟我们说吧（当然 lug@ustc.edu.cn 也行，我也会处理的）！也欢迎提供你的博客的 RSS 地址，我们可以选择文章转载到这里。                  https://wiki.debian.org/NFSServerSetup &#8617;                  https://wiki.archlinux.org/index.php/NFS#Server &#8617;           ","categories": ["Technology"],
"tags": ["NFS"],
"url": "/planet/2019/08/NFS-intro/",
"teaser": null
},{
"title": "萌新入门手册：如何使用 nc/ncat？",
"excerpt":"本文用于介绍信息安全大赛中不少题目需要使用的 nc/ncat 工具。   nc 是什么？   nc/ncat 是 netcat 的缩写，它可以读写 TCP 与 UDP 端口——或许你看不懂这句话，这没有关系。简单地说，它可以在字符界面下，让你和服务器沟通交流。   一般来说，有很多题目都会要求你使用 nc 连接到他们的服务器，并且进行交互，获得 flag。   如何安装 nc？   nc 命令在 macOS 中是自带的，在 Linux 中一般自带，或是可以使用相应的软件包管理器安装（如在 Debian/Ubuntu 中这个包名叫 netcat）。   当然，如果你在看这篇手册，你的操作系统很有可能是 Windows。它不自带 nc，尽管可以用 WSL 或者虚拟机的方式解决，但是如果你觉得这样太麻烦了，也有另外一些方法。   使用静态链接的 ncat 程序   前往 https://github.com/andrew-d/static-binaries/blob/master/binaries/windows/x86/ncat.exe 下载此程序。我们也在这里提供了一份。下载下来即可。   ncat.zip 下载   注：nc/ncat 事实上是两个不同的程序，但在我们接下来的使用上，基本没有区别。ncat 是由 Nmap 项目开发的“重置版的 Netcat”。   我的杀毒软件报毒！   这是 virustotal 的检测结果：https://www.virustotal.com/gui/file/d0baada87420dd7c2e63d0dd3248749c06b53806d3021863c4fa659608053a8a/detection   如果你不相信此来源，也可以下载 nmap（一个网络探测、扫描工具），它会附带一个 ncat。   如何使用 nc?   Windows   直接双击，你会看到一个窗口一扫而过——这是正常现象。你需要使用「命令提示符」或者「PowerShell」来访问这个程序。   Windows 10 中，你可以使用资源管理器 -&gt; 文件来在你存放 nc 的目录中打开命令提示符或 PowerShell。             在 Windows 资源管理器中打开命令提示符或 PowerShell        或者，你也可以在开始菜单 -&gt; Windows 系统中打开命令提示符，或者在开始菜单 -&gt; Windows PowerShell 中打开 PowerShell，然后使用 cd 命令转移到对应的目录：输入 cd 文件夹名 可以让你转移到对应的文件夹，输入 cd .. 可以让你转移到上面一层目录。使用 dir 命令，可以显示当前目录下所有文件。同时，使用 Tab 键可以帮助你补全名称。   当跳转到你存放 nc 的文件夹后：      如果你使用的是 PowerShell（蓝色背景），输入 ./ncat（根据 nc 对应的名称不同而不同）。   如果你使用的是命令提示符（黑色背景），输入 ncat（根据 nc 对应的名称不同而不同）。   当显示以下内容时，说明你成功运行了它。             成功运行 ncat        Linux &amp; macOS   打开「终端」，输入 nc。   $ nc usage: nc [-46AacCDdEFhklMnOortUuvz] [-K tc] [-b boundif] [-i interval] [-p source_port] [--apple-delegate-pid pid] [--apple-delegate-uuid uuid] \t  [-s source_ip_address] [-w timeout] [-X proxy_version] \t  [-x proxy_address[:port]] [hostname] [port[s]]   出现了类似上面的输出，说明运行成功了。   示例   在我们使用浏览器上网的时候，我们和服务器使用了 HTTP 协议进行连接。关于 HTTP 协议的更多细节，你需要自己上网搜索。一般来说，默认是 80 端口。   我们可以使用 nc，尝试一次与网页服务器的连接，以百度为例。   输入 nc www.baidu.com 80（或者 ncat www.baidu.com 80，或者 ./ncat www.baidu.com 80，请根据以上的介绍自行修改），程序会等待你的输入。   输入 GET / HTTP/1.0。这表示，我们使用 HTTP/1.0 这个协议版本，用 GET 的方式请求根 /。输入两下回车，代表我们的 HTTP 请求完成。如果你的网络畅通，百度的网页服务器会立刻返回大量信息，可以自行搜索，了解它们的含义。现在，你成功（在不使用浏览器的情况下）完成了一次与百度网站的连接！             Success!        如果你成功了，那么你可以开始愉快地完成我们的题目了！   除了使用 nc 直接与服务器交互之外，也可以编程与服务器交互。例如：      在信息安全类的竞赛中一个常用的工具是 Python 的 pwntools，具体使用方法可以自行搜索了解。   nc 也可以使用 -e 参数设定交互脚本，可参考科大信息安全大赛 2018 年「猫咪克星」题目的题解（部分 nc 版本不支持）。   注意事项      以下内容目前对于比赛中需要 token 的题目不适用，需使用编程方法与题目交互。    由于 tty 默认每行的长度最长为 4096，在粘贴过长的输入时内容可能会被截断。遇到这种情况时，可以使用文件重定向解决：将需要输入的内容放置在文件中，然后 cat 你的文件 - | nc 服务器 端口（Windows cmd.exe 中 type 你的文件 CON | ncat 服务器 端口）即可。  ","categories": ["Tech Tutorial"],
"tags": ["hackergame","netcat"],
"url": "/planet/2019/09/how-to-use-nc/",
"teaser": null
},{
"title": "【译稿】树莓派 4 评测与基准测试：与树莓派 3B+ 相比的改进",
"excerpt":"原文地址：https://ibugone.com/blog/2019/09/raspberry-pi-4-review-benchmark/，作者为 @iBug 同学。以下为翻译部分。     前段时间，我终于拿到了自己心念的树莓派 4（4 GB 的型号），之后我就忍不住试了试，看看它在报道中提到的改进与提升究竟是什么样子的。   我自己的树莓派 3B+ 有个外壳，所以这次购买树莓派 4 的同时，我也订了个铝制的外壳，以减轻发热给树莓派带来的压力。与之前的外壳不同的是，它还配备了两个小风扇，能够大幅度提高散热效率。   就让我们来看一看吧。   概览                                                                                                                              新的树莓派 4 装在了类似 3B+ 的包装中，包装正面是树莓派 4 的红底白线的结构图，与本体大小相同。与树莓派 3B 不同的是，3B+ 和 4 都没有用防静电袋包好。当然，这不是什么问题。   它的结构与前几代类似，不过有一些明显的变化。比如说，你肯定会最先注意到那几个 USB 3.0 接口——因为它们是蓝色的。在你观察那几个接口的同时，你很可能也注意到了，有可能是因为千兆网口的升级的缘故，以太网接口换了位置。                                                                                                                              有一些小接口，即供电口和视频输出，也有一些变化。树莓派 4 现在需要一根 Type-C 线供电，并且需求提升到了 5V / 3A。目前尚且不知树莓派 4 是否支持类似于高通快充或者 USB PD 这样的快充技术，但是从用户反馈来看，是没有的。旧款上标准大小的 HDMI 也被 micro-HDMI 口替换——而且变成了两个：它们都支持 4K 60fps 输出，而且可以同时输出！尽管我打算把树莓派当无头（无显示的）服务器来用，用树莓派配桌面环境的人可能会喜欢这个特性。   内存条也从树莓派的背面移到了正面，现在在 SoC 旁边。SoC 长得和 3B+ 的一样，但是内部却完全不同。Wi-Fi 屏蔽罩和天线没有变化，另外在千兆网口的前面又多出了一个额外的芯片。   参数   新的树莓派 4 带来了大量激动人心的更新，包括了：      博通 BCM2711 SoC, 四核 1.5 GHz Cortex-A72 CPU   有 1 GB, 2GB 和 4 GB RAM 四种版本（4 GB 就是我手中的这款）   博通 VideoCore VI GPU   真正的千兆以太网口   蓝牙 5.0   原生 USB 3.0 支持，包含了 2 个 Type-A 的接口   双 HDMI 口，支持同时 4K 60fps 输出   更快的 microSD 卡插槽   在之后的基准测试中，你可以看到这些更新参数意味着什么。以下是一张对比表：                          树莓派 3B       树莓派 3B+       树莓派 4                       CPU       四核 1.20 GHz Cortex-A53       四核 1.40 GHz Cortex-A53       四核 1.50 GHz Cortex-A72                 内存       1 GB DDR2       1 GB DDR2       1 / 2 / 4 GB DDR4                 GPU       VideoCore IV       VideoCore IV       VideoCore VI                 以太网       100 Mbps       300 Mbps 有效       1 Gbps                 Wi-Fi       2.4 GHz       2.4 GHz / 5 GHz       2.4 GHz / 5 GHz                 蓝牙       4.0       4.2       5.0                 USB       4 个 USB 2.0       4 个 USB 2.0       2 个 USB 2.0 和 2 个 USB 3.0                 官方价格       35 美元       35 美元       35 / 45 / 55 美元 （根据内存选择不同而不同）           在我买到 3B+ 之后，我就把 3B 卖（给了译者），所以那个树莓派 3B 就没法参与接下来的评测了。（译者注：那个 3B 现在被我放在家里吃灰……对不起……）   我的设置                                                  正如你看到的那样，两个树莓派都是无头的服务器，只连接了电源和以太网。你可能在疑惑，为什么它们看起来这么诡异，这是因为我所在的实验室有很多标称 5V / 6A 的电源供应线，所以我就拿了一个来通过 GPIO 给这两个树莓派供电。这两个树莓派峰值标称 5V / 2.5A 和 5V / 3A，所以一根供电线就够了。       警告     除非你有稳定的供电，请不要使用 GPIO 给树莓派供电。手机充电器不能作为电源供应，你永远都不应该用手机充电器通过 GPIO 供电给树莓派。     基准测试   两个树莓派被分配了静态 IP，所有的操作都通过 SSH 完成。操作系统是最新版的 Raspbian Buster Lite。   SysBench CPU 测试   SysBench 是一个可以快速获取系统性能的测试套件。这里我使用 SysBench 来测试 CPU 与内存。   sysbench --test=cpu run sysbench --test=cpu --num-threads=4 run sysbench --test=cpu --num-threads=8 run             SysBench CPU 性能，单位为秒，越低越好        如表中显示的那样，在 CPU 性能方面，树莓派 4 相比 3B+ 而言有巨大提升，在所有情况中都少花了 19.3% 的时间。   SysBench 内存测试   内存测试有点复杂，并且我发现了一些意料之外的结果。   sysbench --test=memory --memory-block-size=1K --memory-total-size=2G --memory-oper=read run sysbench --test=memory --memory-block-size=1K --memory-total-size=2G --memory-oper=write run sysbench --test=memory --memory-block-size=1K --memory-total-size=2G --memory-oper=read --num-threads=4 run sysbench --test=memory --memory-block-size=1K --memory-total-size=2G --memory-oper=write --num-threads=4 run sysbench --test=memory --memory-block-size=1M --memory-total-size=2G --memory-oper=write --num-threads=4 run             SysBench 内存性能，单位为每秒指令数，越高越好        新的 DDR4 内存竟然比老古董 DDR2 内存慢，而且在多线程情况下差距进一步拉大了！唯一一点合理的是，当单个块大小到 1 MiB 的时候，树莓派 4 要小幅好于 3B+。   一件有意思的事情是，我没有包含“1 MiB Read MT”（1 MiB 单块，读取，多线程）这一列。SysBench 在两块树莓派上都给我返回了超过 200 GB/s 的结果，有时候结果还高达 500 GB/s。这显然太滑稽了，所以我直接忽略了那个结果。   FIO microSD 卡速度测试   此测试结果依赖于 microSD 卡本身，所以我拿出了我拥有的最快的 SD 卡：Lexar 667x 128 GB microSD 卡，外观类似下面这张图：        我使用 fio 作为磁盘（microSD 卡）I/O 性能测试工具。因为我更熟悉 Crystal DiskMark，我调整了 fio 的参数，以与其一致。   fio --loops=5 --size=500m --filename=fiotest.tmp --stonewall --ioengine=libaio --direct=1 \\   --name=SeqRead --bs=1m --rw=read \\   --name=SeqWrite --bs=1m --rw=write \\   --name=512Kread --bs=512k --rw=randread \\   --name=512Kwrite --bs=512k --rw=randwrite \\   --name=4KQD32read --bs=4k --iodepth=32 --rw=randread \\   --name=4KQD32write --bs=4k --iodepth=32 --rw=randwrite \\   --name=4Kread --bs=4k --rw=randread \\   --name=4Kwrite --bs=4k --rw=randwrite             MicroSD 性能，单位为 MB/s，越高越好        从结果来看，树莓派 4 的性能有巨大提升，在许多测试中都比 3B+ 快出 50%。这可能是树莓派 4 最有用的更新，因为性能的瓶颈几乎都在缓慢的磁盘 I/O 上。   p7zip 基准测试   7-zip 有个自带的基准测试工具，当然 p7zip（7-zip 的 POSIX 移植）也有。我使用这个工具来测试树莓派的压缩与解压性能。   7zr b -mmt1 7zr b             p7zip 基准测试，越高越好        如此帮助文档所言，压缩更依赖于内存的吞吐量与延迟，这可能是两块树莓派间在压缩测试中差距增大的原因。总之，树莓派 4 在 p7zip 测试中有 1/3 的性能提升。   OpenSSL 速度测试   OpenSSL 是目前最流行的密码学软件库，它也包含了一个内置的速度测试。结果是在所有块大小中最快的那个——在 4 个测试中大小都是 16,384 字节。   openssl speed -evp aes-256-cbc openssl speed -evp aes-256-gcm openssl speed -evp sha1 openssl speed -evp sha256             OpenSSL 基准测试，单位为 MB/s，越高越好        网络速度测试   树莓派 4 将 300 Mbps 以太网升级到了真正的千兆网口，如果你打算用它来当离线下载器或者 NAS 的话，这是极好的。这里我跑了两个测试，看看网络究竟如何。   CURL 文件下载测试   这项测试非常简单：使用 cURL 从局域网机器下载文件，查看速度。             cURL 下载速度，单位为 MB/s，越高越好        结果不如预想那么好：树莓派 4 没能跑出千兆的速度，而我旁边的 x86 Linux 盒子就做到了。   NGINX 性能测试   另一个常见的场景是：使用 NGINX 提供网页服务（对不起，这里没有 Apache 的位置）。我在两块树莓派上都安装了 NGINX，设置了 access_log off，并在我的 x86 盒子上使用 Siege 4.0.4 对树莓派服务器进行基准测试。   siege -c 10 -r 1000 [host] siege -c 25 -r 400 [host]             NGINX 性能，单位为请求数每秒，越高越好        在 CPU 性能与网络速度的双重提升下，新的树莓派 4 速度接近 3B+ 的两倍。如果你想用树莓派搭个网站的话，这是个好消息。   应用程序性能   我选择了两个我最熟悉的编程语言环境：Python 和 Ruby（我对 Node 不熟）来进行测试。   Python 测试使用了此 Stack Overflow 回答中的那个蠢极了的脚本，运行时间作为结果。   def test():     \"\"\"Stupid test function\"\"\"     lst = []     for i in range(100):         lst.append(i)  if __name__ == '__main__':     import timeit     print(timeit.timeit(\"test()\", setup=\"from __main__ import test\"))   Ruby 测试就简单很多：使用 Jekyll 构建我的站点，查看消耗的时间。             应用程序性能，单位为秒，越低越好        Ruby 测试比 Python 测试更加均衡，因为它主要测试的是纯计算性能，结果 Ruby 测试中性能差距就要小一些。   不过等等，这不代表树莓派 4 对大型的 Python 或者 Ruby 项目来说是个好的选择。相同的测试在我的 x86 盒子（i7-8850H, 32 GB DDR4, NVMe SSD）上快了 10 倍，其仅使用 5 秒运行 Python 脚本，4 秒构建我的 Jekyll 站点。毕竟，你不能期望一个只卖 55 美元的板子能够有毁天灭地的性能，不是吗？   USB I/O 性能   我拿出了我的 USB 3.1 SSD（由 LiteOn L9M 512 GB 和一个包含了 VL716 SATA 转 USB 芯片的硬盘盒组装而成）。但是，我一把 SSD 插上树莓派，它就没电了。之后我发现这是因为供电不足（GPIO 针脚无法提供足够的电力），所以一天之后，我从 MicroUSB / Type-C 接口重新供电。这一次，3B+ 很顺利，但是树莓派 4 在测试时再一次因为电力问题出错。最后，我只能同时从 Type-C 和 GPIO 给树莓派供电，以便在不断电的情况下完成 SSD 测试。   这次的供电问题真的很严重，但先不去管它。让我们看看结果。   fio --loops=5 --size=1g --filename=fiotest.tmp --stonewall --ioengine=libaio \\   --direct=1 --name=SeqRead --bs=1m --rw=read --name=SeqWrite --bs=1m --rw=write             USB 速度，单位为 MB/s，越高越好        结果很棒！升级后的 USB 3.0 接口，即使没有跑到最高速，也比前代树莓派高出很多。但在享受高速 USB 之前，再让我强调一次：请特别关注你的 USB 外设，特别是那些有点儿耗电的设备，像机械硬盘和 SSD。如果电力得以保证，利用那两个高速 USB 接口对于 NAS 或者其他存储扩展来说好处多多。   总结   在体验过 3B 到 3B+ 的小小提升后，新的树莓派 4 对于大多数树莓派爱好者来说，都是一场盛宴。价格不变，即使你已经有个 3B+，树莓派 4 也可以说是必买的。尽管在供电和散热上有缺点，如果你不插太多外设，不在树莓派上放太多重型任务的话，也没什么关系。  ","categories": ["Technology","Translation"],
"tags": ["树莓派"],
"url": "/planet/2019/09/raspberry-4/",
"teaser": null
},{
"title": "使用 Beancount 进行记账并自动记录一卡通消费",
"excerpt":"本文首发于 https://charlesliu7.github.io/blackboard/2019/07/24/beancount/   偶尔看到了复式记账这个概念，对精细记账的我而言很受用，选择 Beancount 这样的开源工具的原因莫过于账本数据完全由自己掌握，而不是被各大 APP 所保管。本文从一次个人实践的角度来说明一下复式记账的使用。   本篇文章是一个从零开始的个人实践记录，涵盖 文件组织 -&gt; 基本账本书写 -&gt; 爬取一卡通数据并自动记录，供同样使用 Beancount 的同学做参考，但此实践并不一定完全合乎其他人的使用习惯，如果有其它记录策略也是可以的。本文内容基于读者对复式记账和 Beancount 语法有一定了解的情况下撰写的，关于复式记账的概念和一些诸多基本功能介绍，可以参考阅读以下文章：      文本记账综述、复式记账开源工具比较   Beancount 复式记账（一）：为什么   开始！   安装使用   Beancount 是一个 Python 实现的开源工具，在本地即可运行，首先从 PyPI 获取：   pip install beancount fava   其中 beancount 是核心包，包含核心的命令行工具；fava 是网页可视化工具。 这里有一个fava 示例账本 ，对应的 Beancount 源代码可以在 Bitbucket 上下载。 本文的示例账本以及可视化可以在该仓库查看。   克隆该仓库，在命令行中使用 fava main.beancount。   $ fava main.beancount Running Fava on http://localhost:5000   打开浏览器即可看到可视化账本。   文件结构   Beancount 支持 include 语法来拓展账簿，个人采用按时间划分文件，辅之特殊事件（比如旅游）单独记录的方法，目录结构如下：   . ├── 2018 │   └── ... ├── 2019 │   └── 01.beancount │   └── 02.beancount │   └── 03.beancount │   └── 04.beancount ; 注释用分号 │   └── xx.event.beancount ; 单独针对某一特别事件的账本，比如旅游 │   └── 05.beancount │   └── 06.beancount │   └── 07.beancount ├── accounts.beancount ; 记录初始账户信息 ├── main.beancount ; 主文件   账本书写   账户信息设置   首先要定义账户，即文件 accounts.beancount，Beancount 系统中预定义了五个分类：           Assets 资产：本人按照账户类型:国家:金融机构名字:具体账户的策略划分，时间是开户时间，比如：       2017-01-01 open Assets:CN:Bank:BoC:C1234 CNY ; 学校银行卡 2017-01-01 open Assets:CN:Card:USTC CNY ; 一卡通 2017-01-01 open Assets:CN:Web:AliPay CNY ; 支付宝 2017-01-01 open Assets:CN:Web:WeChatPay CNY ; 微信支付           有一类针对 AA 付款或者个人向自己借款的账户，需要专门记录。       2017-01-01 open Assets:Receivables:X ; 对 X 的应收款项                Liabilities 负债：本人主要是信用卡和向他人借款的账户，比如：       2017-01-01 open Liabilities:Payable:X ; 对 X 的债务 2017-01-01 open Liabilities:CreditCard:CN:BoC:C1111 CNY ; 信用卡 2017-01-01 open Liabilities:CreditCard:CN:Huabei CNY ; 花呗                Equity 权益（净资产）：目前只有一个用于平衡开户的时候账户资金的权益。       1990-01-01 open Equity:Opening-Balances                Expenses 支出：支出就非常的多样化，可以根据自己需求分门别类，比如：       2017-01-01 open Expenses:Clothing ; 包括上衣，裤子和装饰，袜子，围巾，帽子 2017-01-01 open Expenses:Shoes ; 鞋 2017-01-01 open Expenses:Food:Dinner 2017-01-01 open Expenses:Food:Lunch 2017-01-01 open Expenses:Food:Breakfast 2017-01-01 open Expenses:Food:Fruits 2017-01-01 open Expenses:Food:Nightingale ; 校门口夜宵 2017-01-01 open Expenses:Food:Drinks 2017-01-01 open Expenses:Food:Snack ; 杂食、零食           等等……            Income 收入：收入也可以根据自己的实际收入来源来建立账户，比如：       2017-01-01 open Income:Salary:XXX 2017-01-01 open Income:Salary:Others 2017-01-01 open Income:Others           主文件设置   然后设置主文件 main.beancount 内容，主文件任务是设置全局变量，然后去涵盖各个子账本：   option \"title\" \"取个霸气的名字吧\" ; 账簿名称 option \"operating_currency\" \"CNY\" ; 账簿主货币 option \"operating_currency\" \"USD\" ; 可以添加多个主货币  include \"accounts.beancount\" ; 包含账户信息  ; 每个月的账本 include \"2020/06.beancount\" include \"2020/07.beancount\"   账户初始余额设置   在开始记账前，要设置每个账户的余额信息，采用以下方法来给每个账户设置余额/借记账单:   2019-01-01 pad Assets:Bank:CN:BoC:C1111 Equity:Opening-Balances ; 从 Opening-Balances 中划取 XX 帐到银行卡中 2019-01-02 balance Assets:Bank:CN:BoC:C1111    +xxx.xx CNY ; 银行卡余额为 xxx.xx   该语句的含义是无论 Assets:Bank:CN:BoC:C1111 之前余额多少，在 2019 年 1 月 2 日开始之前都调整到 xxx.xx CNY，差额从 Equity:Opening-Balances 来。注意两行之间差一天的时间，balance 断言界定为当天开始；一般储蓄卡余额为正，信用卡余额为负。   记账           基本记账，记账语法为：       YYYY-mm-dd * [\"Payee\"] \"Narration\"   posting 1   posting 2   posting 3   ...           比如：       2019-01-01 * \"Walmart\" \"在超市买两件衣服和晚餐\"   Expenses:Clothing 20 USD   Expenses:Clothing 10 USD   Expenses:Food:Dinner 10 USD   Liabilities:CreditCard:US:Discover -40 USD                多货币转换使用 @@ 作为货币转换即可，货币 Beancount 会进行汇率计算，比如：       2019-01-01 * \"日本航空\" \"纽约-东京\"   Expenses:Transport:Airline 1000 USD @@ 110000 JPY   Liabilities:CreditCard:JP:Rakuten -110000 JPY                账户结息：账户的利息肯定难以每日都记录，本人采用 pad+balance 断言，每隔一段时间结算一下。            分期付款：这是个常见的购买方式，需要单独设置开一个 Liabilities Account，手续费记利息支出，每个月账单出现的时候转移一下。 Beancount 提供了一个插件 plugin \"beancount.plugins.forecast 专门用来处理分期、订阅情况，可以用于每月费用的自动生成。       核账   本人选择每个月还款日核实一下账本，在 Fava 左侧 Balance Sheet 或者 Holdings 里可以看到各个账户当前的状况，如果和实际的账户金额有出入的话就需要点进对应账户查看每笔交易的情况，看看是否漏记或者错记。   用 Importer 自动记录一卡通消费   综述   Importer 个人理解的作用是将整理好的账单文本转化为 Beancount 记录的形式，即格式化 (表格, JSON 等) 账单 -&gt; Importer -&gt; Beancount 记录，Importer 在其中起到一个消费记录格式转化作用。   Beancount 作者对 Importer 有详细的文档叙述，即 Importing External Data in Beancount。Beancount 官方也有基于机器学习的智能 importer beancount/smart_importer。   而本人的需求是：      利用校园一卡通门户系统获取每日的一卡通使用记录，并生成 CSV 记录。   基于 CSV 的账单生成 beancount 文件。   能够自行定制规则来实现对不同消费的分类。   将当日的一卡通消费生成为 CSV   爬取一卡通数据的代码为 crawler.py ，其作用为爬取当日的一卡通消费记录，并自定义规则区分早、午、晚餐，生成符合 Beancount 格式的 CSV。（代码可以直接运行）   import requests from datetime import datetime from bs4 import BeautifulSoup import json import codecs import csv  name = 'XXX'  # 姓名 stu_no = 'PBXXXXXXXX'  # 学号 pwd = 'user_pwd'  # 统一身份认证密码  if __name__ == '__main__':     # 利用统一身份认证登陆校园一卡通门户系统     casurl = 'https://passport.ustc.edu.cn/login?service=http%3A%2F%2Fecard.ustc.edu.cn%2Fcaslogin'     caspost = {'username': stu_no, 'password': pwd}  # 统一身份认证     msg = ''     s = requests.session()     try:         r = s.post(casurl, caspost)     except Exception as e:         msg = '{0} - INFO: USTC ecard CAS登陆失败 {1}'.format(datetime.now().strftime('%Y-%m-%d %H:%M:%S'), e)     remaining = 0     if not name in r.text:         msg = '{0} - INFO: USTC ecard CAS登陆失败 NOOOOOOOO!!!!!!!!'.format(datetime.now().strftime('%Y-%m-%d %H:%M:%S'))         print(msg)     else:         msg = '{0} - INFO: USTC ecard CAS登陆成功'.format(datetime.now().strftime('%Y-%m-%d %H:%M:%S'))         print(msg)         paylist = s.get('https://ecard.ustc.edu.cn/paylist')         b = BeautifulSoup(paylist.text, features=\"lxml\")         token = b.findAll('input')[-1].get_attribute_list('value')[0]         data = s.post(url='https://ecard.ustc.edu.cn/paylist/ajax_get_paylist', data={'date': '', 'page': ''}, headers={'origin': 'https://ecard.ustc.edu.cn', 'referer': 'https://ecard.ustc.edu.cn/paylist', 'sec-fetch-mode': 'cors', 'sec-fetch-site': 'same-origin', 'x-csrf-token': token, 'x-requested-with': 'XMLHttpRequest'})         b = BeautifulSoup(data.text, features=\"lxml\")         table = b.find('table')         th_index = []         for th in table.findAll('th'):             th_index.append(th.getText())         year, month, day = datetime.now().year, datetime.now().month, datetime.now().day         # 根据自己定义的规则判定早餐、午餐、晚餐         payinfo = {'breakfast': {'loc': '', 'type': '科大餐饮', 'value': 0.0, }, 'lunch': {'loc': '', 'type': '科大餐饮', 'value': 0.0, }, 'dinner': {'loc': '', 'type': '科大餐饮', 'value': 0.0, }, 'transferin': {'loc': '一卡通充值', 'type': '', 'value': 0.0, } }         flag = True         for tr in table.findAll('tr'):             line = []             for td in tr.findAll('td'):                 line.append(td.getText())             if line and flag:                 remaining = float(line[3])                 flag = False             if not line:                 pass             elif line[0] == '圈存机充值' and int(line[1]) == 0:                 payinfo['transferin']['value'] = float(line[4])             elif line[0] == '消费':                 linetime = datetime.strptime(line[5], '%Y-%m-%d %H:%M:%S')                 if linetime &gt; datetime(year, month, day, 6) and linetime &lt; datetime(year, month, day, 10): # 判定为早餐                     if line[6] in payinfo['breakfast']['loc']:                         pass                     else:                         payinfo['breakfast']['loc'] += (line[6] + ' ')                     payinfo['breakfast']['value'] += float(line[4])                 elif linetime &gt; datetime(year, month, day, 10) and linetime &lt; datetime(year, month, day, 14): # 判定为午餐                     if line[6] in payinfo['lunch']['loc']:                         pass                     else:                         payinfo['lunch']['loc'] += (line[6] + ' ')                     payinfo['lunch']['value'] += float(line[4])                 elif linetime &gt; datetime(year, month, day, 16) and linetime &lt; datetime(year, month, day, 20): # 判定为晚餐                     if line[6] in payinfo['dinner']['loc']:                         pass                     else:                         payinfo['dinner']['loc'] += (line[6] + ' ')                     payinfo['dinner']['value'] += float(line[4])                 elif linetime &lt; datetime(year, month, day, 0):                     break                 else:                     mtmp = '{0} - INFO: 未知消费 {1}'.format(datetime.now().strftime('%Y-%m-%d %H:%M:%S'), line)                     print(mtmp)             else:                 mtmp = '{0} - INFO: 异常消费 {1}'.format(datetime.now().strftime('%Y-%m-%d %H:%M:%S'), line)                 print(mtmp)         mtmp = '{0} - INFO: 卡内余额 {1}'.format(             datetime.now().strftime('%Y-%m-%d %H:%M:%S'), remaining)         print(mtmp)          # CSV Part         today = datetime.now().strftime('%Y-%m-%d')         headers = ['记账日期', '收款人', '交易摘要', '人民币金额', '类别']         csvinfo = []         if payinfo['transferin']['value'] &gt; 0:             csvinfo.append({headers[0]: today, headers[1]: payinfo['transferin']['type'], headers[2]: payinfo['transferin']                             ['loc'], headers[3]: \"%.2f\" % -payinfo['transferin']['value'], headers[4]: 'Transferin'})         if payinfo['breakfast']['value'] &gt; 0:             csvinfo.append({headers[0]: today, headers[1]: payinfo['breakfast']['type'], headers[2]: payinfo['breakfast']                             ['loc'], headers[3]: \"%.2f\" % payinfo['breakfast']['value'], headers[4]: 'Breakfast'})         if payinfo['lunch']['value'] &gt; 0:             csvinfo.append({headers[0]: today, headers[1]: payinfo['lunch']['type'], headers[2]: payinfo['lunch']['loc'], headers[3]: \"%.2f\" % payinfo['lunch']['value'], headers[4]: 'Lunch'})         if payinfo['dinner']['value'] &gt; 0:             csvinfo.append({headers[0]: today, headers[1]: payinfo['dinner']['type'], headers[2]: payinfo['dinner']                             ['loc'], headers[3]: \"%.2f\" % payinfo['dinner']['value'], headers[4]: 'Dinner'})         with open(today+'.csv', 'w') as f:             f_csv = csv.DictWriter(f, headers)             f_csv.writeheader()             f_csv.writerows(csvinfo)   代码执行完毕后会生成 20XX-XX-XX.csv，例如 2020-07-02.csv：                  记账日期       收款人       交易摘要       人民币金额       类别                       2020-07-02       科大餐饮       一卡通充值       -200.00       Transferin                 2020-07-02       科大餐饮       西区芳华园餐厅       5.00       Breakfast                 2020-07-02       科大餐饮       西区芳华园餐厅       10.00       Lunch                 2020-07-02       科大餐饮       西区芳华园餐厅       10.00       Dinner           准备 Importer Config   Beancount Importer Config 文件为 importers/ustc_card_importer.py。   #!/usr/bin/env python import os import sys import beancount.ingest.extract from beancount.ingest.importers import csv  beancount.ingest.extract.HEADER = ''  def dumb_USTCecard_categorizer(txn):     # At this time the txn has only one posting     try:         posting1 = txn.postings[0]     except IndexError:         return txn      # Guess the account(s) of the other posting(s)     if 'breakfast' in txn.narration.lower():         account = 'Expenses:Food:Breakfast'     elif 'lunch' in txn.narration.lower():         account = 'Expenses:Food:Lunch'     elif 'dinner' in txn.narration.lower():         account = 'Expenses:Food:Dinner'     elif 'transferin' in txn.narration.lower():         account = 'Assets:CN:Bank:BoC:C1234'     else:         return txn     # Make the other posting(s)     posting2 = posting1._replace(         account=account,         units=-posting1.units     )     # Insert / Append the posting into the transaction     if posting1.units &lt; posting2.units:         txn.postings.append(posting2)     else:         txn.postings.insert(0, posting2)     return txn  CONFIG = [     # USTC canteen     csv.Importer(         {             csv.Col.DATE: '记账日期',             csv.Col.PAYEE: '收款人',             csv.Col.NARRATION1: '交易摘要',             csv.Col.AMOUNT_DEBIT: '人民币金额',             csv.Col.NARRATION2: '类别'         },         account='Assets:CN:Card:USTC',         currency='CNY',         categorizer=dumb_USTCecard_categorizer,     ), ]   语法说明参见 Beancount 系列二： Importer 设置。   执行命令生成 beancount 账单。   bean-extract ustc_card_importer.py 2020-07-02.csv   得到账单：   **** /path/to/2020-07-02.csv  2020-07-02 * \"科大餐饮\" \"一卡通充值; Transferin\"     Assets:CN:Card:USTC        200.00 CNY     Assets:CN:Bank:BoC:C1234  -200.00 CNY  2020-07-02 * \"科大餐饮\" \"西区芳华园餐厅; Breakfast\"     Assets:CN:Card:USTC      -5.00 CNY     Expenses:Food:Breakfast   5.00 CNY  2020-07-02 * \"科大餐饮\" \"西区芳华园餐厅; Lunch\"     Assets:CN:Card:USTC  -10.00 CNY     Expenses:Food:Lunch   10.00 CNY  2020-07-02 * \"科大餐饮\" \"西区芳华园餐厅; Dinner\"     Assets:CN:Card:USTC   -10.00 CNY     Expenses:Food:Dinner   10.00 CNY   校园卡消费可以直接使用该 importer。支付宝账单、信用卡账单等也可以通过导出 CSV 账单的方式利用自己编写的 importer 导入。   自动化   上述过程需要执行多个命令和脚本，利用 crontab 在每日睡前 (23:30) 执行一遍代码即可自动化记录消费。   $ python crawler.py&gt;&gt;log.log $ cd importers $ python ustc_card_importer_pipeline.py # 注意这里需要修改要记录的账本文件   Done!   Fava      Fava 可视化网页中提供了编辑功能，对于多文件的编辑，默认打开的是主文件，要想修改编辑器默认打开的文件，需将 2019-07-11 custom \"fava-option\" \"default-file\" 这个设置放在想要设定的文件里。   Fava 系统中也提供了添加记录的功能，但添加的记录默认写入了主文件里，根据Fava insert-entry options, default-file could also set the insertion file 作者似乎不 care 添加在哪个文件里这个问题，但依然可以利用 insert-entry 关键字变相设置一下，比如将 2019-01-01 custom \"fava-option\" \"insert-entry\" \".*\" 断言写在 2019/01.bean 文件的末尾，所有在 2019-01-01 之后的记录，通过 Fava 添加记录的话，该记录会 write 在这个断言之前。   Fava 是不带有密码功能的，根据 Make fava password-protected 作者认为这不应该是 Fava 应该做的工作；利用 Apache 或者 Nginx 的认证功能可以满足这个需求。        可视化工具 Fava 也支持 Importer，可以通过设置：       2017-01-01 custom \"fava-option\" \"import-config\" \"./importers/path/to/importer.py\" 2017-01-01 custom \"fava-option\" \"import-dirs\" \"./importers/path/to/csv_tmp/\"           在 Fava 界面侧栏看到 Importer，并手动导入数据。注 ：Importer 在 Fava 中使用的时候 metadata 会被去除。            Fava 还支持自定义 side bar link，即：       2099-01-01 custom \"fava-sidebar-link\" \"This Week\" \"/jump?time=day-6+-+day\" 2099-01-01 custom \"fava-sidebar-link\" \"This Month\" \"/jump?time=month\" 2099-01-01 custom \"fava-sidebar-link\" \"3 Month\" \"/jump?time=month-1+-+month%2B1\" 2099-01-01 custom \"fava-sidebar-link\" \"Year-To-Date\" \"/jump?time=year+-+month\" 2099-01-01 custom \"fava-sidebar-link\" \"All dates\" \"/jump?time=\"          ","categories": ["USTC"],
"tags": ["Beancount","eCard"],
"url": "/planet/2020/08/keeping-account-with-beancount/",
"teaser": null
},{
"title": "在 Linux 内核中测试程序性能",
"excerpt":"本学期，我担任了李诚老师编译原理课程的助教。在课程实验中，我们基于 LLVM 构建了一套编译系统，其中一个实验需要编写后端优化算法。为了评估学生们的优化代码，我们需要比较优化前后的代码（在这里是 LLVM IR）的性能。我们通过统计程序运行的时间来比较代码的性能，但是用户程序会受到内核调度。因为不是连续执行程序，所以受到调度造成的延迟会导致统计到的时间出现噪音，这些噪音可能会让测试结果不准确甚至影响到了同学们的分数。最开始，我想到是不是可以统计指令数来评估性能，打算用 perf stat 进行测试。然而，我们提供的实验环境基于虚拟机，VirtualBox 和 WSL 都没有实现相关的虚拟寄存器，要让同学们方便地使用该指令会比较困难，只得作罢。这时，我突然想到，内核线程可以不受到调度，那么使用内核线程是不是可以更精确的测量时间呢？于是我便开始了尝试。   注：由于原本目的是用于 LLVM IR，所以使用了 clang 来编译内核，没有这种需求可以完全无视 clang。   编写内核模块   超简单的内核模块编写方法   为了创建内核线程，我们可以构建一个内核模块，由它来执行相关的函数。构建一个基础的内核模块非常简单，这里我们 参考 The Linux Kernel Module Programming Guide：   /*  *  hello_mod.c - The simplest kernel module.  */ #include &lt;linux/module.h&gt;\t/* Needed by all modules */ #include &lt;linux/kernel.h&gt;\t/* Needed for KERN_INFO */  int init_module(void) { \tprintk(KERN_INFO \"Hello world.\\n\");  \t/* \t * A non 0 return means init_module failed; module can't be loaded. \t */ \treturn 0; }  void cleanup_module(void) { \tprintk(KERN_INFO \"Goodbye world.\\n\"); }   然后再加上一个简单的 Makefile：   # obj-m 告诉构建系统以模块编译，编译目标是 hello.ko obj-m += hello.o hello-objs := hello_mod.o  all: \tmake -C /lib/modules/$(shell uname -r)/build M=$(PWD) modules  clean: \tmake -C /lib/modules/$(shell uname -r)/build M=$(PWD) clean   这样，一个超简单的内核模块就完成啦！   为了编译内核模块，我们需要有头文件，在 Ubuntu 上可以安装 linux-headers-&lt;version&gt; 来实现。又或者你像我一样需要用到 clang ，那就下载 Linux 源码重新编译安装（PS：如果全量编译搭配 VSCode 补全体验很好）。在这之后，运行 sudo make CC=/path/to/clang 就可以编译这个模块了。编译完成后，会发现目录下多出来一个叫 hello.ko 的文件，它就是我们编译得到的内核模块。   在这个模块中，init_module 会在模块被载入时调用，而 cleanup_module 会被模块被卸载时被调用。通过 insmod hello.ko，可以载入它，而 rmmod hello 可以卸载这个模块。printk会将日志打印到内核的日志中，调用 dmesg 可以看到模块打印的欢迎和告别信息。   Tic-Toc …   虽然已经编写了一个模块，但是它啥都干不来，我们还得实现计时功能。在编写用户态程序时，语言库里通常有获取当前时间的函数，内核也一样。我们可以通过ktime.h 中的 ktime_get 来获取时间，大概的逻辑如下：   ktime_t start, end; u64 dur_ns; start = ktime_get(); foo(); // 被测试的函数 end = ktime_get(); dur_ns = ktime_to_ns(ktime_sub(end, start)); printk(KERN_INFO \"foo runtime: %lluns\", dur_ns);   看得出来，内核里的函数接口也很平易近人，简单几行就把我们最核心的算法实现完了。   怎么使用它？   现在，我们已经知道了如何统计时间，还得设计一个接口来让人触发相关的功能。虽然让模块在初始化时运行也不是不行，但是扩展性就变得太糟糕了。我决定用 procfs 来设计一个接口。Procfs 来源于 UNIX 哲学中一切皆文件的思想，它把系统运行时的一些信息用文件目录的形式展示出来，这样可以通过简单的文件操作（比如 cat、管道等）来访问和控制系统相关的参数，你可以通过 /proc/ 目录访问里面的内容。   在初始化的时候，我们通过 proc_mkdir 和 proc_create 可以像普通的文件系统一样在 /proc/ 目录下创建目录和文件：   // 在 /proc/ 下创建一个目录 if ((root = proc_mkdir(proc_dirname, NULL)) == NULL)     return -EEXIST; // 在 /proc/&lt;proc_dirname&gt;/ 目录下创建一个文件，并让该文件使用 bench_fops if (proc_create(filename, 0444, root, &amp;bench_fops) == NULL)     return -ENOMEM;   这里的 bench_fops 是一个类型为 struct file_operations 的结构体。它能为这个文件注册功能，比如 open、read、write 等。在内核中设计一个文件系统也需要实现类似的操作，万幸的是， procfs 下不需要实现 POSIX 语义。在这里，我希望只要有 write 被调用时，就会运行我的测试程序，这样我只要在 shell 中用 echo 和管道重定向就能调用它了：   // 所有参数都用不到，我们只希望触发一次测试 ssize_t run_bench(struct file *filp, const char __user *buf,                   size_t len, loff_t *ppos) {     // 测试相关的函数     foo();     // 返回长度和参数一样代表写入成功     return len; }  // 这是 C99 加入的结构体指定初始化，其它成员默认为空。 // 这意味着该文件只支持写 static const struct file_operations bench_fops = { \t.owner\t\t= THIS_MODULE, \t.write\t\t= run_bench }   模块功能已经完成了，最后得给模块取个好听的名字。我把英文中表示时间流逝的 tic-toc （tick-tock） 和表示内核的 kernel 合在一起，就变成了 tiktok。   链接函数   我本以为编写了寥寥数行 tiktok，将 LLVM IR 编译到目标文件再链接到模块上便可以了。然而经过测试，这样做会导致进程一直无法返回。经过反汇编比较了同一段代码在内核模块里编译的结果和外部产生的结果后，我才理解是因为编译选项不同导致了内存布局的差别，这使得默认参数编译的代码无法在内核中使用。由于内核编译选项繁杂，根据不同架构也会产生不同的选项，我们必须把代码放置进内核的构建系统内来让它产生内核想要的汇编（现在的内核中禁用了浮点数，所以浮点计算就无法测试了）。对于普通的 c 文件，只需要在 Makefile 中加上几句，比如：   hello-objs := hello_mod.o another_file.o   但是 LLVM IR 还需要一些技巧来骗过编译系统才行。我把自制编译器产生的 IR 文件改成了 .c 文件，并修改了 Makefile：   hello-objs := hello_mod.o another_file.o CFLAGS_another_file.o := -O0 -x ir   内核编译系统会在产生 another_file.o 时将这里的 -O0 -x ir 传给编译器，这让编译器知道接下来要读的语言是 LLVM IR，并且关掉大部分优化（这样才能体现出自制编译器中的优化效果）。由于 LLVM IR 编译时会忽略一些选项，所以我让编译器在产生中间代码时就加上了属性来确保编译正确。   虽然知道了怎么链接函数，但是内核是无法链接库函数的，而 IO 函数也无法直接在内核中使用。对此，我们可以修改相关的函数，在 tiktok 实现相似的功能。比如， printf 可以转换成 printk，而 exit 可以换成内核中的 do_exit。malloc 和 free 比较复杂，内核中的内存可没有进程那样退出就自动释放这么好的待遇。所以，在内核中必须得手动维护每一次分配和释放，避免出现事故导致 panic 或者内存泄漏（当然我很懒，课程不需要我就都没实现）。   一个小测试   既然实现完了，我们进行一个测试来检验 tiktok 的功能：   #define OUT_LOOP 100 int main(void){     int i;     int a;     int j;      a = 2;     j = 0;     while (j &lt; OUT_LOOP){         i = 0;         while(i &lt; 1000000) {             a = a * i + 1;             i = i + 1;         }         j = j + 1;     }     return a; }   上面是一段进行一些无意义计算的代码，我们修改 OUT_LOOPS 的大小（100、99、98）来比较不同方法的灵敏度。除了普通的 time 测量，我还加入了一组使用 taskset(1) 的对照组。 taskset 控制了程序的亲核性，这使得程序总能被调度到同一个核上，减少了跨核导致的缓存失效开销。为了减少随机误差，每种配置我都运行进行了 100 次函数得到虚列。实验数据可以在这里查看。要反映灵敏度，我们无法直接拿不同方法的结果进行比较，而是要在同一个方法内看看能否显著区分出不同循环次数带来运行时间差距（约为 1%~%2）。短暂尝试了复习概率论和数理统计后，我谷歌到了 K-S 检验 （Kolmogorov-Smirnov test），对于两组输入数据它可以检验它们是否同分布。这里我们假设实际运行时间是固有的，而调度等开销造成的是一个均匀同分布的随机误差。如果测量工具对两种配置得到的两组数据无法拒绝同分布假设，我们可以认为它无法准确得检测出程序性能的差异（统计全忘光了，我不知道我在说啥，如果有误欢迎指正）。我使用了 scipy.stat.kstest 来进行了 K-S 检验，结果如下表 （p 值小于 0.05 拒绝同分布假设）：                  p 值       98-99       99-100       98-100       98-98       99-99       100-100                       normal_time       $2.11*10^{-1}$       $5.83*10^{-1}$       $3.68*10^{-1}$       $3.6*10^{-2}$       $5.83*10^{-1}$       $1.29*10^{-3}$                 taskset_time       $1.56*10^{-2}$       $2.11*10^{-1}$       $3.21*10^{-5}$       $8.15*10^{-1}$       $8.15*10^{-1}$       $2.4*10^{-2}$                 tiktok       $3.73*10^{-36}$       $6.31*10^{-19}$       $2.6*10^{-38}$       $4.11*10^{-43}$       $1.41*10^{-28}$       $2.24*10^{-4}$           gg，完全没有用，连同一个配置都分不清楚。虽然占据了一个核，但是虚拟机本身也在被调度，这个误差并不满足我们的假设。但是，还不能放弃，还可以抢救一下，我把 tiktok 放裸机上测试了一下，得到的结果如下：                  p 值       98-99       99-100       98-100       98-98       99-99       100-100                       normal_time       $4.04*10^{-35}$       $2.82*10^{-1}$       $3.05*10^{-31}$       $8.15*10^{-1}$       $5.83*10^{-1}$       $1.54*10^{-1}$                 taskset_time       $1.42*10^{-51}$       $3.64*10^{-2}$       $4.39*10^{-55}$       $5.39*10^{-1}$       $9.08*10^{-1}$       $2.11*10^{-1}$                 tiktok       $2.20*10^{-59}$       $4.39*10^{-55}$       $2.20*10^{-59}$       $2.11*10^{-1}$       $7.02*10^{-1}$       $2.11*10^{-1}$           在裸机上，tiktok 的优势就体现了出来，它比 taskset 要更加灵敏一点。然而裸机上使用 perf stat就可以看到更加精确的指令数结果…   小结   虽然 tiktok 被证明没有太多实际价值，但是研究的过程中我还是学到了挺多 Linux 内核编译系统的知识。我想分享一下这个过程，是因为我觉得这很有趣。如果你对 tiktok 感兴趣，它在我的 Github 上，它比本文介绍的要稍微复杂一丢丢。如果你想要了解更多关于 Linux 内核的内容，网络上有许多很好的资料。至于编译课程，我估计细小的差距是没法在虚拟机里准确测量了，还是要尽量避开这种测试样例（Windows 上应该也有工具，但是不太方便）。   ","categories": ["Technology"],
"tags": ["Benchmark","Kernel","LLVM"],
"url": "/planet/2020/12/tic-toc-in-kernel/",
"teaser": null
},{
"title": "用 Python 处理大物实验数据",
"excerpt":"身为某世界一流退学的学生，大物实验自然是逃不过。本人有幸选择了大物实验最多的专业方向，从一级做到六级，直到上学期刚刚结束。大物实验里数据处理是占了很多时间的，那么怎么才能「优雅」地完成这一工作呢？   开始   大一的时候讲座推荐的软件是 Origin，画图、拟合等虽然方便，但完全鼠标操作，并且只有 Windows 上能运行，Wine 上有时会遇到个别功能不好用，很影响体验（当时我的电脑配置不好，玩不起虚拟机）。思来想去，还是觉得 Python 比较自然，于是故事就这样开始了。   在一级、二级大物中，需求基本是：散点画图（有时是对数）、线性拟合、组合的画图，以及不确定度计算和一般的数值计算。输入输出方面，要手工输入有时候多达几页的手写数据，画出来的图打印上交、计算出的结果手写进实验报告。   Python 做这些事情其实都不困难。画图用 Matplotlib 非常方便，也可以直接保存图片。数据计算自然是 NumPy。线性拟合的话，最初选择了 SciPy。输入输出还是比较基本，从文件读入。   于是，第一个实验「自由落体」的数据和处理就是这样：   #光电门间距 H cm #数量级 e -2 90.0\t90.0\t90.0\t80.0\t80.0\t80.0\t70.0\t70.0\t70.0\t60.0\t60.0\t60.0\t50.0\t50.0\t50.0\t40.0\t40.0\t40.0\t30.0\t30.0\t30.0\t20.0\t20.0\t20.0 #时间差 t ms e -3 331.6\t331.5\t331.8\t307.9\t307.9\t307.9\t282.9\t282.8\t282.9\t255.8\t255.7\t255.7\t226.9\t227.0\t226.9\t195.2\t195.2\t195.2\t159.9\t159.9\t159.8\t119.2\t119.1\t119.2   #!/usr/bin/env python3 # -*- coding: utf-8 -*- import numpy as np import matplotlib.pyplot as plt from scipy import stats import math #avoid font problem plt.rcParams['font.sans-serif'] = ['SimHei'] plt.rcParams['axes.unicode_minus'] = False #read data data = [] #order of magnitude oom = 0 fin = open('./data.txt', 'r') for i in fin.readlines():     if i[0] == '#':         #line start with # is comment         pass     elif i[0] == 'e':         oom = int(i.split()[1])     else:         data.append(np.array([float(x) * pow(10, oom) for x in i.split()]))         oom = 0 # print(data) ### main processing ### l = len(data[0]) x = data[1] y0 = data[0] data.append(y0 / x) y1 = data[2] slope, intercept, r_value, p_value, std_err = stats.linregress(x, y1) # z = np.polyfit(x, y1, 1) s_slope = slope * math.sqrt((r_value ** -2 - 1) / (l - 2)) s_intercept = s_slope * math.sqrt(np.mean(x ** 2)) print('linear regression:' ) print('slope:', slope) print('intercept:', intercept) print('r-value:', r_value) print('p-value:', p_value) print('std-err:', std_err) print('r-squared:', r_value ** 2) print('斜率标准差:', s_slope) print('截距标准差:', s_intercept) print('算得重力加速度:', 2 * slope) #plot plt.scatter(x, y1, marker='*', color='black', label='原始数据') # plt.plot(x, y1, '--', color='green', label='光滑曲线') plt.plot(x, intercept + slope * x, 'r', label='拟合直线') plt.xlabel('时间 t/s') plt.ylabel('平均速度 H/t / m/s') plt.legend(loc=4) plt.title('小球下落平均速度与时间关系图') plt.savefig('pic.png') plt.show()      只是画了张图就这么麻烦，很明显，除了练习了 Python 之外，和 Origin 相比生产力负提升。   之后的问题就是简化这些过程了。   两年之后   经过一年多的开发，我将一些常用的画图和数据处理操作打包成库，并添加了方便的文件输入和自动生成 docx 文件的功能。同时将 Python 包 physicsexp 发布到了 PyPI（和 AUR 一样，在 PyPI 发布包的门槛几乎没有）。   这里以三级大物 β 射线吸收为例。现在，读入文件只需要这样：   fin = open('./data.txt', 'r', encoding='utf-8') pos = readoneline(fin) N = readoneline(fin) Al_num = readoneline(fin) Cnt = readoneline(fin) fin.close()   数据做图也只要一行代码，一张图上多个曲线也只是一个参数的事，比如这是一张有三条线的图：   simple_plot(Momentum, Emeasure, show=0, issetrange=0, dot='+', lab='测量动能') simple_plot(Momentum, Eclassic, show=0, issetrange=0, dot='*', lab='经典动能') simple_plot(Momentum, Erela, dot='o', save='1.png', issetrange=0, xlab='$pc/MeV$', ylab='$E/MeV$', title='电子动能随动量变化曲线', lab='相对论动能')   画图并线性拟合也是非常常见的操作，于是也加入了库：   slope, intercept = simple_linear_plot(Al_Real, CntLn, xlab='质量厚度$g/cm^{-2}$', ylab='选区计数率对数(射线强度)', title='半对数曲线曲线', save='3.png') print(-slope) print(math.log(1e4) / (-slope)) print((math.log(Cnt[0]) - 4 * math.log(10) - intercept) / slope)   最后，一行代码将所有的数据和图片生成直接可以打印的 docx 文件，包含名字和日期：   gendocx('gen.docx', '1.png', '2.png', '3.png', 'slope, intercept: %f %f' % (slope, intercept))   文件如图所示，可以直接拿去打印了：      下面是整体代码：   #!/usr/bin/env python3 # -*- coding: utf-8 -*-  from physicsexp.mainfunc import * from physicsexp.gendocx import *  # read data fin = open('./data.txt', 'r', encoding='utf-8') pos = readoneline(fin) N = readoneline(fin) Al_num = readoneline(fin) Cnt = readoneline(fin) fin.close()  # data process  # calculated calibration values in class a = 2.373e-3 b = -.0161 dEk = .20  c0 = 299792458. MeV = 1e6 * electron  Emeasure = a * N + b + dEk x0 = .10 R = (pos - x0) / 2 B = 640.01e-4 Momentum = 300 * B * R Eclassic = ((Momentum * MeV)**2 / (2 * me * c0**2)) / MeV Erela = np.array([math.sqrt((i * MeV)**2 + (me * c0**2)**2) - me * c0**2 for i in Momentum]) / MeV print('pos\\t', pos) print('R\\t', R*100) print('pc\\t', Momentum) print('N\\t', N) print('Eclas\\t', Eclassic) print('Erela\\t', Erela) print('Emes\\t', Emeasure)  simple_plot(Momentum, Emeasure, show=0, issetrange=0, dot='+', lab='测量动能') simple_plot(Momentum, Eclassic, show=0, issetrange=0, dot='*', lab='经典动能') simple_plot(Momentum, Erela, dot='o', save='1.png', issetrange=0,             xlab='$pc/MeV$', ylab='$E/MeV$', title='电子动能随动量变化曲线', lab='相对论动能')  Len = 150 Cnt = Cnt / Len simple_plot(Al_num, Cnt, xlab='铝片数', ylab='选区计数率(射线强度)',             title='$\\\\beta$射线强度随铝片数衰减曲线', save='2.png') CntLn = np.log(Cnt) # d = 50 mg / cm^2 d = 50 Al_Real = Al_num * d slope, intercept = simple_linear_plot(Al_Real, CntLn, xlab='质量厚度$g/cm^{-2}$', ylab='选区计数率对数(射线强度)',                                       title='半对数曲线曲线', save='3.png') print(-slope) print(math.log(1e4) / (-slope)) print((math.log(Cnt[0]) - 4 * math.log(10) - intercept) / slope)  gendocx('gen.docx', '1.png', '2.png', '3.png', 'slope, intercept: %f %f' % (slope, intercept))   整个代码不含空行和注释共 46 行，而上面的自由落体代码 45 行。可见包装程度还是不错的。先计算然后画这三张图，写上面的代码和 Origin 相比哪个更快呢？还是看个人习惯，反正我是比较习惯代码。至少，这说明了大物实验需要的数据处理还是有很多相似点的，以至于打包一些函数可以提高一些生产力。   当然，这只是一个例子，对于个别实验，不管怎么处理都是要多花写时间的（直流辉光等离子体，说的就是你）。   你可能会问，为什么没有误差分析的功能。这确实是一个问题：计算 A 类和 B 类不确定度等不同实验差别很大，水平有限，我能做的除了将常数打表提供最基础的功能外，好像就没什么了。并且，开发得差不多时已经到二级中期了，算不确定度也不常见了（所以，别被一级吓怕了），所以这部分也没怎么测试过，属于 TODO。   迟到的 Jupyter Notebook   以上还是标准的 Python，但五级大物时，我尝试了仅一次就发现明显 Jupyter Notebook 更适合做类似的工作——尽管它不能用 Vim 编辑代码！这下子，数据直接输入在 Notebook 里就好了，画图也是所见即所得，不用等一张一张弹出来了。而进行临时的运算也不必影响正常流程。如图：      既然都到了 Jupyter ，如果多人合作的话，JupyterHub 是非常不错的选择，可以多个人在一台服务器上使用 Jupyter Notebook 。我之前配置的是每个用户一个隔离的 Docker 容器，里面的 Python 已经装好了包，可以直接使用，同时挂载了一个共享空间可以分享写好的 Notebook 。其实 JupyterHub 有用 Github 帐号登录之类的权限管理功能，但当时我们是几个认识的人合作，就没有管这些。   具体的代码在我的 GitHub 上，如果有人在写大物实验报告的过程中无聊了想找个地方摸鱼浪费点时间，不妨来看看。   总结   如果您想尝试用 Python 处理大物实验数据，我可以比较负责地说对于 95% 以上的实验是完全没有问题的。使用 NumPy 和 SciPy 计算， Matplotlib 做图，配以 docx 生成、Jupyter Notebook 或 JupyterHub 团队合作，可以比较轻松（但不意味着节省时间）地完成所有需要的操作，并可以通过包装库提高效率。   之前也有学长学姐尝试过类似的大物实验自动化项目，但因为暂时无法全部找到并对比，这里就不说了。大一的时候确实是想搞一套自动化程度很高的东西，但水平实在有限，并且不同的实验处理过程不太一样，一己之力完成每一个实验专属的程序也不太现实，所以结果就是自己挖了个坑并跳进去出不来：有时想想，或许还是左手卡西欧 991 右手座标纸来得快一些呢！  ","categories": ["USTC"],
"tags": ["大物实验","Python"],
"url": "/planet/2021/01/physexp-using-python/",
"teaser": null
},{
"title": "菜鸡写给菜鸡的 NetHack 入门教程",
"excerpt":"  教程说明   本教程只介绍最基本的操作和游戏刚刚开始阶段的策略，帮助新手活过第一层。引用内容为补充或 Fun facts，可以忽略。图中游戏“截图”均为字符界面的直接复制——虽然没有了颜色或加粗效果，但还是觉得这样更合适一些。   关于   NetHack 是一款历史悠久的 Roguelike 游戏，基于龙与地下城规则，也有着 Roguelike 典型特征：随机生成地图，永久死亡，难度和复杂度非常高。同时，游戏中也融合了各种文化和领域的元素，并且有多种有趣的提示信息和死亡方式。      总有一二十年才通关的老玩家说 NetHack 不难——或许和某些其他 Roguelike 相比确实如此，但这和你有什么关系呢？    此游戏默认只有字符界面，以下为一个游戏画面，可以感受一下：   This kobold corpse tastes terrible!--More--                                                         --------                       ----------                       |......-                       |........|`######################-......|                       |........|     -----------       |&lt;.....|                       |........|     |.........|  #####.....{.|                       |........-#####|.........-###    --------                       |........|    #..........|                       --------|-     -------.---                              ##                               ##                               #                              #                      --------.--                      |$........|                      |.........|     ------------    #..........|     |.....@.d..|    #|..........     |.....^.....#####|....&gt;....|     ------------     -----------  Petergu the Stripling          St:15 Dx:14 Co:18 In:9 Wi:7 Ch:10 Lawful Dlvl:1 $:11 HP:7(16) Pw:1(2) AC:6 Xp:1      贴图模式也是有的，但是不如字符模式经典    安装和配置   如果你使用 Linux 等操作系统，那么 NetHack 多半可以直接从软件源中安装：包名通常为 nethack 或 nethack-console。如果使用 Windows，可以在官方网站下载。建议使用默认的英文版。   为了更好地游戏体验，在 Linux 上推荐将以下内容添加至 ~/.nethackrc 配置文件（这也是 Ubuntu 中自带的配置）。   # # System-wide NetHack configuration file for tty-based NetHack. #  OPTIONS=windowtype:tty,toptenwin,hilite_pet OPTIONS=fixinv,safe_pet,sortpack,tombstone,color OPTIONS=verbose,news,fruit:potato OPTIONS=dogname:Slinky OPTIONS=catname:Rex OPTIONS=pickup_types:$ OPTIONS=nomail  # Enable this if you want to see your inventory sorted in alphabetical # order by item instead of by index letter: # OPTIONS=sortloot:full # or if you just want containers sorted: # OPTIONS=sortloot:loot  # # Some sane menucolor defaults #  OPTIONS=menucolors MENUCOLOR=\" blessed \"=green MENUCOLOR=\" holy \"=green MENUCOLOR=\" uncursed \"=yellow MENUCOLOR=\" cursed \"=red MENUCOLOR=\" unholy \"=red MENUCOLOR=\" cursed .* (being worn)\"=orange&amp;underline   开局   运行 NetHack 后将看到以下提示：   NetHack, Copyright 1985-2020          By Stichting Mathematisch Centrum and M. Stephenson.          Version 3.6.6 Unix, built Mar 18 18:21:43 2020.          See license for details.   Shall I pick character's race, role, gender and alignment for you? [ynaq]   你可以按 n 然后自己选择人物的种族（人类，矮人，精灵，地精，兽人）、角色（考古学家、骑士、游客等 13 种）、性别（男、女）和阵营（守序、中立、混乱），或者按 y 让系统随机选一个。对于新手，女武神（Valkyrie）、野蛮人（Barbarian）和武士（Samurai）是开局较为容易的角色，虽然我觉得巫师（Wizard）的游戏体验比较有趣。      性别和阵营可以在游戏中因道具改变       每个角色的每个阵营对应一个不同的神。其中僧侣（Monk）的神是中国神话传说中的”人物”：山海经、赤松子和黄帝    选好之后根据提示按 y 开始。出现 --More-- 时说明提示未显示完，按空格到下一句话。      被怪打一下后出现 --More--，下一句话基本是 You die...    Hello petergu, welcome to NetHack!  You are a neutral male human Wizard. --More--       -----   |..@|   |.f(|   |x..|   |...|   |?..+   -----          Petergu the Evoker             St:9 Dx:8 Co:16 In:17 Wi:14 Ch:11 Neutral Dlvl:1 $:0 HP:12(12) Pw:7(7) AC:9 Xp:1   图中，@ 是你，身边白底（复制出来看不到了）的 f 是你的宠物猫，x 是一只怪（grid bug），+ 是关着的门。各种字符代表什么需要慢慢记忆，或者按 / 然后根据提示再按 /，移动光标查看地图上的信息，结束按 ESC。      无论任何时候都要仔细阅读提示。这和学习 Linux 命令行是一样的。    底栏是各种状态。新手主要要关注的就是 HP，即生命值；AC，Armor Class，代表防御，越低越好；以及可能出现在底栏的其他临时状态，比如失明（Blind）。其他属性的含义可在 Wiki 上查询。      HP 降为 0 只是最无聊的死亡方式    按 i 可以打开装备栏查看自己的物品。空格返回。    Weapons  a - a blessed +1 quarterstaff (weapon in hands)  Armor  b - an uncursed +0 cloak of magic resistance (being worn)  Scrolls  i - an uncursed scroll of magic mapping  j - an uncursed scroll of enchant weapon  k - an uncursed scroll of remove curse  Spellbooks  l - a blessed spellbook of force bolt  m - an uncursed spellbook of create monster  Potions  f - an uncursed potion of gain ability  g - an uncursed potion of monster detection  h - an uncursed potion of healing  Rings  d - an uncursed ring of fire resistance  e - an uncursed ring of invisibility  Wands  c - a wand of magic missile (0:4)  Tools  n - a magic marker (0:55)  o - an uncursed blindfold  (end)   按 Ctrl-X 可以查看自身可以查看的属性。空格翻页和返回。      更多的属性不能自我感觉到，只有特殊情况下才会显示出来     Petergu the Wizard's attributes:   Background:   You are an Evoker, a level 1 male human Wizard.   You are neutral, on a mission for Thoth   who is opposed by Ptah (lawful) and Anhur (chaotic).   You are in the Dungeons of Doom, on level 1.   You entered the dungeon 9 turns ago.   There is a full moon in effect.   You have 0 experience points.   Basics:   You have all 12 hit points.   You have all 7 energy points (spell power).   Your armor class is 9.   Your wallet is empty.   Autopickup is on for '$' plus thrown.   Current Characteristics:   Your strength is 9.   Your dexterity is 8.   Your constitution is 16.   Your intelligence is 17.  (1 of 2)   “静态”操作就这些：因为 NetHack 是回合制游戏，你可以随时查看这些信息并在进行动作前充分思考。   那么接下来的任务就是活下去了。毕竟，游戏的目的是在地牢深处找到炎多的护符（Amulet of Yendor）并将其献给自己的神，而不是原地不动。   游戏开始   首先是移动。推荐的移动方式是和 Vim 操作类似的 8 个方向的 hjklyubn，当然新手用四个方向键也未尝不可。      事实上，用方向键移动 as good as dead。按下一个移动键不松手也是常见的死亡原因。     可以用大写的 HJKLYUBN 向一个方向长距离移动    比如说，按下箭头或 j 移动到门边上。移动途中，x 被猫杀死了。      Rex misses the grid bug. Rex bites the grid bug.     Rex bites the grid bug. The grid bug is killed!       按 Ctrl-P 可以查看之前的消息。       前期，宠物比你战斗力强也是常有的事     -----  |..&lt;|  |..(|  |..f|  |...|  |..@+  -----   开门才能出去。按 ol 开右侧（l 移动方向）的门。之后就可以向右探险了。沿着过道（#）走了一段，发现没有路了。   ----- |..&lt;| |..(| |...| |...| |...-# -----#      ###        #        #        ###f           @   这也是常见操作：需要搜索以下才能找到路。按 s 搜索，或者更常用的，按 10s 搜索 10 次。如果没有路就再来 10 次。发现了隐藏的门，于是继续开门走进屋子。   You find a hidden door.        -----   |..&lt;|   |..(|   |...|   |...|   |...-#   -----#        ###          #          #          ###f             @+   屋子里有一个 [ ，走到物品上方并按 , 捡起。p - a splint mail.。这是一件盔甲，按 w 穿戴，再按 ？ 选择可穿戴的物品，p 选择新捡到的盔甲。You cannot wear armor over a cloak.，先把外套脱下。按 T，看提示已经脱掉了，再穿盔甲，然后再次 W 穿上外套。这是可以看见 AC 降为 3，盔甲不错。      我们的运气不错。如果发现 AC 上升，多半是盔甲被诅咒（cursed），并且被诅咒的兵器和物品无法脱下。                                                 ----------------                                             #@d.............|   -----                                     f|...............           ....   |..&lt;|                                  #### ..............|   |..(|                                  ####+ .............+   |...|                                  ##    --------- ----   |...|                                  ##   |...-#                                 ##   -----#     ---------                   ##        ###   |.......|      -----+----  ###          #   |.......|      |.........###          #   |.......|      |.......{|####          ####|........######-........|             #-.......|      |........|              |.......|      |..&gt;.....|              ---------      |........|                             ----------  Petergu the Evoker             St:9 Dx:8 Co:16 In:17 Wi:14 Ch:11 Neutral Dlvl:1 $:0 HP:10(12) Pw:7(7) AC:3 Xp:1   继续探险，开门看见一只豺狼。直接按向右移动的键（l）攻击它。几步之后，狼被打死，你也只剩 8 HP 了。      当然，见到怪不掂量一下自己的能力就直接攻击并不是好的策略。       比如如果正面击打一个冰冻之眼（Frozen eye），你会被冻住若干回合，然后被旁边路过的小怪打死。       可以按 . 原地休息，这会缓慢回复失去的 HP。    You kill the jackal!  You hear water falling on coins.                                                 ----------------                                             f@%.............|   -----                                     #|...............           ....   |..&lt;|                                  #### ..............|   |..(|                                  ####+ .............+   |...|                                  ##    --------- ----   |...|                                  ##   |...-#                                 ##   -----#     ---------                   ##        ###   |.......|      -----+----  ###          #   |.......|      |.........###          #   |.......|      |.......{|####          ####|........######-........|             #-.......|      |........|              |.......|      |..&gt;.....|              ---------      |........|                             ----------  Petergu the Evoker             St:9 Dx:8 Co:16 In:17 Wi:14 Ch:11 Neutral Dlvl:1 $:0 HP:8(12) Pw:7(7) AC:3 Xp:1   可以看到提示狼被打死。同时你听到一些声音。      You hear water falling on coins. 的意思是本层有喷泉（中间屋子里的 {）    地上的 % 是狼的尸体。杀死怪物后你多半希望吃掉尸体，否则没有食物会饿死。移动到 % 上方并按 e，选择 y 吃掉。      You see here a jackal corpse.     There is a jackal corpse here; eat it? [ynq] (n) y     This jackal corpse tastes okay. You finish eating the jackal corpse.       当然，不是什么都能吃。有些怪的尸体会让你中毒。如果因此呕吐，你会变得更饿。然而有些尸体可以让你获得某些能力（比如抵抗中毒、抵抗寒冷等）。如果触摸鸡头蛇怪（cockatrace）的尸体，会变成石头。    这时，可以看到我们吃饱了，变得 Satiated。      这时继续大量吃东西可能会被噎死。    同时发现，有一扇锁着的门。我们目前没有撬锁工具，只能踢开。按 Ctrl-D 然后方向 h 踢门几次。   This door is locked.                                                 ----------------                                             #-..............|            -----   -----                                     #|.f.............           .....|   |..&lt;|                                  ####|..............|   |..(|                                  ####+@.............+   |...|                                  ##  ----------- ----   |...|                                  ##   |...-#                                 ##   -----#     ---------                   ##        ###   |.......|      -----+----  ###          #   |.......|      |.........###          #   |.......|      |.......{|####          ####|........######-........|             #-.......|      |........|              |.......|      |..&gt;.....|              ---------      |........|                             ----------  Petergu the Evoker             St:9 Dx:8 Co:16 In:17 Wi:14 Ch:11 Neutral Dlvl:1 $:0 HP:9(12) Pw:7(7) AC:3 Xp:1   我们踢门多次门才打开，中途来了两只狼，第一只被猫一击咬死，第二只也被猫一击咬死。      This door is locked.     WHAMMM!!! Rex misses the jackal.     WHAMMM!!! Rex bites the jackal. The jackal is killed!     WHAMMM!!!     WHAMMM!!!     WHAMMM!!!     As you kick the door, it crashes open! The jackal bites!     Rex misses the jackal.     You miss the jackal. The jackal bites! Rex bites the jackal.     The jackal is killed!       注意到图右边部分显示的房间了吗？因为从隔壁房间的门口“路过”，视野所限只能看到屋内的一部分。字符界面不代表没有光照的处理。    一层探险结束后，捡到了一些其他护身符和戒指等。因为捡东西过多，处于 Burdened 状态。走到 &gt; 的位置，按 &gt; 下行到下一层地牢。      负重是非常不好的，但本人就是不想扔东西。       You fall down the stairs.       下楼的时候宠物如果在你身边一格以内，会和你一起下去。否则会被留在原地，并逐渐野化    这时候，背包里已经有一些不知道是什么的装备了。      r - a sapphire ring     t - a pyramidal amulet    鉴定物品（Identification）是 NetHack 中重要而困难的。最基础的方法就是亲自体验：P - ? - t 戴上护身符。好像没什么变化，仍然不知道是什么。按 R 移除。戒指也一样，什么也没鉴定成。只能作罢。      鉴定物品的高级技巧有很多，比如在商店观察卖出价格。       NetHack 中每种戒指、护身符和卷轴有不同的外观。每一局游戏中外观和功能的对应保持不变，但不同局游戏的这种对应是随机的。这一点并不是 trivial 的，因为，比如说，戒指的材质（金属、石头等）不一样，从而决定了每一局中玩家能通过变身（polymorph）并吃掉戒指获得何种永久属性。    继续同样的探险。看到商店，但我们没有钱，只好离开。      \"Hello, petergu! Welcome to Akhalataki's used armor dealership!\"       攻击商店老板是非常不明智的行为。但是，如果店内有死亡魔杖（Wand of death），可以用其将老板杀死并获得所有的物品。如果有许愿魔杖（Wand of wishing），可以许愿得到死亡魔杖。这二者的基础价格都是 1200，很容易被认出。       如果你是游客（Tourist），并且穿着夏威夷 T 恤（Hawaiian shirt），会被商店老板加价“宰客”。       宠物可以捡起商店中的物品并在店门外放下—— shoplifting。     You hear someone cursing shoplifters.             #         ##         #         # --------|-- |.......@.| |[[[[[[f@[| |[[[[[)[[)| |))[[.[[[[| -----------   捡到并戴上一枚红宝石戒指后，发现这是被诅咒的——摘不下来了。然而还不知道它是干什么的，但多半不是什么好东西。      E - a cursed ruby ring (on right hand)    You see here a blindfold.  You faint from lack of food.--More--                                         ------                                        |....|                                       #......###                            ------######|....|  ##     ------       ----------------     |....-######|....|   ###   |....|       |..............-     |....|#     |....|     ####....F|       .......@..F....|     |....|      |....|         |....-##       |......f.......|     |..^..      --)---         ------ ###  ------------       ---.------------     -|-.--        #                     ###..{........|          ###                #            #####                    |..........|            ####             #                ##                   |........&gt;.|              -.----      ---.-      ----------.--                 ------------              |....|      |...|      ............|              |....|      |...|      |...........|              |....|      |...|      |.&lt;.........+              |.....######-...|      |...........|              ------      -----      -------------    Petergu the Evoker             St:8 Dx:8 Co:16 In:17 Wi:14 Ch:11 Neutral Dlvl:3 $:28 HP:15(15) Pw:23(23) AC:1 Xp:2 Fainted Burdened Deaf   不久之后，因饥饿晕倒。戴上的戒指多半是 Ring of hunger。按 e 吃一个鸡蛋，回过神来。正好背包里有解除诅咒的卷轴，读一个：按 r - ? - k。      As you read the scroll, it disappears.--More--     You feel like someone is helping you. Rex misses the lichen.--More--    然后，戒指就可以摘下来了。   又饿了，吃个鸡蛋结果变质了。      Blecch! Rotten food! The world spins and goes dark.    又走了一阵，没有吃的了（因为尸体都让猫吃了），已经晕倒，怎么办？只有神能救我们了。      Wizard Needs Food, Badly!    #pray      You begin praying to Thoth. You are surrounded by a shimmering light.--More--     You finish your prayer. You feel that Thoth is well-pleased.--More--     Your stomach feels content.    祈祷是非常强大的——看，这就饱了。但是如果频繁祈祷，神会对我们生气。      原地祈祷三次，就会被雷劈死。                                                       --------                             ---------------######........#            --------         |..@&gt;.........|#     |......|#     -----            |......|         |.............|#    #-..B...|#     |...|            |...:..|         ---|-----------#    #|......|#     |...|            |......|            #   ##   ####    #|.......##    |...|            |......|         ##*##########       #.......| #####....|            |......|        ##  #    #####     ###-------- #    |...|            -----|--       ##   #        #     # #         #    -|---                 #         #  ###        ##    ##          #     #                 #        ##  #           #    #           #     #                 #        #---.------     #    #           #     #                 #        #|........|    -|----#           ##    ##                 #       ##|........|    |..|&gt;|#            ####--|---------                ##     ### |........|    |....|#               #...........|            ----.-     #   |&lt;.......|    |....-#                |..........|            |.....######   |........|    ------                 |..........|            |...{| ######  .........|                           ------------            ------         ----------  Petergu the Evoker             St:9 Dx:8 Co:16 In:17 Wi:14 Ch:11 Neutral Dlvl:4 $:62 HP:15(15) Pw:23(23) AC:1 Xp:2 Burdened   发现，本层有两个下楼梯。这是因为有一个是通往支线任务地精矿洞（Gnomish Mines）的。这个支线较难，如果不是女武神等前期强角色基本不要擅自进入。支线地图是这种风格，周围都是地精 G。稍微进去一下，立刻被围攻。幸亏猫比较强打死几只怪。还剩 7 HP 逃了出来。当然，矿洞里装备也很多，我们换了双鞋子，现在 AC 是 0，而代价是沉重的盔甲和行动不便。      b - an uncursed +0 cloak of magic resistance (being worn)     p - a +0 splint mail (being worn)     B - a +0 iron skull cap (being worn)     I - a +0 pair of hard shoes (being worn)       ---    |..--  ---....- -  |.......|.   .........-    -.......|     -......|      -..f..--      --.....|       -..G..|    |....|...| ---    | ----.......|        -.@......|       |.........|       |.......---       ..*.G.....      ------------   下一层看到一个箱子。可以 #loot 抢劫。但箱子上锁了，所以可以踢几脚把锁打开。      这么做的代价是箱内的药水和易碎的魔杖会损坏。       THUD! You break open the lock!    You see here a large box.                                                              -----                   -----------     #########################....|                   |.........|    ###########        #      |...|                   |.........|    #------      ------       .....                   |.........|    #.....| #####...&lt;.|       |...|                 #`|..f..&gt;...|    #|.....##    |...)|       --.--                  #-...@.....+     |....|      |...)|         #                  #-----------    #-.----      |....|         #                  #####        ##  ##          |....|###      #                    # ################        #---.--##############                               #              `############ --.-+-|----                    .                               ###     ..........|                   |.                                       |.........|                   |.                                       |...... ..|                   |.                                       |.........|                   ---                                      |.........|                                                            -----------   Petergu the Conjurer           St:9 Dx:8 Co:16 In:17 Wi:14 Ch:11 Neutral Dlvl:5 $:75 HP:25(25) Pw:31(31) AC:0 Xp:3 Burdened   然而箱子是空的。      你也可以往箱子里放一些东西。    下一层看到了一些类似宫殿的东西。中间有先知，可以花 50 块钱向它咨询（#chat）。   You see here a statue of a plains centaur.                                                      -------              ------------           ###############-....*|              |..........|        ####              |.....|              ...........| ############        #####-.^....              |.....&lt;....|##     #-----|-------#    -------              -|----------#       |C.........C.#               ############       |.....C.....|#                                  |...-----...|                                  |...|.{.|...|                                  |..@|{.{|C..|                                  |.....{.|...|                                  |..f-----...|                                  |.....C.....|                                  |C.........C|                                  -------------     Petergu the Conjurer           St:9 Dx:8 Co:16 In:17 Wi:14 Ch:11 Neutral Dlvl:6 $:75 HP:25(25) Pw:31(31) AC:0 Xp:3 Burdened   下一层，遇到一只巨大的蝙蝠（Giant bat），被咬到残血后我们逃跑，但是它追了过来，狭路相逢。   The giant bat bites!--More--                                            -----                       -----                                           |...|                #######-...|                                          #|....#################      |...|                                          #-...|#                      |...|                                          #|...|                       -...|                                          #|...|                       |.&gt;.|                                          #-----                       ---.-                                          ##                              #                                          #                               *                                         ###                              #                                          # #                             #                                          ###                             #                                            #                          -|-|-                                            #                          |...|                                            #                          |...|                                           +######B@######`            ...&lt;|                                          .|#                          -----                                          .-#                                          --#  Petergu the Conjurer           St:9 Dx:8 Co:16 In:17 Wi:14 Ch:11 Neutral Dlvl:7 $:88 HP:5(29) Pw:43(43) AC:0 Xp:4 Burdened      You die...--More--     Do you want your possessions identified? [ynq] (n)     于是毙命此地。   死后游戏会问你要不要看看你的东西到底是什么。你可以看一眼。    L - 3 uncursed scrolls of blank paper  R - an uncursed scroll of fire  Spellbooks  l - a blessed spellbook of force bolt  m - an uncursed spellbook of create monster  x - an uncursed spellbook of slow monster  Potions  f - an uncursed potion of gain ability  g - an uncursed potion of monster detection  h - an uncursed potion of healing  G - an uncursed potion of sickness  O - an uncursed potion of water  S - a blessed potion of sleeping  Rings  d - an uncursed ring of fire resistance  e - an uncursed ring of invisibility  r - an uncursed ring of cold resistance  E - an uncursed ring of aggravate monster  H - an uncursed ring of sustain ability  Wands  c - a wand of magic missile (0:4)  Tools  n - a magic marker (0:55)  (2 of 3)   通常，如果看了，就会发现背包有至少一件能避免死亡的物品（比如残血之后喝个药之类的，或者这个 magic missile 看起来很 promising）。然而生命只有一次，这就是 Roguelike。                           ----------                       /          \\                      /    REST    \\                     /      IN      \\                    /     PEACE      \\                   /                  \\                   |     petergu      |                   |      88 Au       |                   |   killed by a    |                   |    giant bat     |                   |                  |                   |                  |                   |       2021       |                  *|     *  *  *      | *         _________)/\\\\_//(\\/(/\\)/\\//\\/|_)_______   Goodbye petergu the Wizard...  You died in The Dungeons of Doom on dungeon level 7 with 704 points, and 88 pieces of gold, after 3310 moves. You were level 4 with a maximum of 29 hit points when you died.   尾声   通过本菜鸡的一局典型游戏流程，希望你已经了解了 NetHack 的基本操作，并能够在地下城中跌跌撞撞地存活一段有限大的时间。仍然有非常多重要的机制和操作本教程中没有提及（甚至 BUC 都没有说），这就要各位自己寻找了。对于一般玩家，要胜任这种游戏，作弊、剧透甚至是阅读源代码都是有必要而并不可耻的行为。   参考资料      https://nethackwiki.com   https://www.zhihu.com/question/40177337   https://www.melankolia.net/nethack/nethack.guide.html   https://nethack.org/   https://github.com/regymm/nethackassistant   https://alt.org/nethack/  ","categories": ["Tutorial"],
"tags": ["游戏"],
"url": "/planet/2021/09/nethack-gitgud/",
"teaser": null
},{
"title": "2010 年自由软件日（合肥站）",
"excerpt":"2010 年 9 月 18 日在中国科大西区 3112 教室，中国科学技术大学 Linux User Group(USTC@LUG) 组织了以“人人为我，我为人人”为主题的自由软件日活动，本次活动得到了龙芯梦兰、龙芯俱乐部、中标软件、中科红旗、中国开源软件推进联盟等公司、开源社区，以及合肥工业大学，安徽大学等兄弟院校的大力支持。100 多名中国科大、安徽大学、合肥工业大学等高校的在校学生及校友以及合肥地区开源爱好者参加了本次活动。      活动由 LUG 协会现任会长王鹏主持，他首先对自由软件日合肥站的活动流程以及科大 LUG、合肥 LUG 的情况做了具体介绍。在 UBUNTU 创始人给中国开源爱好者的视频播放中，2010 年自由软件日合肥站的活动正式开幕了。      科大网络中心的张焕杰老师首先为大家带来了《Linux 在科大校园网络建设中的应用》的专题报告。张焕杰老师是科大 92 级计算系学生，后来留校在网络信息中心任职，主要工作之一是负责管理科大校园网，他也是国内当年有名的中科大 Linux 三剑客之一。张老师精彩的报告之后开始了休息以及游戏互动环节，在回答了组织方准备的关于自由软件和 Linux 的小问题后，同学们领取了丰厚的奖品。在这中间还穿插了中科红旗 Qomo1.0 社区版发布，中标软件体验有奖征文活动启示等环节，活动中气氛热烈。   休息之后是我们的自由主题演讲活动，一些同学做了开源软件使用相关的技术分享报告，同学们就一些常见问题进行了互动交流。   主题演讲活动之后，进行了现场短信投票，赵希明同学题为《Linux 下的日常工作和娱乐》的报告当选为当天最受欢迎的自由主题演讲。之后进行了抽奖环节，若干名参与者成为了当天的幸运观众，并获得了收音机，小玩具等奖品。活动从下午 2:30 一直持续到下午 6:00. 会后举行了 Linux User Dinner(LUD), 在 LUD 中，LUG 的志愿者们就我校 PXE 系统今后的发展，以及结合我校网络环境将要开发的项目进行了讨论与规划。                       ","categories": ["LUG 活动"],
"tags": ["USTC_LUG","SFD"],
"url": "/news/2010/09/2010-software-freedom-day/",
"teaser": null
},{
"title": "2010 年 LUG 服务器维护计划研讨会",
"excerpt":"2010 年 10 月 15 日晚上，LUG 在科大西区图书馆组织了服务器维护小组第一次例会，会议由 LUG 协会现任副会长张成同学主持，集中讨论了发展现有网络服务的计划。20 余位 LUG 志愿者参加了本次会议。      张成首先介绍了现在学校 linux 用户协会服务器现状，包括 debian,oss,pxe,freeshell,lug.ustc 等服务器的配置、历史介绍等。然后张成详细介绍了本学期服务器维护小组的工作计划，包括 oss/debian 系统和服务的更新以及 pxe 服务的改造构想。      活动计划介绍完之后，大家讨论了活动计划的具体开展方案，各位志愿者根据自己的兴趣爱好、以及服务器维护工作量大小等因素选择加入各个服务器的维护小组。各小组由现在的维护者担任组长，负责组织培训，活动通知等工作。最后，张成同学做了 pxe 网络服务的专题讲座。pxe 维护小组的同学以及其他感兴趣的同学认真听取了本次讲座。      本次活动从 19:00 持续到 22:30，会议中大家进行了热烈讨论，积极要求参与到服务器的各项维护工作中，为本学年服务器维护工作的开展打下了一个良好的开端。会后部分志愿者还到活动室对将来需要用到的测试服务器等进行了实地考察。  ","categories": ["LUG 会议"],
"tags": ["PXE","LUG","Meeting"],
"url": "/news/2010/10/2010-lug-server-dev-meeting/",
"teaser": null
},{
"title": "2010 年 4 月 Linux Install Party",
"excerpt":"   Linux Install Party 是中国科学技术大学 Linux 用户协会一年一度举办的活动，主旨在于推广和安装 Linux，宣传和鼓励开源和自由软件精神。本次 Linux Install Party 主题是“草根低碳”。“草根”反映 Linux 目前已经逐渐平民化的特征，人们往往以为 Linux 是一个很高深的东西，这次 party 就是要把 Linux 带到同学们的身边。“低碳”反映了 Linux 创新的安装方式，以往安装 Linux 需要刻录光盘，费时费力不环保，这次 party 将宣传 USB 安装和网络安装的方法。本次活动可以让同学们亲身“无痛”体验到 Linux，同时获得 Linux 的相关知识，并在安装 Linux 环节有专人指导。   由于活动之前通过海报、横幅、bbs 进站画面等多种途径的宣传，再加上Mozilla 中国、中标软件等公司以及中国开源软件推进联盟的鼎力支持，以及校学生广告艺术协会等兄弟协会和合肥工业大学等兄弟院校同学的大力帮助，本次活动于 2010 年 11 月 21 日在 3121 教室成功举办，现场 200 名左右的同学和校友以及开软件软爱好者参加了活动。   本次活动由顾昊同学主持。在活动中，科大计算机系本科的张昊翀同学首先给大家详细介绍了 Linux 安装的相关知识，包括发行版的选择和如何分区。另外他还向大家介绍了 grub 的一些知识，例如如何设置默认启动项，如何修复 grub 以及如何删除 grub 并修复 windows 启动项。   紧跟着是趣味问答环节，该环节送出了 Mozilla 中国、中标软件等公司以及中国开源软件推进联盟赞助的礼物。该环节问了一些很有趣的问题，例如“列举 5 个以上 Linux 发行版”、“列举 5 个以上窗口管理器”、“一块硬盘最多能有几个主分区，为什么？”等等问题。同学们回答踊跃，现场气氛很热烈。   接着科大计算机系研究生张成同学给大家介绍并演示了 PXE 系统。张成同学现场显示了 knoppix、中标普华、ubuntu、mint 等操作系统，介绍了如何通过 pxe 安装 linux，并展望了通过 pxe 建立全校无盘系统的愿景。   之后由祝元宠同学给大家带来了各个 Linux 发行版的简要介绍。接着便是活动的安装环节，有二十多位同学携带了笔记本电脑现场安装了 Linux。同学们十分积极，气氛很热烈，活动从下午两点半持续到了五点半。之后有十几名热心志愿者参加了 LUD（Linux User Dinner）聚餐，就 Linux 社区讨论了许多问题和展望，增进了技术和感情。   活动结束后一周，很多同学发帖询问 Linux 安装的相关问题，在 bbs 的 Linux 版掀起了一个安装 Linux 的小高潮。   以下是活动现场的照片：                          ","categories": ["LUG 活动"],
"tags": ["Linux User Party","Linux Install Party","PXE"],
"url": "/news/2010/12/2010-04-linux-install-party/",
"teaser": null
},{
"title": "mirrors.ustc.edu.cn 开张啦！",
"excerpt":"经过大半周的迁移和新脚本的测试，现在 mirrors.ustc.edu.cn 已经基本稳定了。   新机器的域名：   IPv4/v6: mirrors.ustc.edu.cn  （能解析出教育网/电信/v6地址） v4only:  mirrors4.ustc.edu.cn （能解析出教育网/电信地址） v6only:  mirrors6.ustc.edu.cn   有些地方（比如我测试的合肥长宽），DNS 会解析出电信地址，但使用教育网地址访问更快，这时可以通过修改 hosts 指定强制使用教育网地址访问。   教育网ip：202.38.95.110 电  信ip：202.141.160.110 v6  地址：2001:da8:d800:95::110   支持的访问方式：   http/ftp/rsync   提供的服务：   原 debian.ustc.edu.cn 和 oss.ustc.edu.cn 提供的镜像服务基本上都迁移过来了，除 fedora/ubuntu-partner 外。fedora 正在进行同步，ubuntu-partner 也会在近几天同步过来。   原 centos.ustc.edu.cn 提供的 centos/epel/linux-2.6.git 也已经迁移过来了。   需要注意的修改：   debian.ustc.edu.cn 和 oss.ustc.edu.cn 两个域名已经设置为 mirrors.ustc.edu.cn 的别名，大多数镜像的相对地址没有改变，所以大家基本上不需要对原有设置进行修改（如 sources.list），可以继续正常使用。但是以下镜像用户请注意：      gentoo 用户，原 portage 地址：rsync://oss.ustc.edu.cn/pub/gentoo-portage  已经调整为：rsync://mirrors.ustc.edu.cn/gentoo-portage   cygwin 用户，原 cygwin 源地址： http://oss.ustc.edu.cn/cygwin/cygwin/ 已经调整为： http://mirrors.ustc.edu.cn/cygwin/   原 ubuntu cdimage 地址： http://debian.ustc.edu.cn/ubuntu-cd 已经调整为： http://mirrors.ustc.edu.cn/ubuntu-releases   原 fedora linux 地址： http://oss.ustc.edu.cn/fedora/ 已经调整为： http://mirrors.ustc.edu.cn/fedora/linux/   centos.ustc 用户，请修改自己的 CentOS-Base.repo 和 epel.repo，将文件中的域名 centos.ustc.edu.cn  修改为  mirrors.ustc.edu.cn   linux-2.6.git 用户，请修改 origin 地址：git remote set-url origin git://mirrors.ustc.edu.cn/linux-2.6.git   使用帮助：   大多数镜像的使用帮助已经完成，大家在对应的目录下，如： http://mirrors.ustc.edu.cn/ubuntu/ 点击页面上方（标题下方）的使用说明链接，可以打开其对应的帮助信息，如如何设置 sources.list 文件。或者也可以直接打开 http://mirrors.ustc.edu.cn/mirror-help/.html 在首页上点击使用说明链接，点击其中对应的源的链接，也可以跳转查看相应的帮助。   由于人手不够，有些源还没有使用帮助信息，也欢迎大家帮忙写了，发送给我们。   状态监控：   在首页点击页面上方的同步状态链接，可以查看当前各镜像的同步状态，包括成功与否/上游源/镜像体积等。大家如果知道更好（更新、更快）的上游源，请联系我们。   如果同步出现故障，服务器的管理员会收到邮件通知，以尽快处理，所以大家看到状态监控页面中有显示同步失败的条目时，无需联系我们。   如果同步状态上显示同步正常，但实际使用过程中发现镜像有问题，请联系我们。   联系方式：   我们的邮箱：mirrors@ustc.edu.cn   鸣谢：   感谢中国科学技术大学、网络信息中心的支持，特别感谢 jameszhang 老师为我们提供服务器！  ","categories": ["LUG 活动"],
"tags": ["LUG","mirrors.ustc.edu.cn"],
"url": "/news/2011/04/mirrors-ustc-edu-cn-comes/",
"teaser": null
},{
"title": "Color my desktop,Color my life!",
"excerpt":"4 月 6 日，已经连续多次跳票的 Gnome 3 终于在大家的翘首企盼中发布了，为了庆祝这件开源社区令人振奋的盛事。中国科大 LUG(Linux User Group) 特联合北京 GUG(Gnome User Group) 以及合肥 LUG，联合举办 Linux 技术沙龙暨 Gnome 3 发布活动。本次活动获得了中标软件公司的大力支持，并同时很荣幸的邀请到了北京 Gnome 用户组的李震宁主席参加。      Linux 技术沙龙是中国科学技术大学 Linux 用户协会定期举办的活动，主旨在于推广 Linux 技术，宣传和鼓励开源和自由软件精神。本次 Linux 技术沙龙主题是“探秘 Gnome 3.0”。不了解 Linux 的人往 往以为 Linux 是一个很古板的东西，图形化界面很不美观，难以摆脱粗糙风格。“Gnome”是一种 Linux 一种桌面环境，以往安装 Linux 的 Gnome1.0 与 Gnome2.0 环境界面，不支持多点触控，操作较为费力，对于习惯 windows 的用户来说，最不习惯的就是 Gnome 的单点操作。这次技术沙龙就是要把将宣传千呼万唤始出来的“Gnome 3.0”，也将 Gnome 3.0 带到同学们的身边。本次活动可以让同学们亲身体验到 Gnome 3.0 的华丽特效与便捷操作，同时获得 Linux 与 Gnome 的相关知识。   由于活动之前通过海报、横幅、bbs 进站画面等多种途径的宣传，再加上中标软件公司的鼎力支持，以及合肥工业大学等兄弟院校同学的大力帮助，本次活动于 2011 年 4 月 16 日在 3124 教室成功举办，现场 200 名左右的同学和校友以及开软件软爱好者参加了活动。   本次活动由 LUG@USTC 王鹏会长同学主持。在活动中，北京 GUG（Gnome User Group）主席李震宁先生首先给大家详细介绍了 Gnome 环境的相关特性，包括 Gnome 的诞生经过。另外他还向大家介绍了 Gnome 的一些知识，紧跟着是趣味问答环节，送出中标软件公司赞助的礼物。该环节问了一些很有趣的问题，例如“为什么 Gnome 的图标为脚印？”、“列举 5 个以上窗口管理器？”、“什么是 GTK？”等等问题。同学们回答踊跃，现场气氛很热烈，回答的同学就能获取一份小礼品。   LUG 的祝元宠同学给大家介绍并演示了 Gnome 3.0 环境。祝元宠同学现场演示了 linux 在 Gnome 环境下的新特性，如无限度多窗口功能，绚丽切换窗口功能，多点触控功能等等新特性。同学们均深深体会到了 Gnome 3.0 令人震撼的华丽和亲和。   科大计算机系研究生，LUG CTO 张成同学绍了现在学校 linux 用户协会服务器现状，包括科大 linux 用户协会的创办历史，以及学校 LUG 资金来源，debian, oss, pxe, freeshell, lug.ustc 等服务器的配置。然后张成详细介绍了本学期服务器维护小组的工作计划，包括 oss/debian 系统和服务的更新以及 pxe 服务的改造构想，并展望了通过 pxe 建立全校无盘系统的愿景。   接下来赵希明同学为大家介绍了 Linux 新手在学习中应该注意的问题，赵希明用风趣幽默的介绍指出了 newbie 应该遵守的社区礼仪以及在出现问题的时候应该怎样获得帮助。   活动最后由北京 GUG 主席李震宁先生与王鹏同学给大家进行了抽奖环节，若干名参与者成为了当天的幸运观众，并获得了收音机、文化衫、小玩具等奖品。整个技术沙龙中同学们十分积极，气氛很热烈，活动从下午两点半持续到了五点半。之后有十几名热心志愿者参加了 LUD（Linux User Dinner）聚餐，就 Linux 社区讨论了许多问题和展望，增进了技术和感情。   在活动后的 LUD(Linux User Dinner) 上同学们对北京 GUG 主席的到来，以及中标公司长期以来对 LUG@USTC 的支持表示感谢，李主席与志愿者们共进晚餐。餐会上商讨并同时宣布 HFGUG(Hefei Gnome User Group)(筹) 成立，王鹏担任筹委会主任。HFGUG(筹) 的成立必将为开源软件特别是 Gnome 桌面在合肥乃至全国的推广做出自己的贡献。   下面是活动现场的一些照片：                          ","categories": ["LUG 活动"],
"tags": ["gnome3","Linux User Party"],
"url": "/news/2011/04/gnome3-launch-party/",
"teaser": null
},{
"title": "Fwd: 读书笔记：关于维护服务器的一些技巧",
"excerpt":"寒假读了三本书《LINUX SERVER HACKS 卷二》《实战 Nginx：取代 Apache 的高性能 Web 服务器》《Linux 服务器性能调整》，简单地了解了些 linux 服务器维护和管理上的技巧。现在就分别简要谈谈我在读这三本书时的感受吧。   一：《LINUX SERVER HACKS 卷二》   首先，这不是一本工具书，而是一本经验集。书内都是很巧妙的一节一节的 linux 服务器维护技巧，主要目的是提高维护 linux 是的速度和鲁棒性。说实话，我不是很习惯这种模式的书，因为如果带着问题去读这本书，读完后还是问题，而本不是关心的部分，读完后也很快就忘了。   简言之，我懂这本书里得到的信息有：   一：linux 非常灵活，特别是结合 NFS 以及远程终端，可以做非常有想象力的事情。   二：在复杂的连线环境中记得使用 screen   三：脚本可以做几乎任何维护性质的事，而且事情的解决方案往往比你想得简单。   四：注意 uid，gid 重用可能带来的问题   五：Google 万岁   二：《Linux 服务器性能调整》   这本书翻译的不是很好，文法晦涩，而且介绍的东西偏深，很多是探讨内核级的优化。感觉看得不是很明白，简单写写吧。   一：关于服务器文件系统的选择：ReiserFS 鲁棒性很好，而且对小文件有最佳性能。XFS 针对大型文件有最佳性能。   二：一块硬盘上读取外侧磁道的速度要快于内侧磁道，所以分区是可以考虑这点将序号小的分区分配给经常读写的目录。譬如分区时第一个为 swap，第二个/var，再者/usr，最后才是根和/home   三：mount 文件系统时带上 noatime 可以提高一些性能。   四：文件系统在创建的时候可以调教一些参数优化性能   五：各类监控/tweak 工具：hdparam, iostats, top, vmstat   三：《实战 Nginx：取代 Apache 的高性能 Web 服务器》   这本书灌水的内容比较多，内容实际上也就是作者博客上的一些应用技巧的整理，可以总结的不多，因为按部就班的做就行了。   从书中看，nginx 的性能优于 apache，而且在反向代理方面特别有优势，这是它的亮点。Nginx 虽然支持 rewrite，自我感觉还是蛮好用的，但是不兼容 apache 的.htaccess，使用时需注意。   Nginx 的组件高度模块化，可定制性比较强，具体可在使用时疯狂 google。   对于使用 php+mysql 的场合，注意 php 使用 fastcgi 的方式启动，性能貌似比传统 cgi 要高不少，估计和 apache 的 module 差不多   书中没有提到什么值得一提的优化，具体实践的时候多 google 好了。对于硬件环境不好的服务器，减少 nginx 工作进程，打开 gzip 压缩和缓存，为 php 安装加速器并为低配置环境优化，数据库（例如 mysql）在配置时减少内存占用上限。选择 myisam 而不是 innodb。   简言之，这本书最大的作用就是让 nginx 变得平易近人大家都可尝试了。  ","categories": ["读书笔记"],
"tags": ["nginx","linux server","php","mysql","reading notes"],
"url": "/news/2011/04/2011-winter-reading-notes/",
"teaser": null
},{
"title": "Debian 中国官方镜像：ftp.cn.debian.org",
"excerpt":"祝贺 mirrors.ustc.edu.cn 成为 Debian 中国官方镜像！此前，中国大陆 debian 镜像与主镜像延迟达 24 小时以上，现在，ftp.cn.debian.org 直接从 syncproxy.wna.debian.org 接受推送更新，其延迟降到 6 小时以内。此外，另一国内主力镜像 anheng.com 从 ftp.cn.debian.org 接受推送，延迟也在 10 小时以内。mirrors.sohu.com 亦开始从 ftp.cn.debian.org 同步。   Debian 用户使用帮助   使用当前稳定版 Debian Squeeze 的用户，请使用以下内容替换/etc/apt/sources.list   deb http://ftp.cn.debian.org/debian squeeze main deb-src http://ftp.cn.debian.org/debian squeeze main deb http://ftp.cn.debian.org/debian squeeze-updates main deb-src http://ftp.cn.debian.org/debian squeeze-updates main deb http://mirrors.ustc.edu.cn/debian-security/ squeeze/updates main deb-src http://mirrors.ustc.edu.cn/debian-security/ squeeze/updates main   其他版本用户请参考Debian 使用帮助。   镜像同步帮助   Debian Archive   请使用官方推荐的ftpsync脚本进行同步，脚本中有很详细的注释说明。如果有问题，请联系我们。   Debian CD   如果您已经同步了 Debain Archive，那么推荐您使用jigdo来同步，这可以节省很多流量和时间，平均每个 CD 的 ISO 仅需不到 1 分钟。这里有使用说明，同步脚本在这里可以下载到。   推送同步   为了尽可能减少与 Debian 主服务器的延迟，推荐您接受我们的推送。每次 ftp.cn.debian.org 同步完成后，会主动告知下游源，激活下游源的同步脚本。要接受推送同步，请下载我们的 pubkey，并保存到运行同步脚本的用户的~/.ssh/authorized_keys中：   wget -O- http://mirrors.ustc.edu.cn/~stephen/debianpush.pub &gt;&gt; ~/.ssh/authorized_keys   然后发邮件告知您的服务器地址、ssh 端口以及用户。   联系方式   如果您对我们的服务器有任何建议或者意见，以及使用中碰到任何问题，都可以联系我们，我们的邮箱是：mirrors AT ustc.edu.cn.  ","categories": ["LUG 活动"],
"tags": ["mirrors.ustc.edu.cn","debian","ftp.cn.debian.org"],
"url": "/news/2011/05/ftp-cn-debian-org-comes/",
"teaser": null
},{
"title": "Linux 版版聚",
"excerpt":"                                                                                            ","categories": ["LUG 活动"],
"tags": ["版聚","BBS"],
"url": "/news/2011/05/linux-e7-89-88-e7-89-88-e8-81-9a/",
"teaser": null
},{
"title": "定制 PXE Live 系统",
"excerpt":"现在已经有上百中 Linux 发行版，很多发行版都提供了通过 PXE 启动的 Live 系统。在科大校园网网络启动服务上，我们部署了很多发行版的 Live 系统，例如 Ubuntu、Debian、Deepin、BackTrack、Knoppix 等，既给一些需要维护系统的同学带来了极大的便利，也使得那些未接触过 Linux 的同学可以“无痛”体验各发行版，并决定哪一款发行版更符合自己的口味。然而，随着校园网的发展，大家的需求也变得更加多样化。各发行版的 Linux 系统已经不能满足大家的需求，因此我们需要自己定制一些系统，以满足在学校中各个场合的需求。   发行版 Live 系统的限制   发行版提供的 Live 系统具有这些限制：      数据易失。Live 系统启动后所有的修改都保存在内存中，重启系统后所有修改都丢失了。   预装软件少。Live 系统只预装了很少的软件，不足以日常办公的需求，即使作为体验系统也偏少   各使用场合的需求   目前在校园网中，大家对系统的需求有这些：      体验系统。对于 Linux 新手，要决定是否使用一个系统，一次体验是不够的，需要长期的使用，因此需要能够保存一些对系统的修改，如新装的软件、修改的配置文件、一些用户数据   公共机房的系统，需要安装所有常用的软件   个人移动办公使用的系统，需要能够将一些个人数据存放在网络上   因此，我们希望能够定自己定制 Live 系统，以满足各使用场合的需求。   使用 Debian Live 定制系统   在各发行版中，Debian 提供了定制 Live 系统的工具，Debian Live。Debian Live 的文档中有非常详细的介绍。简化后的步骤为：   sudo apt-get install live-build mkdir live-system &amp;&amp; cd live-system lb config sudo lb build   其中，在 config 前可以自己修改 config 脚本来对 Live 系统的一些属性进行定制，例如 Live 的类型（ISO/PXE/HDD 等）、Live 系统使用的源、安装的软件等。在 build 系统之后也可以chroot到目标系统中进行进一步的定制。这篇文章中有一个稍微详细的定制步骤。使用 live build 可以定制 debian，也可以定制 ubuntu。   然而，这个方法仍然比较麻烦，定制者需要完全从头定制一个系统，并且不能复用一些其他人已经定制过的系统。因此我们推荐选择一个最接近使用需求的系统，在这个系统的基础之上进行进一步定制，而定制步骤也会简洁很多。   基于 Linux Deepin 定制 Live 系统   通过观察容易发现，Ubuntu, Deepin, BackTrack 等 Live 系统都使用相似的方法进行封装，因此基于这些系统进行定制的方法基本相同。而 Deepin 的中国本地化做的最好，也最接近校园网中的各种需求，因此我们选择基于该系统进行定制。   首先观察一下这个 Live 系统的结构：   $ ls -R .: casper  DeepWin.exe  isolinux  md5sum.txt  preseed  README.diskdefines  ./casper: filesystem.manifest  filesystem.manifest-desktop  filesystem.size  filesystem.squashfs  initrd.lz  vmlinuz  ./isolinux: back.jpg  boot.cat  deepin  gfxboot.cfg  isolinux.bin  isolinux.cfg  menu.cfg  stdmenu.cfg  text.cfg  ./preseed: deepin.seed   其中最重要的三个文件是位于casper目录下的vmlinuz、initrd.lz、filesystem.squashfs。vmlinuz和initrd.lz分别是启动是使用的内核和initrd文件，在系统启动之后，会通过 NFS 挂载位于服务器上的这个 ISO 的根目录，然后挂载filesystem.squashfs，接着使用aufs将filesystem.squashfs一段内存挂载为根目录，这段内存空间做为aufs的写分支。   由此可知，我们要定制系统，只需要对这个 filesystem.squashfs 修改并重新打包即可。下面就开始对这个文件修改并打包。   首先挂载这个文件系统，复制一份，并chroot到这个系统环境中：   sudo mount -o loop -t squashfs filesystem.squashfs /mnt/ sudo cp -ar /mnt/ ~/filesystem/ sudo umount /mnt/ sudo mount -o bind /dev/ ~/filesystem/dev/ sudo mount -t proc procfs ~/filesystem/proc/ sudo cp /etc/resolv.conf ~/filesystem/etc/ sudo chroot ~/filesystem/ /bin/bash   此时，我们就已经在这个系统中了，我们可以按照我们的需求对系统进行任意的定制了。注意，直到文中提到退出chroot环境前，所有的命令都是在chroot中完成的。我们在科大，当然首先将 sources.list 修改为使用科大的源了：   sed -i 's/cn.archive.ubuntu.com/debian.ustc.edu.cn/g' /etc/apt/sources.list sed -i 's#packages.deepin.org#debian.ustc.edu.cn/deepin#g' /etc/apt/sources.list.d/deepin.list sed -i 's#packages.linuxmint.com#debian.ustc.edu.cn/linuxmint#g' mint.list apt-get update   这篇文章里我们仅做演示用，所以不打算进行太多的定制，仅演示安装一个新的软件：   apt-get install vim   OK，定制完成啦！我们来重新封装文件系统。首先，退出chroot环境，并且卸载proc和dev文件系统。   exit sudo umount ~/filesystem/proc/ sudo umount ~/filesystem/dev/   然后封装 squashfs 文件系统：   mv filesystem.squashfs old-filesystem.squashfs sudo mksquashfs/ filesystem.squashfs   将新生成的filesystem.squashfs放到原来的位置，并将整个目录通过 NFS 导出。   这篇文章中将不介绍如何通过 PXE 启动这个系统，其方法与 Ubuntu 相同，网上有详细的教程。下一篇文章中，我们将会介绍如何进一步定制这个系统，在开机时，自动挂载科大提供给每个学生的 300M FTP 空间为 HOME 目录，文章中会稍微详细的介绍如何设置 PXE 服务器启动该系统。尽请期待！  ","categories": ["经验分享","USTC 网络启动服务"],
"tags": ["PXE","deepin","live"],
"url": "/news/2011/05/customize-pxe-live-system/",
"teaser": null
},{
"title": "Deepin Linux DAU '2011 大会花絮",
"excerpt":"2011 年 5 月 28 日，我有幸受邀代表中科大 LUG 前往武汉参加了 Deepin Linux 开发者和用户大会。此行遇见了很多开源界的知名牛人，收获颇多。由于许多 Linux 站点都已经对此次会议有十分详细的报导，因此我就不再赘述具体的会议过程，而是更多的介绍些花絮吧。   一些花絮   这次大会主办方是 Deepin 研发团队，主办方接客非常热情周到。由于火车时刻不是很凑巧，当天赶去无法赶上会议，因此提前一天晚上便到了，当天晚上我被安排跟 Hiweed 住在一个房间。晚上，刘总（Deepin）、欣姐还有 Hiweed 与我聊了很多，主要聊了科大 LUG 在高校推广方面的努力和计划，以及我个人的一些想法，另外刘总也跟我聊了 Deepin 的发展计划。聊天开始时，Deepin 说我们的域名可能有问题了，结果晚上他们刚回去，就发现 deepin 的域名都无法解析了……现在新的域名已经生效（http://www.linuxdeepin.net/），网站部分内容还没有完全迁移完成，论坛将从深度的其他内容独立出来，并将在近期上线。   第二天早上，跟 Hiweed 吃早饭的时候，小白（BJGUG 负责人）到了，他吃过简单的早餐，就去一所中学了，与学校的老师讨论学校教育中使用开源软件的事。现在有许多中小学的计算机启蒙教育中都开始用开源软件了，很让人振奋 :-)   去会场的路上，大家在开玩笑。前几天某校长在武大被扔鞋，这次我们请来了比较有争议的袁教授，而且此次会议有很多武大的学生参加，会不会也被扔鞋？要不我们自己安排个人来扔鞋吧，还得安排两拨，互扔，炒作气氛！呵呵，just a joke!   这次会议在君宜王朝大酒店举行，可能前期的沟通不是特别好，在布置会场时碰到了些问题，不过对会议影响不大。最“惊险”的算是那个无线话筒吧，似乎耗电量很大，现场试了一下，就掉了一格电（共三格）了，当时担心会不会讲到一半就没声了。还好，六位嘉宾演讲时，都没出问题，在提问阶段，第二个人开始，话筒就没声了 T.T……   晚上嘉宾自由交流会上，袁教授发完一个长长的言后，就耷拉脑袋了。我和 Hiweed 坐在他旁边，都以为他睡着了，后来有个人讲完话后，袁教授突然接话了！原来他没睡着，就是闭幕养神:-) 袁教授其实很可爱，年纪这么大，依然很有激情。对国内开源事业的发展也很关心，这次大会刚回去，就联系与永中的曹参见面，讨论 Deepin 与永中合作的事，看袁教授最近几天的博文，他对此事一直很上心。   交流会结束后，我们几个年轻人（yanting, Hiweed, Deepin 等）出去吃烧烤，随心所欲的聊天。yanting 和 Hiweed 都是很活跃、很有想法、很会闯的人，我的性格跟他们很像，因此听他们讲故事的时候，共鸣很强，感触很深。Deepin 跟这它的团队一样很年轻，我相信也同样会很有想法、很有活力！   第二天我受邀去武大参观了他们自强网的工作室和机房。同时也交流了一下两校在推广 Linux 时的优势和障碍。武大的学生课余时间相对较多，自强网完全由学生来维护，但他们的资源（网络带宽、服务器配置等）有限。科大有着很好的 Linux 使用的环境，网络条件也非常好，但是大多数学生的课余时间较少。   下午赶去火车站时，由于宾馆在市中心最堵的路段，半天都没打到的，正愁会误点赶不到火车站时，一个小“摩的”（加引号是因为不是摩托车，而是电瓶车，但我想不出用什么词好了 :-P）来了，不到 20 分钟就赶到火车站了。“摩的”小哥自我介绍说是武大食堂的，下午没事做，就出来转转，能赚点钱就赚一点，要过日子阿。小哥很热情，收的钱也不多（应该比打的便宜），很开心 :-)   会场照片   这些是会场上的一些照片。（大家能否给我推荐个显示图片的插件？可以显示图片总数和当前图片编号的？）                                                                                                                                                                                                                                                                                          相关报导   以下是一些特邀嘉宾对此次大会的报导：      Linux Deepin 武汉技术交流会后记（Wayback Machine）（笨兔兔）   Linux Deepin 2011 开发者和用户大会实录（驱动之家）   Linux Deepin 2011 开发者和用户大会实录（Wayback Machine）（OwnLinux.cn）   国产 Linux 发行版面临的机遇和挑战（51CTO）   武汉 Deepin DAU 会议见闻（Wayback Machine）（basic coder）  ","categories": ["LUG 活动"],
"tags": ["deepin","Linux","花絮"],
"url": "/news/2011/06/deepin-linux-dau-2011/",
"teaser": null
},{
"title": "中科大 Linux 文化衫开始接受预定啦！",
"excerpt":"1、圆领样式   此次文化衫主题为 Linux 20 周年。正面图案分男版和女版，图案分别如下：   男版： http://staff.ustc.edu.cn/~jhqi/LinuxTee2011/front_1.6.0.png   女版： http://staff.ustc.edu.cn/~jhqi/LinuxTee2011/front_1.6.1.png   背面图案为科大维护的服务器历史，男版女版相同，图案如下：   http://staff.ustc.edu.cn/~jhqi/LinuxTee2011/back_1.1.png   2、翻领样式   由于许多网友要求提供翻领样式，因此今年也提供翻领样式，翻领的正面图案是将圆领的背面图案放在左前胸，将圆领的正面图案放到后背。效果如下图的最后一行：   http://staff.ustc.edu.cn/~jhqi/LinuxTee2011/polo_sample_1.png   3、价格   圆领的价格为：￥ 45   翻领的价格为：￥ 60   需要邮寄的，需要额外支付￥ 20 邮费。   （科大在校师生、校友请到瀚海星云 Linux 版回帖预定，价格有优惠哦！）   前 20 位预定的友人，我们将在邮寄文化衫时附赠一张 GNOME3 体验光盘。   4、预定方式以及支付方式   您可以通过支付宝向我们支付费用。   我们的支付宝帐号为：lug@ustc.edu.cn，支付流程：                  登录支付宝–&gt;“我的支付宝”–&gt;“我的生活助手”–&gt;“我要付款”–&gt;在“对方支付宝账户”里输入lug@ustc.edu.cn即可。在备注中留下您的姓名，并且向lug@ustc.edu.cn发送一封邮件，标题为”预定文化衫–您的姓名”，内容为您选择的版式（男/女       圆领/翻领）、身高、手机号和详细的收货地址，我们将在 24 小时内回复您的邮件，表明我们已经收到您的付款和预定。           6、时间安排   本次预定从发本日志起到 2011 年 6 月 11 日晚 23 时 59 分结束预定。结束预定后，我们立即联系商家开始制作版衫，并争取一周内完成并开始发放，预计 6 月 18 日可以开始发放工作。发放方式到时候再发日志说明。  ","categories": ["LUG 活动"],
"tags": ["BBS"],
"url": "/news/2011/06/linux-tshirt-2011/",
"teaser": null
},{
"title": "Linux Install Party 又来了，就在本周日！",
"excerpt":"Linux Install Party，一个人人都可以参加的 linux 盛会，Let’s Introduce   Perfection.   如果你是新手，在这里，你可以接触到 linux 最新鲜的感觉，了解基础并且好用的   linux 知识，获得他人的帮助，与 linux 进行亲密接触！   如果你是高人，在这里，你可以认识志同道合的朋友，交流 linux 里好玩的技巧和鲜为人   知的秘密，帮助和当年的你一样的初学者，多么有成就感！   Linux Install Party，就在本周日下午 2:00，3112 教室。   Linux User Group   life, love, linux  ","categories": ["LUG 活动"],
"tags": ["Linux Install Party"],
"url": "/news/2011/12/linux-install-party2011/",
"teaser": null
},{
"title": "软件自由日 SFD 2012 合肥站活动（附带网上直播地址）",
"excerpt":"SFD 就是传说中的软件自由日（Software Freedom Day），今年的合肥站庆祝活动将在本周六（9 月 15 日）于中国科学技术大学举办。这是一个推广和宣传自由/开源软件的全球性庆祝活动，合肥是全球 282 个活动举办地之一。   这里有精彩的讲座：   科大 LUG 前 CTO 张成师兄将让我们了解自由软件在企业中的应用原来如此多娇   这里有好玩&amp;有用的软件：   Linux 上有什么好玩的小游戏？   小小浏览器不就是上网吗？能玩出什么名堂？   放音乐、看视频，mplayer 是何方神圣？   如何画函数图像、分析实验数据？   如何使用虚拟机体验不同的 Linux 发行版？   如何用 latex 排版出专业的文章？   开源集成开发环境 Eclipse，听说很强大？   如何使用科大 FTP 和主页空间？   大家一定会问：这么多东西，能讲完吗？我们的形式将不局限于讲座，而是展示 + 体验 :)   现场将有若干展台，专题讲座结束后，大家可以在不同展台之间自由体验、交流，共同体验各种自由软件的魅力。像不像一个自由软件展览会？   这里有给力的奖品：   有 Meego USB Hub、Meego 电脑包、红旗和自由软件日的文化衫、Ubuntu 贴纸……   还有 Linux Deepin 12.06, Qomo 等 Linux 发行版的官方光碟，一共有 80 张，在多功能厅门口发放，先到先得哦~   承办者：中国科学技术大学 Linux 用户协会   时间：    2012 年 9 月 15 日上午 9:30   地点：    中国科学技术大学西区学生活动中心三楼多功能厅（31.839339,117.253636）   网上直播地址：http://www.fengyunzhibo.com/tv/22107_1347540720168.htm        ","categories": ["LUG 活动"],
"tags": ["LUG","USTC_LUG","SFD"],
"url": "/news/2012/09/sfd-2012-hefei-ustc/",
"teaser": null
},{
"title": "科大 LUG Linux User Party 活动成功举行",
"excerpt":"高速发展的互联网改变着人类的生活方式，而基于 Linux 的 Web 技术支撑起了当今互联网的大厦。“Let’s Build – Building the Next-generation Web &amp; Architecture”的大标题投影在东区水上报告厅，2012 年 11 月 24 日下午，科大 LUG 以“Going Online, Going Native”为主题的 Linux User Party 活动举行。Guide to Node.js，Linux 高性能计算集群，iptables 灵活网络配置，LUG Services 项目启动……内容充实的讲座持续了四个小时，从不同角度讲述了 Linux 在 Web Services、科学计算和我们生活中的应用，描绘了 LUG Services 的美丽蓝图。   首先演讲的是《Node.js 开发指南》作者、清华大学开源软件镜像维护者、清华大学学生郭家宝。JavaScript 技术的进化伴随着多家互联网企业的兴衰，Node.js 是目前最流行的将 JavaScript 用于后端的框架。以往 Web 开发常常是前后端在不同的编程语言中重复写同样逻辑的代码，而在 Node.js 中这样的问题得以缓解。   不同于多数后端技术，Node.js 采用了事件驱动的非阻塞编程模型，这使得 Node.js 可以在单线程中达到其他语言中需要多线程才能达到的 CPU 利用率。借助 V8 引擎的执行效率，JavaScript 已经成为最快的脚本语言之一；再加上异步并发的编程模型，用 Node.js 可以实现很高性能的 Web 服务器，尤其适合需要进行“服务器推”的 WebSocket 类应用。   Node.js 强大的性能背后隐藏着编程和调试的困难，例如通过回调函数来进行控制流传递的编程范式。为此，郭家宝发起了开源项目 Continuation.js，通过编译将嵌套的回调函数平面化，简化顺序逻辑在 Node.js 中的实现。   演讲结束后，同学们提出了“现有系统是否应该换用 Node.js”、“为什么现在 Web 开发用的更多是 PHP”、“Node.js 是否对系统资源消耗很多，是否对硬件配置有较高要求”等很多有趣的问题，郭家宝一一作答，希望我们以更开放的心态迎接新技术。每位提问的观众都收到了一份 Ubuntu 的精美礼品。   第二个演讲的是科大超算中心李会民老师。2012 年世界排名前 500 的超级计算机中，运行 Linux 的占 90% 以上，只有一两台运行的是 Windows 系统，Linux 在高性能计算领域占据统治地位。这场讲座带领我们从 Linux 这个自由的集市中寻找到合适的工具，让身边的计算资源发挥作用。   短短的一个小时，李会民老师以较快的语速，全面讲解了高性能计算集群：   各计算节点要共享文件，有 NFS 网络文件系统；   主机账号信息要集中管理，有 NIS 网络信息服务；   集群要快速安装 Linux，以 PXE 网络启动为基础的 kickstart 网络安装工具很实用；   集群之间时间要同步，有 NTP 时间服务器；   集群节点之间要通信，SSH 可以用 key 无密码登录；   要同时管理多台机器，有 pdsh 这个并行 shell 和交互式脚本语言 expect；   要自动化运行复杂任务，有作业调度系统 TORQUE；   要监控系统性能，有集群监控软件 Ganglia；   内网服务器要访问外网，有 iptables。   并行计算的基本原理，MPI 和 OpenMP 编程框架、GPGPU 计算；   还有磁盘配额、编译环境的配置……   接下来又是一个很多人争着举手发言的互动问答环节。针对一台机器能不能部署高性能计算的疑问，李会民老师说，除了 kickstart 网络安装之外，上述工具都可以在单台机器上使用，而且其中涉及的技术在日常 Linux 使用和运维中也是有用的。   利用五分钟的中场休息时间，李喵喵介绍了 Linux Deepin 这个对新手友好的 Linux 发行版，并现场发放 Linux Deepin 赠送的安装光盘。   第三个演讲的是科大 Linux 用户协会 CTO 郭家华同学。   科大网络通是什么原理？同学们好奇地抬起了头，”数据包传送过程“显得不再枯燥了。   想与同桌共享网络通？用 iptables 进行数据包转发；   那么与整个机房共享网络通呢？有网络地址转换（NAT）；   让外网访问内网端口提供的服务，可以用端口映射；   要端口映射到任意计算机，SNAT 和 DNAT 可以配合使用。   特别值得一提的是，演讲所用 slides 中的网络拓扑结构图是用 graphviz 画的，图形清晰明了。   活动的压轴环节是 LUG 网络服务系统介绍与展望。   李喵喵首先介绍了即将发布的 USTC Blog 服务。尽管社会化媒体层出不穷，但博客仍然是信噪比最高的内容发布平台。在博客中，我们可以发表个人心情，可以制作图片展，可以彰显技术经验，可以作为推广媒体，博客的形式永不过时。USTC Blog 作为 LUG 提供的 Wordpress 博客托管服务，与其他博客服务相比，拥有科大域名（blog.ustc.edu.cn）的权威性和高权重，继承了 Wordpress 插件和主题的高度可定制性，还拥有校内服务的稳定性和安全性。随后 USTC Blog 开发团队李博杰同学介绍了跨博客内容整合和沙盒技术两个后续开发方向，演示了 blog 的注册流程和后台操作。   接下来科大 LUG 李博杰同学介绍了 mirrors 升级计划。mirrors 作为国内教育网访问量最大的开源软件镜像，将成为一个开源项目，发展更多周边产品，提高曝光度和用户参与度。Mirrors Maintainer 和 Mirrors Developer 的开发团队结构让在座的同学们感到耳目一新，期待着在 Mirrors Lab 上一起参与开发与测试。Mirrors 还将增加编程语言的镜像，对访问日志进行统计分析得出热度排行榜和热度趋势。   查找和选择软件包一直困扰着新手，KISS 是 LUG Services 的终极目标。有的软件包不在官方源里，科大 LUG 张光宇同学受到 AUR 的启发，发起了 Yet Another Debian User Repository（YADUR）项目。在 YADUR 中上传包，只需注册账号，然后用浏览器或我们的客户端上传软件包；使用 YADUR 源就像用 Ubuntu PPA 一样简单。针对 Debian 打包困难的问题，YADUR 将提供一个打包教程。YADUR 将成为一个开源项目，它本身就是 YADUR 中的第一个软件包。   YADUR 将解决软件包的来源，而 Linux Software Store 将让 Linux 软件包变得不再神秘难寻。软件分类推荐和搜索让我们找到软件包，软件包详情和用户评论让我们了解软件包，到 mirrors 的链接让我们方便地下载软件包，社会化分享和评论让我们围绕着软件包展开社交。最后，李喵喵为 LUG Services 发出了“We need you”的号召。   整场活动由李喵喵制作的简洁雅致的 slides 贯穿，尽管已经到了饭点但不少同学坚持到了最后。会后，14 名感兴趣的同学在大雅楼参与了 Linux User Dinner（LUD），时而谈起清华与科大的学习生活，时而聊到开源世界的奇闻逸事。高潮迭起的 LUD 持续到了晚上九点，2012 年 Linux User Party 活动在依依惜别中圆满结束。  ","categories": ["LUG 活动"],
"tags": ["Linux User Party"],
"url": "/news/2012/11/ustclug-going-online-going-native/",
"teaser": null
},{
"title": "“Linux 让一切变得简单”活动",
"excerpt":"2013 年 4 月 21 日下午，科大 LUG 与计算机学院学生会合办的“Linux 让一切变得简单”活动在 3121 教室举行。      李博杰首先带来了《OS 和网络从这里走来》(slides)，从 UNIX 操作系统的诞生、兴起讲到 AT&amp;T 的封闭与 UNIX 的分裂，再到 GNU 计划和 Linux 的诞生，回顾了这段波澜壮阔的操作系统进化史。目前，Linux 垄断了高性能计算，并被互联网公司广泛采用，以 Linux 为主阵地的黑客文化还孕育了自由编程语言、开源硬件。从浏览器发展史和 User-Agent 的乱象，引出 Web 开放的趋势。最后，用《大教堂与集市》分析了 Linux 成功的原因。   在随后的互动环节中，回答出问题的两名同学获得了 U 盘。      接下来是郭家华的《Linux 让你更懂计算机》(slides)。首先，他以娴熟的操作演示了从硬盘中恢复被删除的数据，将硬盘 MBR 的结构、“设备即文件”的概念和一些瑞士军刀式的 Linux 命令融入其中。然后，他演示了用 tcpdump 等抓包工具分析网络状况。最后，他以 acm.ustc.edu.cn 评测系统为例讲解了传统程序限制方法的“不靠谱”和用 ptrace 拦截系统调用的沙盒原理。听众们在膜拜技术之余，还体会到 Linux 工具庖丁解牛般的强大。      接下来沈达为我们带来了《可爱的 Python》(slides)。首先，他简短地介绍了 Python 的优雅特征、编程思想和一些好玩的应用。随后由听众提出问题，他来回答。科学计算中 Python 和 Fortran 的比较，从程序语言角度 Python 和 C 的比较，Web 开发中 Python 是否合适……沈达将“程序语言的选择一方面是需求，一方面是兴趣”的观点融入互动问答，从多个角度诠释了黑客文化。   在最后的互动环节中，回答出问题的一名同学和最先提出问题的两名同学获得了 U 盘。活动在大家热烈的讨论中成功结束。   本次活动的所有 slides   本次活动的所有照片  ","categories": ["LUG 活动"],
"tags": ["USTC_LUG"],
"url": "/news/2013/04/linux-make-everything-easy/",
"teaser": null
},{
"title": "2013 LUG 换届会议",
"excerpt":"2013 年 4 月 28 日晚上，LUG 在活动室召开了换届会议。LUG 新老会员齐聚一堂，商定了 LUG 下届主要负责人，一起讨论了 LUG 发展大计。      首先是自我介绍。接下来现任会长、副会长、前任会长分别介绍了一年来的感受与对新一年的期望。然后统计每个人的年级、感兴趣的方向，其间大家纷纷对 LUG 发展出谋划策，气氛热烈。   在活动方面，大家认为，LUG 应该把眼光放到全校，更加关注东区，面向 Linux User，为同学们解决实际需求；而不是成为 Linux Developer Group，昨天考物理、今天维护服务器。在网络服务方面，黄若山提出做贴近普通用户的服务，做得更专业并实现盈利，不过大家认为学校学习紧张，没有时间全力投入；李喵喵再次提出了服务整合和“硬又黑”导航条的设想。      经过反复协商，大家一致推选 2010 级物理学院的张光宇为新任会长，并依据大家的意愿分配了 CTO（技术）、COO（运营）、CPO（资产）、CNO（外联）、CFO（财务）、CIO（宣传）。新一届主要负责人中，2009 级 1 人，2010 级 1 人，2011 级 2 人，2012 级 2 人；计算机学院 4 人，少年班学院 1 人，物理学院 1 人（CIO 孙金鹿除外），梯队较为合理。         换届之后，讨论了即将举办的 Ubuntu &amp; Debian Release Party，下半学期的“USTC 主页大赛”（blog 大赛），LUG 十周年宣传册等。   最后，现任 CTO 郭家华宣布 Mirrors Lab 成立，并为大家开帐号。   参加此次会议的有祝元宠、顾昊、李喵喵、童献、黄若山、李博杰、郭家华、张光宇、沈达、黄震宇、张荣葳、朱晟菁，还有一位妹子。   本次会议的照片在 LUG FTP 的“会议”目录中。  ","categories": ["LUG 会议"],
"tags": ["Meeting","USTC_LUG"],
"url": "/news/2013/04/lug/",
"teaser": null
},{
"title": "2013 科大 LUG Linux User Party",
"excerpt":"2013 年 12 月 1 日，中国科学技术大学校学生 Linux 用户协会在科大西区活动中心学术报告厅举办了一年一度的 Linux User Party。   本次活动主要面向校内学生进行宣传，不仅在在宣传方式上覆盖了大部分常用方式，而且首次推出并免费赠送 Linux 协会纪念胸章，由此吸引了许多同学的参加。活动总共到场大约 70 人。         此次活动我们有幸邀请到了科大高性能计算方面的安虹老师，为大家分享 Linux 系统在高性能计算领域的应用。在演讲结束之后，现场的参与者踊跃地提出自己的疑问，并与 安虹老师交流自己的一些想法。      接着，副会长张荣葳同学为我们介绍 Graphviz 软件的一些入门知识。      然后是 Linux 用户协会的陈张同学带我们一起了解了电脑从按开关到见到 Linux 桌面的细节，在场同学纷纷表收获丰富。   接下来由张光宇同学介绍 Linux 用户协会比较知名的一个服务：Freeshell。为大家讲解 Freeshell 的功能和简单用法。   最后，在同学们激烈的讨论中，本次 Linux User Party 圆满结束。  ","categories": ["LUG 活动"],
"tags": ["Linux User Party"],
"url": "/news/2013/12/2013-e7-a7-91-e5-a4-a7lug-software-freedom-day/",
"teaser": null
},{
"title": "2013 Software Freedom Day 合肥站",
"excerpt":"2013 年 9 月 21 日下午 2:30，中国科学技术大学校 Linux 用户协会在合肥市与全球几百所高校和组织一道，举办了 2013 年软件自由日庆祝活动。   本次活动邀请到了上海 Linux User Group 负责人姚欣宇。他同时也是项目托管平台 GitCafe 的创始人兼 Team Leader。他这次为我们带来的话题是 Git 入门介绍。姚欣宇并不是第一次参加我们协会的活动，在 2011 年的 Linux User Party，我们也曾邀请姚欣宇来为我们分享他的 Linux 经历。   活动的另外一位嘉宾是少年班学院的杨国鑫同学。他是 OpenSUSE 中文社区的活跃成员，同时是 OpenSUSE Guide 中文版的作者。他这次为我们带来的话题是 OpenSUSE 使用经验。   在企业赞助方面，我们得到了如下赞助：      Linux Deepin 公司赞助的 200 张光盘   CrossWeaver 公司赞助的 20 枚价值 128 元的 CrossOver 正版序列号   GitCafe 公司赞助的 20 个马克杯   作为合肥唯一的 SFD 活动，我们在活动之前还联系了安徽大学、合肥工业大学等兄弟院校，让这些学校的 Linux 协会、学生会帮忙进行宣传。   本次活动选择西区学术报告厅为活动场地，大约 130 人参与了我们的活动，现场气氛热烈。   为了能让参与者们加深对各种自由软件的了解，我们精心制作了展板、学习资料等供大家学习。图为现场门口发放学习资料的场景。            首先由上海 Linux User Group 负责人姚欣宇为我们带来《Git 简明入门》：         接下来由杨国鑫同学带来《华丽的发行版——OpenSUSE》      演讲结束之后我们还有现场提问环节：      活动的最后是展示环节。我们选了 6 名同学，每人介绍一种自由软件。他们坐在第一排，每人外接一个显示器。演讲结束的时候同学们可以走过来和他们面对面交流自由软件。      本次活动的成功举行，对于向学生推广和宣传自由软件、开源软件有着重要意义。不仅如此，邀请嘉宾为我们做演讲也可以让同学们开阔眼界。我们 Linux 用户协会始终把推广 Linux 和自由软件作为我们协会的历史使命，并将一直贯彻下去。  ","categories": ["LUG 活动"],
"tags": ["LUG","USTC_LUG","SFD"],
"url": "/news/2014/08/2013-software-freedom-day/",
"teaser": null
},{
"title": "2014 年 8 月 SFD 工作规划暨新学期 LUG 工作会议",
"excerpt":"2014 年 8 月 30 日下午 2:30，一部分 LUG 活跃会员在东区活动室聚会，讨论即将到来的 SFD 活动的安排事项以及其它 LUG 的工作事项。与会人员包括：张荣葳、杨博远、崔灏、张光宇、朱晟菁、李子天、高一凡、罗秀哲。   一.  SFD 相关   SFD 活动定于 9 月 20 日，是开学后第三周的周六。   1. 形式   嘉宾演讲 + 其他演讲者演讲 + 自由软件展示与自由讨论。往年与今年的活动形式都类似这样。   张光宇提出：应当安排使得演讲人数增加，相应的每人的演讲时间压缩。一小时的演讲时间太长，容易导致对某项演讲不感兴趣的同学中途离场。   因此希望：出更多的演讲人数，话题相应增多，从而维持自始至终参与活动的人数。   需做：多找演讲者。应大于等于 5 人。   预期效果：中场休息时间更多。   需做：中场休息时间可以放合作伙伴的宣传内容；与会的同学们私下交流的机会更多。   2. 嘉宾   刘世伟先生，从事 MIPS 开发。   演讲内容以 FOSS 相关为主，演讲包括在平日工作中对自由软件的使用。   需做：之后应当加强与嘉宾联系。   3. 校内   需要找演讲者。邮件列表，SNS，BBS   需做：由杨博远发帖发邮件进行。   各位也需要私下联系一些人做演讲。   例子：对 Ruby 的介绍演讲。   张光宇：可以考虑做/找网站：在线注册提交演讲的网站（有这样的网站才能有人提交申请，想让人发邮件申请还是不太好。）   例如：Pentabarf：debian conf 所使用的平台。管理会议与 event 等。ruby 依赖？自己搭建。   也可考虑强制提交演讲者写 abstract（投稿时）   演讲：谁想讲就讲，25min+10min 讨论   4. 时间安排   工作应当按照以下的步骤来：   确定演讲者和内容—&gt;定出时间表–&gt;给嘉宾定火车票等。   如果有可能，应在演讲内容确定后列出整体活动的时间表，这样可以方便只想听某几个讲座的同学。   5. 拉赞助   总共有 4 家：   CSDN；Deepin；Mozilla；Segmentfault。   张荣葳和李子天参与和赞助方的联系。   最好和他们要海报（即使电子版也行）。我们希望帮他们宣传。   可以大大地打出来合作企业的海报。   目前商谈的进展：   CSDN：给媒体渠道（帮助宣传），小礼品，宣传折页   Deepin：光盘   Mozilla：还没说   Segmentfault：提交公司审核（0830），可能会有一些要求被否决。   6. 文宣，海报   在演讲者定下来后做。海报至少提前一周、持续一周的时间。   7. 场地   注意计划书。杨亚项目（9 月 4 日）批下来？   希望使用西区学术报告厅。   8. 奖品   U 盘   光盘（Deepin）   需做：徽章：特制，一些不同的图案等，有纪念意义   可以考虑：纪念品加上日期：2014,2015,…   给嘉宾的纪念品，要求更有纪念意义。   9. 其它工作   更新 SFD Wiki 与 LUG Wiki 的 SFD 相关内容。   发招募演讲者的通知以及活动宣传通知   等等     二。LUG 本学期工作的讨论   略。完整内容请见 20140830 会议记录。  ","categories": ["LUG 会议"],
"tags": ["Software Freedom Day","USTC_LUG","news"],
"url": "/news/2014/08/2014-e5-b9-b48-e6-9c-88-sfd-e5-b7-a5-e4-bd-9c-e8-a7-84-e5-88-92-e6-9a-a8-e6-96-b0-e5-ad-a6-e6-9c-9f-lug-e5-b7-a5-e4-bd-9c-e4-bc-9a-e8-ae-ae/",
"teaser": null
},{
"title": "2014 自由软件日中国科大站",
"excerpt":"SFD 自由软件日是一个关于自由软件和开源软件的全球性庆祝活动。9 月 20 日下午，2014 自由软件日中国科大站活动与全世界 190 个活动站点一道正式拉开序幕。此次活动宣传充分，准备到位，吸引了许多 Linux 爱好者们参加。   下午 2 时，活动在东区图书馆四楼学术报告厅准时召开。活动有幸邀请到了北京龙芯俱乐部核心成员刘世伟先生。校网络信息中心副主任张焕杰老师出席了活动。活动由大一新生张静宁同学主持。      维护网络繁忙的开源软件镜像站有什么挑战？Linux 用户协会副会长崔灏同学为大家带来演讲《Mirrors 是怎样炼成的》。有了 mirrors 镜像站，在学校使用 Linux 的同学们就可以以极高的速度获取到使用系统所必需的软件。为了应对高并发所带来的磁盘压力，mirrors 服务器上采用了冗余磁盘阵列技术以同时保障数据访问速度与安全性。通过这个演讲，同学们初步了解到了 mirrors 服务器的运行机理，窥探到了协会技术工作的冰山一角。   接下来我们的特邀嘉宾北京龙芯俱乐部核心成员刘世伟先生为大家带来展示《在 Linux 下开发 PCB》。在几乎一切均以电子化的当今世界，集成电路已成为我们生活的基础。目前主流 PCB 开发流程均有闭源的商业软件参与，刘先生展示的 gEDA 软件使大家眼前一亮。原来集成电路开发也可以开源！      说起数学计算软件，大家脑海中首先浮现的会是 Matlab、Mathematica 等闭源软件。数学计算能不能开源？Linux 用户协会资深会员阴钰为大家带来演讲《Sage：集大成者》。Sage 整合了目前流行的各种开源计算库，并给它们提供了一套统一的 Python 接口。Sage 的功能非常丰富，符号计算、数值分析、组合数学、统计分析，应有尽有，只有想不到，没有做不到。不少同学对其表示出极大兴趣。      智能手机操作系统并非仅有 Android、iOS、Windows Phone 三种。新兴力量在开源界不可小觑。Linux 用户协会前会长张光宇同学的《Firefox OS 移动应用开发入门》在移动领域为大家带来了新奇的体验。有了 Firefox OS，编写移动端应用程序不需要什么高深的知识。只要会写现代网页，一款移动应用即可新鲜出炉。   互联网上信息瞬息万变，无数的黑客觊觎着用户的个人隐私。面对如此，我们唯有用技术武装自己。Linux 用户协会会长张荣葳为大家带来演讲《比安全更安全——GnuPG 简介》。GnuPG 使用经典的非对称加密算法，有效地防止数据在非安全信道传输的过程中被窃取。与基于 CA 绝对可信性的 SSL/TLS 不同，GnuPG 实现的 PGP 使用信任网来推断一份公钥是否属于它所声称的实体。许多同学表示对网状的信任关系有兴趣。      在第二个演讲结束以及全部演讲结束时，我们有抽奖环节。在演讲后提问以及抽到幸运数字的听众均获得了由合作公司赞助的小奖品一份。      感谢 Mozilla、CSDN、Deepin 与 SegmentFault 公司对活动的大力支持。最后，活动在大家热烈的讨论中成功结束。  ","categories": ["LUG 活动"],
"tags": ["Software Freedom Day","SFD","news"],
"url": "/news/2014/09/2014-sfd/",
"teaser": null
},{
"title": "2014 秋季学期会员大会",
"excerpt":"2014 社团招新业已结束，为了让新生更好地了解社团情况、增进社员间相互交流，Linux 用户协会于 2014 年 9 月 26 日晚在西区 3A203 教室举行会员大会，邀请所有新会员参加。   晚 7 时，大会开始。会长张荣葳代表 Linux 用户协会热情欢迎到会的新会员。      副会长杨博远同学详尽介绍了社团的发展历史、活动概括以及技术成就。他有姿有味的讲解吸引了台下所有人的目光！      第三位登场的是分管技术的副会长崔灏同学。杨博远同学的介绍已经非常详尽了，没事做的崔灏同学就带着大家“参观”了一下由协会维护的各个站点和网络服务，包括科大开源镜像站、科大 Blog、图书馆查询机系统等。      接下来，会长张荣葳同学介绍了到场了的本届和往届协会负责人，其中包括：现任 CPO 张恒若、现任 CIO 尤淼、2013 届会长张光宇、2012 届会长李博杰。      大会现场气氛热烈，欢笑声不断，展现了 Linux 社区的和谐与快乐。   大会后，依然有许多新会员踊跃地向协会负责人提问问题。最后，协会还组织新成员参观了 LUG 在西区和东区的活动室。  ","categories": ["LUG 活动"],
"tags": ["LUG","news"],
"url": "/news/2014/10/2014-autumn-kaiintaikai/",
"teaser": null
},{
"title": "2014 Linux User Party 暨 Freeshell 用户交流会",
"excerpt":"2014 Linux User Party 暨 Freeshell 用户交流会，于今年 12 月 7 日（周日）14 时 30 分，在西活学术报告厅成功举行。      本次活动以“Freeshell 用户交流会”为主题。Freeshell 上线于 2013 年 1 月，是科大 LUG 利用少院的废旧服务器搭建的 Linux 虚拟机（VPS）平台，供科大师生免费使用，可以用于开发网络服务、搭建个人主页、挂机编译、跑实验程序等等。      本次活动由会长大人张荣葳亲自主持，并有幸请来了 4 位讲者：      科大云框架设计者 王硕博士 —— 《什么是云计算》   LUG 资深会员 高一凡同学 —— 《Docker 的简介与进阶》   iCard 作者 王译锋 —— 《现场计算来宾学霸指数》   LUG 活跃会员 阴钰 —— 《部署一个网页聊天室》      本次活动有近百名同学参加。主办方 LUG 的小伙伴们更是精心准备了奖品，现场还有小零食可以吃。      近年来云计算的概念越来越火，云计算是继 1980 年代大型计算机到客户端 - 服务器的大转变之后的又一种巨变。中国科大云是校网络中心一项给科大师生提供虚拟机的服务。而王硕博士以一个科大云框架设计者的角度，给我们介绍了云计算的特点以及科大云搭建过程中用到的技术。他指出，云计算主要提供强大的计算能力和海量的存储能力，并具有可靠性、可扩展性和灵活性的优点。而科大云搭建过程中的关键技术讲解更是十分专业。      第二位讲者的演讲主题——Docker 是一个开源项目，诞生于 2013 年初。Docker 项目的目标是实现轻量级的操作系统虚拟化解决方案。高一凡同学对 Docker 颇有研究，他现场演示了 Docker 的种种用法，让我们看到用户操作 Docker 的容器就像操作一个快速轻量级的虚拟机一样简单。      由于前两位讲者都讲了比较长的时间，这次活动没有中间休息。   接下来演讲的是 iCard 作者王译锋，iCard 是一款提供一卡通消费分析的产品。与前面两个演讲相比，《现场计算来宾学霸指数》的主题听起来就十分吸引人。王译锋利用 iCard 上面收集到的同学们的一卡通消费信息，根据同学们每天吃饭是否规律来判断同学们是否学霸。当然判据是否准确不重要，重要的是他现场循序渐进地展示了如何利用学校 ecard.ustc.edu.cn 提供的 API，使用 Python 和 bootstrap 框架快速搭建一个网站应用，以及数据分析对改善我们生活质量的无限潜力。      阴钰同学是 LUG 的活跃会员，他在短短 30 分钟内演示了自己是如何在 Freeshell 利用 Python 的 Tornado 框架开发一个 Web 网络聊天室。同学们对他搭建的网络聊天室十分感兴趣，纷纷在上面吐槽，借着投影仪现场掀起了聊天狂潮。      每个演讲结束都会有问答环节，主办方给提问的同学们准备了精美的小礼品。我们还给优秀讲者赠送了采用 SLC 存储芯片的 16G USB 3.0 高速 U 盘。      最后，本次 Linux User Party 在接近饭点的时候才结束。同学们对 LUD 热情很高，有十几个小伙伴参与了晚上的 LUD ( Linux User Dinner)。   2014 Linux User Party 暨 Freeshell 用户交流会 圆满成功，希望未来在 Freeshell 上面有更多有意思的项目。   友情链接：   https://freeshell.ustc.edu.cn/   https://www.docker.com/   http://cloud.ustc.edu.cn/   http://icard.ustc.edu.cn/   https://ychat.freeshell.ustc.edu.cn/  ","categories": ["LUG 活动"],
"tags": ["news","LUP"],
"url": "/news/2014/12/2014-linux-user-party/",
"teaser": null
},{
"title": "Blog 服务器宕机",
"excerpt":"由于维护人员失误与遭受攻击，Blog 服务器于 2014 年 12 月 18 日凌晨宕机，已基本恢复服务。   受影响的服务包括 lug vpn，freeshell 网页前端，freeshell HTTP 反向代理，ssh.freeshell.ustc.edu.cn，部分校内网站 HTTP 反向代理，ustc blog 服务，字体代理服务，自建递归 DNS 服务，archive.lug.ustc.edu.cn，lug 官方邮箱邮件转发等。freeshell 各个计算节点未受影响。   我们近日将在 servers.blog.ustc.edu.cn 上给出一份本次宕机的技术细节。由于时间仓促，如果您发现有哪些服务仍然存在 Bug，请及时向我们反映。   给您带来的不便，敬请谅解。  ","categories": ["LUG 服务"],
"tags": ["server"],
"url": "/news/2014/12/blog-server-down/",
"teaser": null
},{
"title": "2015 LUG 社团换届会议",
"excerpt":"2015 年 4 月 25 日晚 19 时 30 分，校学生 Linux 用户协会于东区活动室（科大东区图书馆 118 室）召开了换届会议。   首先，2014-2015 届社长张荣葳同学为我们简要总结了过去一年社团的发展与活动情况。过去一年里，社团组织过许多次有影响力的活动，如广场知识问答、自由软件日活动、Linux User Party、女生节特别活动、LaTeX 专题讲座等，提升了社团影响力；也经历了许多变迁与挑战，如活动室迁移、各种服务器宕机事故等。期间，技术方面也取得了进步，如暑假期间对 mirrors 服务器的在线维护与修理，其它服务器的维护，cuihao, zhsj, gaoyifan 等技术骨干的努力，也诞生了一批基于 freeshell 的应用成果，如南七书库、icard、选课查询系统等，激发了同学们的编程热情，也对开源软件与开源精神作出了宣传与普及。LUG 取得了一定的成就，挖掘出了一批有技术实力的新人，也吸取了各类教训与经验。展望未来，外部环境的变化带来了许多未知数，需要社团继续进行发展与改革。   会议第二部分进行了社长与副会长的更替与选举。上任会长张荣葳决定加入校社团管理指导委员会并卸任会长职位。张荣葳同学向到场同学介绍了社长与副社长的职务工作内容：社长应统筹规划社团发展，掌握社团历史，规划社团工作，分发工作，与管指委与团委进行联络（政治资源、资金、等等）。副社长应辅佐社长处理工作，进行事物分派并完成各种具体的工作。   上任副社长崔灏同学决定参选社长职务。崔灏同学作了竞选演讲，称自己作为副社长工作一年，比较了解社团工作；作为上一届 CTO，技术水平较好，对服务器维护了解，有能力担任社长工作。   副社长职位上，崔天一、左格非、杨博远、张静宁四人参选。经过讨论，与会人员决定选出三位副社长。四位候选人均发表了竞选演讲。   之后进行了一人一票的选举投票，其结果如下：      选出崔灏同学担任新一届社长，张静宁、杨博远、左格非同学担任副社长。            图为崔灏同学发表就职感想。   第三部分讨论了社团各种 O(“Officer”) 的人选。经自我举荐，确定高一凡同学担任 CTO 职位，崔天一同学担任 CFO，尤淼同学主动承担了整理 LUG Wiki 和 LUG FTP 的工作，其余人选待定。   之后，大家讨论了 LUG 近期的发展与工作事项，包括版衫制作与白帽子大赛的准备以及相关小聚的举办问题，气氛热烈。邓云天同学代表管指委对新一届领导人员就任表示祝贺，希望大家能够共同努力办好社团，使 LUG 更上一层楼。   与会人员包括崔灏、崔天一、邓云天、高一凡、何旭东、李博杰、沈达、王皓、于天泽、尤淼、杨博远、祝元宠、张恒若、左格非、朱晟菁、张荣葳、张静宁、郑子涵等（名单暂有遗漏，请联系 LUG 进行补充）。其中，邓云天委员助理作为校社团管理指导委员会的代表参会监督。      会后，相关人员还就感兴趣的问题进行了讨论。      本次会议照片上传至 LUG FTP“会议”文件夹中。  ","categories": ["LUG 会议"],
"tags": ["Meeting","USTC_LUG","news"],
"url": "/news/2015/04/2015-lug-election/",
"teaser": null
},{
"title": "2015 瀚海星云 BBS 板板衫方案",
"excerpt":"版衫设计方案征集帖：   http://bbs.ustc.edu.cn/cgi/bbstcon?board=Linux&amp;file=M.1430644311.A   往届版衫方案：   https://lug.ustc.edu.cn/wiki/lug/banshan   活动流程：征集设计方案 → 投票确定设计方案 → 版衫预定 → 版衫发放   版衫方案   目前有 3 位同学投稿（zhaochi、ewind、JennyZhang @BBS）他们可以免费获得今年的版衫一件；现在，一共有 7 种设计方案，如下：   方案一   作者：zhaochi 图片：正面图      方案二   作者：JennyZhang 图片：正面、背面效果图，正面、背面图   github commit style               方案三   作者：ewind 图片：正面效果图      方案四   作者：ewind 图片：背面效果图      方案五   作者：ewind 图片：正面效果图      方案六   作者：ewind 图片：背面效果图      编者注：这个背面图打印的面积比较大，可能需要 3 个版….   方案七   作者：ewind 图片：正面效果图      投票链接   http://www.sojump.com/jq/5057174.aspx   关于底衫与订购商店   底衫由于选择的范围很大，质量价格各种因素很多，工作人员将尽量挑选好的底衫（就不投票决定了，因为目前也没有筛选出来）。底衫样式和颜色会在预定的时候给大家挑选，订购商店我们还在挑选中，有靠谱的、有经验的同学欢迎给我们推荐好的店铺。   欢迎回复本文吐槽。  ","categories": ["LUG 活动"],
"tags": ["版衫"],
"url": "/news/2015/05/2015-linux-user-group-banshan/",
"teaser": null
},{
"title": "投票结果",
"excerpt":"这次版衫制作，征集到的设计方案 最后的投票结果是：   (A) 方案一                  5 票 约占  3% (B) 方案二                 36 票 约占 23% (C) 方案三                 43 票 约占 27% (D) 方案四                 13 票 约占  8% (E) 方案五                 11 票 约占  7% (F) 方案六                  6 票 约占  4% (G) 方案七                 22 票 约占 14% (H) 方案八：重制2010年版衫 16 票 约占 10% (I) 方案九：重制2011年版衫  5 票 约占  3% (J) 方案十：重制2012年版衫  5 票 约占  3%  投票总人数 = 99 人 投票总票数 = 158 票      2015 版衫效果图   根据投票结果，今年的版衫采用方案三和方案四的组合，经过和商家、设计作者 ewind 的交流，最后的版衫设计稿是这样：                     有两点需要注意：   1、由于正面图案的问题，这次版衫主要为深色系列，为了适应白色的底衫，我们把图案做了处理。所以，现在除了白色底衫，其他的四种颜色图案都是白色的。   2、考虑到制作成本的因素，白色底衫我们只会选一种（也就是说白黑和白蓝选一种来印），根据两款衣服最后预定人数多少来决定。   版衫预定方式   版衫定价：50 元   预定截止：2015-6-3 23:59   版衫预期到手时间：6.12（大四党你们来得及吧？！）   预定方法采用：   第一步：TEEKER 网站预定（款式、颜色、尺寸、数量、快递方式）   第二步：支付宝付款到 LUG 负责人账号（并注明订单号、姓名）                  支付宝账户名称       姓名       验证特点                       cuihao.leo@gmail.com       崔灏       头像标有“panda photography“字样           预定链接：   http://www.teeker.com/openstore（我们真的有 5 种颜色，第一个类里有 5 种颜色，你好好找找！）   特别说明（一定要看）：   1、【颜色问题】我们一种有 5 种颜色！下图最右边有四种可选颜色      2、【快递问题】   A）如果你不在科大，可以在 TEEKER 网站预定时候，务必填上真实的地址，版衫将从制作商直接快递给你们（而不用寄回科大）。运费参考 TEEKER 网给出的。   B）如果你在科大，在 TEEKER 网站预定时候，直接选 中科大 Linux 用户协会免费配送。那么你将无需登录，配送方式记得选【免费配送】。         3、【尺码问题】   尺码参考 TEEKER 网上的尺码说明（购物过程中大家自然会看到），我们提醒大家不要订太大的码，比如你很高但比较瘦，推荐你选小一些的码。可以参考你平时买的衣服。   4、【付款问题】   支付到 cuihao.leo@gmail.com 支付宝账号，并且备注上：订单号、姓名，   支付到 cuihao.leo@gmail.com 支付宝账号，并且备注上：订单号、姓名，   支付到 cuihao.leo@gmail.com 支付宝账号，并且备注上：订单号、姓名，                  支付宝账户名称       姓名       验证特点                       cuihao.leo@gmail.com       崔灏       头像标有“panda photography”字样           因为很重要所以说三遍，转账之后才能算完成预定（因为 TEEKER 那边我们没法区别是真预定还是刷票 233)   版衫价格说明   （不关心价格的同学可以不用看）   版衫的价格主要由：底衫、制版费、印刷费来决定   我们采用的是：丝网印，因此需要制版   1、底衫：本次版衫底衫价格较贵，TEEKER 家其实给出一些便宜的底衫，20 元、30 元的，但是我们考虑到质量问题，我们选择了卖的最好的 A01 款。这款底衫给出的价格是 50 元/件，考虑到我们订购的数量大概在 100-200 件，底衫价格可以有所便宜。   2、制版费：制版费是一处位置、一种颜色需要一个板，一个版要 50 元，如果印刷的大于 100 件，厂家就不收我们的制版费。举个例子，黑色、藏青色、蓝色、绿色的版衫正面反面的图案都是相同的（且都是白色），所以只需要正面一个版、反面一个版，100 元制版费。如果这四种颜色的版衫订购超过 100 件，就可以不收制版费。然而白色的版衫，正面图案有两种颜色，所以需要两个版，假设背面的颜色，一共 3 个版（这也是为什么我白黑和白蓝只选择一种颜色来印的原因，否则又多好几个版）。   3、印刷费：印刷费是一处位置一种颜色一块钱，所以一件白色衣服印刷费是 3 元，其他的颜色是 2 元。   这么算，其实白色衣服好贵….但由于大家认为白色比较经典，不可或缺，我们仍然做白色供大家选择。   除此之外还有税费、制作加急费等等（我们这两点目前都没有考虑）   所以，版衫价格定为 50 元，最后的价格大概也和这个差不多（还要由预定数量决定，否则制版费要每件衣服平摊，所以我们现在也不知道确切的价格）。   如果最后我们能把每件版衫的价格砍得更低（大概也就几块钱），多余的钱将加入 LUG 的活动经费当中。   要知道 LUG 定做版衫也是很累的事情，需要项目负责人和设计作者投入很多时间，另外我们还需要给设计投稿者每人提供免费的版衫一件，给投稿采纳的 ewind 同学免费的版衫两件。   以上只是解释为什么我们版衫定价为 50 元，希望大家理解。   快来订购吧！http://www.teeker.com/openstore  ","categories": ["LUG 活动"],
"tags": ["news","版衫"],
"url": "/news/2015/05/2015-linux-tshirt-voting-result-and-order/",
"teaser": null
},{
"title": "5 月 30 日服务器宕机说明",
"excerpt":"blog 服务器于 5 月 30 日凌晨起宕机。目前技术人员正在尝试修复，暂时没有修复 ETA。您的博客数据均有备份，暂时无需担心数据丢失问题。   宕机影响范围包括科大博客服务、Freeshell 控制节点与网络控制面板、LUG VPN 防污染 DNS 等。Freeshell 工作节点暂未受到影响，您仍然能够远程登录虚拟机。   其它服务器可能受到影响；我们正在评估影响范围与严重性。  ","categories": ["LUG 服务"],
"tags": [],
"url": "/news/2015/06/201406-server-fault-announce/",
"teaser": null
},{
"title": "GitLab 服务器紧急维护通知",
"excerpt":"接到用户反馈，无法 git clone 项目。   我们发现 GitLab 服务器文件系统损坏。   目前暂停了 GitLab 服务，正在紧急维护中。  ","categories": ["LUG 服务"],
"tags": [],
"url": "/news/2015/06/gitlab-emergency-maintenance/",
"teaser": null
},{
"title": "mirrors.ustc.edu.cn",
"excerpt":"科大开源软件镜像服务正常。   lug.ustc.edu.cn   目前正常运行的服务包括 LUG Wiki、lug.ustc.edu.cn/sites/*。即日起 LUG 博客（https://lug.ustc.edu.cn/blog/）恢复服务。   LUG FTP 尚未正式恢复。如有迫切需求，请使用 ftp://backup.ustclug.org，使用方法与先前 LUG FTP 相同。   9.3 补充：LUG FTP 现已回复。请使用ftp://ftp.lug.ustc.edu.cn。现在 LUG FTP 部署在 donut 机器上。   freeshell.ustc.edu.cn   目前服务恢复面临技术问题：上游基于 3.10 内核和 CentOS 7 的 OpenVZ 部署方案仍不成熟，故当前处于等待上游开发的阶段，暂无恢复时间表。   8.21 补充：如有熟练运用 OpenVZ 或了解内核调试相关技术，有能力且愿意协助项目解决 bug 的同学，欢迎投简历至 lug (at) ustc.edu.cn 了解并参与项目开发，感激不尽   9.3 补充：目前 bug 修复有所进展，开发正缓慢进行。   blog.ustc.edu.cn   科大博客已恢复服务。如果使用出现问题，请向我们反映。   Time Machine   Time Machine 服务暂时关闭，是否恢复未定。   Google 字体反代   暂未恢复，何时恢复未定。   8.23 更新：服务已恢复。   网络启动服务   已排除先前出现的已知问题。   如果在使用服务中出现问题，或者有愿意继续开发相关服务的同学/老师，请联系我们。   Git 代码托管   现正常服务中。  ","categories": ["LUG 服务"],
"tags": ["USTC_LUG","server"],
"url": "/news/2015/08/lug-service-restore-status/",
"teaser": null
},{
"title": "LUG 版衫制作手册",
"excerpt":"上学期 5 月 3 日到 6 月 15 日制作了 LUG 2015 版衫，前后花了一个多月的时间，感觉做版衫真是一件十分耗费时间精力的大活动。第一次负责 LUG 版衫的制作，总结一下一个月的工作。主要流程如下，我们逐一讲解。   方案征集 → 版衫投票 → 协商定稿 → 版衫预定 → 统计制作 → 版衫发放 → 售后服务   方案征集   方案征集前一般要策划时间，一般我们都是毕业季做版衫，6 月中旬前要把版衫发出去，需要提前一个半月开始准备。因此版衫征集，五月初就应该发帖了。   发帖要求：这是版衫制作的第一个贴子，需要介绍活动流程，让关注版衫制作的同学知道接下来都要发生什么。其次，发帖主要目的是征集版衫设计方案，因此需要写清设计要求、投稿方式、方案如何选择，另外给投稿者的奖励也十分必要，最后附上往届版衫设计图给大家开脑洞。   注意事项：要求投稿者提供版衫正反面，如果只提供正面图像，背面视为空白。   要做事情：BBS 发帖，各种社交平台宣传   建议时间：建议版衫征集时间为 14 天   版衫投票   版衫方案征集结束后，应该尽快整理版衫方案，为投票做准备。征集到的方案，列出采纳的方案、作者、图片。选择一个投票平台进行投票，注意每个投票的方案都应该包含正反面（无论反面是否空白）。   要做的事情：整理版衫方案发帖，发起投票，各种社交平台宣传   建议时间：整理方案、制作投票时间 1 天，投票时间 6 天   卖家协商   版衫方案确定之后，需要尽快定稿。首先，我们需要寻找一家为我们制作版衫的卖家。并根据卖家的要求提供设计图文件，因此必不可少要和联系设计作者。因为，有时根据底衫颜色还需要提供不同颜色的图案，所需的图片大小等，都需要设计作者提供。   其实应该之前就开始寻找卖家，需要根据底衫样式、质量、价格、颜色、制作时间等因素综合考虑。   和卖家定稿之后，需要把大致价格定下来，因为版衫的最终价格和制作数量、印制板数也有关，这个只有等预定结束之后才知道。而预定之前又必须告诉同学们版衫多少钱。所以必须定价建议比卖家给我的价格高一些。这次卖家跟我说大概一件 47 块，我们定价 50。但就社团全部的付出来说，建议定价再高 10 元，因为需要奖励版衫给投稿的人，也需要库存一些之后卖，多的钱可以作为社团经费。   要做的事情：寻找卖家、联系设计作者、与卖家协商好版衫定稿、定价   建议时间：多方联系到版衫定稿建议 2 天   版衫预定   在版衫预定发帖前，需要确定预定的方式。考虑到短信、邮件预定我们需要自己统计，建议采用发问卷、或者在线预定平台预定。因为具体每个预定都涉及到很多参数，如衣服尺码、颜色、款式、预订人姓名、联系方式、是否快递、地址等等。另外，我们是预定即付款，否则我们需要垫 1 万元左右。   由于版衫预定数量决定了版衫的制作量/销售量，我们需要重点宣传，因此需要制作海报、传单来提高预订数量。在预定期间，一定要多宣传，天天刷存在感。   另外，需要单独联系当初给版衫投稿的人，问他们预定信息。   发帖要求：我们把投票结果公布和版衫预定说明合在一个帖子里。首先我们需要在帖子里公开版衫投票的结果，具体的公布每个方案的得票数。然后，把和卖家商量好的版衫设计稿展示出来，有几种颜色，是否分男女款说明清楚。还需要说明预定方式、预定时间、付款方式、预计到货时间。   要做的事情：决定预定方式、发帖、各种社交平台宣传、做海报传单   建议时间：7 天   统计制作   版衫预定结束后，需要和卖家确认各种颜色、尺码、款式制作的数量。除了已经预定的同学，我们还需要库存 10-20 件版衫下学期给卖给新生、或者作为活动奖品。库存的版衫颜色、尺码、款式可以参考预定的数据。此时需要交一定比例的预付金额，因此需要和买家确认最终的总价格。需要统计的可能会涉及各种预定信息，包括是否交钱。也要问清楚多少天可以拿到版衫。   确定后，版衫即投入制作。   需要做的事：统计预定信息、和卖家协商确认、付预定金额   建议时间：统计确定信息 1 天，版衫制作 12 天   版衫发放   版衫方法前必然是卖家把版衫寄过来，那么收快递的时候就要确认卖家是否寄了正确数量、款式的版衫。这次每件版衫上都贴有预订者姓名小纸条，是卖家已经贴好的。友情提示快递比较重，需要两三个人一起去取。遇到数量不对还需和卖家联系，建议版衫差不多全发出去之后再给卖家付尾款。   版衫发放前需要发帖，提前到发放点准备好版衫，领版衫需签收，2、3 个人一起去发放即可。建议集中一个小时内发版衫，之后需要自行来活动室取。   要做的事情：收快递验货、发帖、宣传、发放版衫、付尾款   建议的时间：1 天收快递验货，1 天发放版衫。   售后服务   版衫发出去之后，总有人大小不合适什么的，让他们自行交换，因此在 BBS 上面发一个版衫问题反馈帖子，集中交流。   需要做的事情：发帖、协调   建议   总共算下来，版衫征集到版衫投入制作需要 31 天时间，再到版衫发放需要 14 天。一共一个半月。   由于我们做的是 BBS 板板衫，主要信息更新平台是 BBS，另外邮件列表、LUG 博客、人人网、QQ 空间等也该同步更新。   人员分工建议有 5、6 个人，每人负责以下一块：      BBS 发帖、发起投票   各大平台转发宣传、海报传单设计   寻找卖家、卖家协商   收钱、记账   取快递、版衫数量统计、发放版衫   最后，LUG 版衫专页链接：https://lug.ustc.edu.cn/wiki/lug/banshan   以及 LUG 2015 版衫制作过程中发的所有贴子链接，供参考！   BBS: 方案征集 &amp; 版衫投票 &amp; 版衫预定 &amp; 版衫领取 &amp; 问题反馈   LUG 博客：方案整理 &amp; 预定说明   投票链接   LUG 主页 banner：      BBS 进版 poster：     ","categories": ["LUG 活动"],
"tags": ["版衫"],
"url": "/news/2015/09/lug-banshan-commission-guide/",
"teaser": null
},{
"title": "2015 软件自由日中国科大站",
"excerpt":"2015 年 9 月 19 日是第 12 个软件自由日。当日下午，中国科大学生 Linux 用户协会在西区活动中心学术报告厅举办了软件自由日科大站庆祝活动。共有超过 100 位科大及社会人士参加了本次活动。   这是协会连续第六年承办软件自由日中国科大站活动。本次活动中，我们很荣幸地邀请了两位嘉宾进行自由软件主题演讲，他们是在红帽中国从事内核工程师工作的科大校友叶超先生，和对科学数值计算有着丰富的了解的物院 13 级的罗秀哲同学。协会指导教师张焕杰老师和社团管指委的张荣葳同学也参加的本次活动。   下午 2 时许，活动还未开始，同学们就已经陆续进入会场西活学术报告厅。我们向参加活动的同学发放了 Linux 系统体验光盘、笔记本、贴纸等精美纪念品。同学们对于本次活动表现出了极大兴趣，不断有同学向工作人员了解演讲内容和活动流程详情。甚至有来自合肥其他兄弟院校的同学，也慕名来到科大参加本次活动。      下午 2:30，学术报告厅已经几乎坐满，还有同学在源源不断地进入会场。在主持人张静宁和协会工作人员的组织下，活动正式开始。   叶超先生首先为科大同学带来了《从红帽工程师的角度看开源》主题演讲。他从开源的意义谈起，生动地解释了开源的精神和理念；又结合开源项目实例，展示了当前席卷软件业的开源潮流。最后，他结合自己的工作，解释了开源巨头红帽公司是如何同开源社区展开良好合作的。演讲中，叶超先生多次和同学们互动问答；演讲后，同学们更是不断积极地提问。现场气氛十分热烈。      中场休息时，我们播放了由协会前辈张成学长和李博杰学长拍摄的小短片。学长们对协会的发展做出了很大贡献，也对协会有着浓厚的感情。他们特意拍摄了这些短片，希望通过自己的解说帮助新成员了解校学生 Linux 用户协会这个大家庭。随后，协会副会长左格非同学为大家带来了《自由软件新闻吐槽》小演讲。十分钟的演讲中，他从几个著名开源软件发布的重大更新谈起，带领同学们纵览过去一年中自由软件的大事记。   接下来，罗秀哲同学带来了《Julia——科学计算的银弹》主题演讲。Julia 是一门新兴的高性能数值计算语言，也是一个蓬勃发展的自由软件项目。罗秀哲同学结合自己的科研经历，介绍了 Julia 的优势和发展前景，向同学们大力推广这一自由软件。他还表达了自己希望在科大乃至中国建立起 Julia 中文社区的想法，希望同学们发扬自由软件精神，为 Julia 的发展群策群力。最后，他邀请了同样是 Julia 语言活跃推广者的科大物院 12 级的徐浩同学来到台上，为同学们介绍了 Julia 的社区发展。现场气氛十分活跃。      两场演讲后，活动进入了尾声，但最后的抽奖活动又将现场气氛推向了一个新的高潮。我们安排了有趣的名片交换活动，每位参加者都事先收到了一张他人填写的名片。抽奖时，每位中奖者不仅收到一份自己的礼物，还要将另一份礼物亲自送给收到的名片上的同学。我们希望抽奖活动带给同学们的不仅仅是奖品，更是一份崭新的友谊。      活动结束后，徐浩同学还用自己的无人机为参加活动的同学拍摄了特别的合影。我们对徐浩同学别出心裁的彩蛋表示感谢。   本次活动受到了各大开源社区和企业的支持，中国科大学生 Linux 用户协会对这些单位的支持表示由衷的感谢（排名不分先后）：      云端开发平台 Coding 为活动提供了抱枕、图书、贴纸等精美纪念品；   Canonical 提供了 Ubuntu 主题的笔记本、贴纸等小纪念品；   红帽中国和 Fedora 中文社区提供了 Linux 系统体验光盘、奖品 U 盘、服饰等活动物资；   深度科技提供了 U 盘、图书等纪念品。  ","categories": ["LUG 活动"],
"tags": ["SFD"],
"url": "/news/2015/09/2015sfd/",
"teaser": null
},{
"title": "2016 LUG 社团换届会议",
"excerpt":"2016 年 4 月 24 日下午 15 时，校学生 Linux 用户协会于东区活动室 (科大东区图书馆 605 室) 召开了换届会议。   首先，为了活跃气氛，2015-2016 届会长崔灏同学向大家展示了 android 6.0 的新功能：USB MIDI 输入，将手机接到电脑的虚拟键盘上之后弹出了优美的旋律。   步入正题，崔灏同学总结了过去一年的社团情况。比如举办了 Linux Install Party，白帽子大赛，服务器遭受大规模攻击等等。然后由本届 CTO 高一凡同学总结了技术工作。在这一年中用捐赠获得的 6 台服务器中的 4 台搭建了 Vmware vSphere 集群并把许多服务 (gitlab, mail, vpn, 防污染 dns 等) 迁移到它上面，还有对一些服务进行了 docker 化 (典型的是 gitlab 和 lug ftp)。此外，仍有一些项目处于开发缓慢或停滞状态如 vpn、统一认证、freeshell。   下一项内容，由崔灏同学介绍了今年的候选人政策。本年度社团换届要求社团换届先上报候选人名单，由管指委组织培训和考试，合格通过方能成为社团负责人。本社团共上报三名候选人但最终通过的只有崔天一一人。   为选举做准备，到场的每位同学都做了自我介绍，除了让大家进一步熟悉一下之外，还要交代个人愿意在下一学年中为社团做些什么，承担什么样的任务。每个人自我介绍完了之后现任会长还根据平时的接触补充了一些评价。            会议最后一项，进行选举，今年的选举形式有些变化，虽然只有一位候选人通过了管指委的考试，但并不能只指定一人作为负责人。所以这一次到场的每个人都是候选人。大家根据之前其他人的自我介绍对心目中下一任 LUG 负责人进行匿名投票。最后根据唱票结果，包括唯一被管指委方面承认的会长崔天一在内，会议共选出了 4 位负责人，分别是左格非、崔天一、曾键、郑子涵。之后当选的 4 位负责人分别发表了当选感言。按照惯例还应确定下一届的各种 officer 人选，经自我举荐和大家讨论确定了 CTO 由曾键担任、CFO 由金孜达担任、CIO 由崔天一担任。               与会人员包括杨博远、曾键、张光宇、李嘉豪、王子博、崔灏、郑子涵、左格非、朱沛俊、王子浩、崔天一、赵彦冰、张静宁、张振兴、徐弈、于天泽、高一凡、卢星、金孜达、张荣葳、何旭东、赵驰。以上名单来自会议签到。   其中张荣葳同学既是老会长又代表本届社团管指委员会分管委员参加。   会议记录感谢杨博远。   本次会议照片上传至 LUG FTP“会议”文件夹中。  ","categories": ["LUG 会议"],
"tags": ["USTC_LUG","换届","崔灏","左格非","曾键","郑子涵","金孜达"],
"url": "/news/2016/05/2016-lug-election/",
"teaser": null
},{
"title": "西区图书馆新活动室启用",
"excerpt":"2016 年 6 月 16 日，LUG 西区新活动室启用，并成为今后唯一的社团活动室。一部分 LUG 成员在当日早上从东区图书馆 605 老活动室与东图一楼将大部分活动材料与各类物品搬迁到了西区活动室。      新的西区活动室仍然由图书馆提供，位于西区图书馆 206 室。具体地点在西区图书馆主楼二楼西北角，十分接近原 308 活动室。   16 日早上，东区的同学们使用三轮车数次来回才将东区的活动物品与书库书籍搬到了西区。      同学们从早上工作至中午，将活动室打扫干净并对书籍进行上架、配置活动室有线和无线网络。到 16 日下午，活动室已经能正式投入使用。      历史上，LUG 的活动室长期位于西区图书馆 308 室；前两年的数次搬迁均是西区图书馆的大规模重新装修计划的结果。经过数次辗转之后，LUG 活动室重新回到了西区，在可以预期的将来，西区新活动室定能为 LUG 的活动提供更好的便利条件。   原东区活动室将于近日被收回。本次活动的原始照片存储在LUG FTP上。  ","categories": ["LUG 活动"],
"tags": ["LUG","USTC_LUG","news"],
"url": "/news/2016/06/new-activity-room-in-west-library/",
"teaser": null
},{
"title": "2016 软件自由日中国科大站",
"excerpt":"2016 年 9 月 15 日下午，2016 年软件自由日（SFD）中国科大站活动在西活学术报告厅成功举办。当天下午，虽然天公不作美，大雨倾盆，又适逢中秋佳节，仍有 70 余位同学冒雨赶来参加我们的活动，现场气氛热烈，效果良好。         本次活动我们有幸邀请到了来自 Canonical 的李彬工程师为我们介绍《Ubuntu 和 Gnome 的桌面环境》，Linux 用户协会执行会长左格非同学为大家介绍了《开源通信软件协议》和《出国网络加速服务的实现》，深受在场同学的欢迎。   不到 2:30 分，同学们便冒着大雨赶到会场，在场工作人员为大家准备了各类开源软件纪念品供大家自行领取，此外，活动当天还为大家提供了月饼，在场的同学们共度中秋佳节。   2:30 分，活动正式开始，左格非同学首先登场作题为《开源通信软件的加密》的介绍。左格非同学先介绍了 Telegram 软件及其安全、非商业化等特点。接着，左格非分别介绍 Telegram 在正常通信和私密通信时所使用的协议。从非对称密钥谈起，逐步深入，提到消息的识别，防止重放攻击等内容。在场同学认真倾听。接着，左格非介绍了 GPG 的基本原理，同时为大家介绍了 LUG 提供的新服务——GPG Key Server。接下来，同学们踊跃提问，现场氛围十分热烈。      在 5 分钟的茶歇后，由 Canonical 的李彬工程师为大家介绍《Ubuntu 和 Gnome 的桌面环境》。李彬工程师从一张涵盖多个开源软件 LOGO 的图开始，娓娓道来桌面环境的历史与未来发展。接着，李彬现场演示了在 Gnome 环境下开发插件的方法。最后，演讲在热烈的掌声中结束。      5 分钟的茶歇时间，大家围在李彬工程师身旁，争相试用 Ubuntu 手机和平板电脑。座位被围得水泄不通。      下一场报告是左格非同学为大家介绍“出国网络加速服务的实现”。左格非同学从最普通的 socks 代理开始，逐步深入，介绍了 GRE 隧道，kcp tunnel 等最新技术。接着，左格非同学介绍了用户访问控制的实现——Freeradius，其提供了认证、授权、计费的功能。然后，左格非介绍了多种用户接入 VPN 技术——PPTP, L2TP/IPSEC, OpenVPN, IKEv2，并比较了他们之间的优劣。最后，左格非介绍了 LUG VPN 服务的申请和管理办法。   活动结束后，部分 Linux 用户协会成员自发的组织了中秋晚宴活动，和嘉宾一起共度中秋佳节。   本次活动参与者同往年相比较少，主要由于时间选择不当。中秋节许多同学有其它安排，时间冲突，以后再选时间要把类似的因素考虑进去。这三场演讲有深有浅，取材于大家经常使用的软件，能吸引大家的兴趣。另外活动的纪念品发放了不少，宣传 Ubuntu，Fedora，Deepin 的效果也不错。   感谢以下单位对本次活动的大力支持：      Canonical 提供了笔记本、马克杯、贴纸等纪念品   Fedora 中文社区提供了 Linux 体验光盘，徽章，贴纸   深度科技提供了手提袋、贴纸、安装光盘和 U 盘  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2016/09/2016-sfd-ustc/",
"teaser": null
},{
"title": "LUG 带同学们走进神秘的网络中心机房",
"excerpt":"2016 年 10 月 23 日上午，校学生 Linux 用户协会组织协会的同学们参观了校网络中心和超算中心。23 日 9 点整，就有 40 人等待在东区第五教学楼门口等待出发。      本次活动由协会的负责人带队，兵分两路，交叉参观。一路先行参观网络中心，接着与另一路交换，参观超算中心。   校网络信息中心坐落于第五教学楼东北角，一座紧邻着居民区的低调的小楼里。刚带领同学们走进网络中心的楼，就遇见了为我们介绍，带领我们参观的热情的张焕杰老师。   同学们呈扇形围绕在张老师身边，张老师亲切的为我们讲解了网络中心的职能，网络中心所进行的信息化建设，校园网的结构，以及对技术进行了探讨。         接着，张老师打开网络中心服务器机房的大门，同学们蜂拥而入，进入网络中心。张老师介绍说，学校的核心交换机就是下面这个 CISCO 设备      接着，张老师爆出惊人内幕“学校十多个 G 的出口流量全是从四台服务器上流过的，其中一台自 07 年以来就没有 down 过。”围绕在张老师身旁，张老师为我们详细介绍了机房的布置结构，其供电，网络等设施。接着，张老师与我们详细探讨了网络通的实现方法，以及西区频繁断网的原因——供电不足、电三楼空调设备老旧和其解决方法。      参观完网络中心，就和另一路同学互换，步行进入一个就在学霸们脚下但不惹人注目的地方——东区图书馆一楼参观超算中心。   超算中心李会民副主任早就等待在超算中心的门口等待着一行人的到来。刚一到，李老师便热情的给我们介绍起了超算中心的职能、超算中心机房的结构等内容，同学们认真听讲解。      接着，李老师为我们现场演示了服务器的维修，同学们亲自上阵，“友好“的练习了对服务器风扇、CPU 等部件的更换。      最重要的当然是走进机房了，在李老师的带领下，同学们走入机房对超算机群进行了参观。      最后，由衷的感谢张焕杰老师和李会民老师带领我们参观网络中心和超算中心。  ","categories": ["LUG 活动"],
"tags": ["LUG","USTC_LUG","网络中心","超算中心","服务器","网络通","李会民","张焕杰"],
"url": "/news/2016/10/visiting_network_center/",
"teaser": null
},{
"title": "2017 Linux 板版衫设计方案征集",
"excerpt":"又是一年毕业季～ Linux 板 &amp; USTC LUG 版衫企划启动啦！   跟往年一样，首先征集设计方案。5 月底将通过投票选出最受欢迎的设计方案，并启动预订。6 月份毕业生离校前完成版衫制作和发放。   设计要求      主题：Linux 与自由软件，体现瀚海星云 Linux 板或 USTC LUG 特色   底色：不限，建议至少包含白色、灰色设计方案   图案：正面或双面图案（可设袖标），提交图案分辨率不低于 300DPI，并附简单效果图说明图案位置。   授权：投稿作品默认以 CC BY-SA 4.0 协议发布。如果选择其他授权，则应确保作品可以在 CC BY-SA 协议下再发布。   可以参考一下往年的版衫设计方案。   投稿方式      方式 1：回复瀚海星云 BBS 的征集贴，以附件形式附上设计图   方式 2：发邮件至 lug@ustc.edu.cn，标题「2017 版衫设计方案投稿」   方案选择   若方案多于 1 种，则通过投票来选出最终方案。投票将在方案征集后一周进行。   奖励      被选中方案的设计者可免费获得两件 2017 Linux 板版衫。   得票前 6 名的其他未选中方案，设计者可免费获得一件 2017 Linux 板版衫。   征集时间   即日起至北京时间 5 月 14 日（周日）23:59:59。  ","categories": ["LUG 活动"],
"tags": ["LUG","版衫"],
"url": "/news/2017/05/2017-bbs-linux-banshan/",
"teaser": null
},{
"title": "2017 Linux 板版衫候选方案公布与投票",
"excerpt":"2017 年 Linux 板版衫设计方案出炉啦！经过一周的征集，本次共获得了两份投稿的设计方案，将通过投票决定最终制作的版衫样式。   BBS 投票页面联动：点我前往   候选方案展示   版衫候选设计方案详细图片请见LUG FTP 页面（https://ftp.lug.ustc.edu.cn/%E7%89%88%E8%A1%AB/2017banshan/voting/）。   方案一：Kernel Panic                     方案二：Simple and Stupid      背面样式与方案一相同。     投票参与方式      填写问卷星问卷进行投票：http://tp.sojump.cn/jq/14217611.aspx；   在瀚海星云 BBS 上回复帖子进行投票；   两个途径将会合并计票，请勿重复投票。   投票截止时间：2017 年 5 月 25 日 23 时 59 分（北京时间）     常见问题   颜色选择？   当年设计（方案一、方案二）暂定白、蓝、黑。往年版衫复刻需要根据具体设计重新配定颜色。   订购开始日期？   投票结束后会开始着手联系厂家制作并搜集订购信息。   版衫何时能到手？   应当在 7 月之前，我们会争取在毕业生离校前完成。   我不是科大学生/教工，可否投票？   只要您有购买的意愿，可以的。   我不在合肥，版衫国内快递订购是否可能？   有可能，可能性较大。   我不在境内，版衫跨境订购是否可能？   有可能，可能性较小。   定价？   与具体生产厂家相关，但一般不会超过 50 元/件。  ","categories": ["LUG 活动"],
"tags": ["LUG","版衫"],
"url": "/news/2017/05/2017-bbs-linux-banshan-voting/",
"teaser": null
},{
"title": "2017 Linux 板版衫投票结果公示",
"excerpt":"经统计，2017 年版衫投票结果如下：                  方案名       问卷票数       BBS 票数       合计                       方案一       48       4       52                 方案二       34       0       34                 2010 年重制       13       7       20                 2015 年重制       5       1       6                 2012 年重制       3       0       3                 2011 年重制       4       0       4                 2008 年重制       0       0       0                 2007 年重制       2       0       2                 总计       109       12       121           根据以上情况，今年将按照方案一进行制作。具体预订登记方法将稍后发布。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2017/05/2017-bbs-linux-banshan-voteresult/",
"teaser": null
},{
"title": "2017 Linux 板版衫预订开始！",
"excerpt":"经过紧张的投票，我们决定使用方案 1 作为今年版衫。   BBS 相同文章联动：点我   预订方法   即日起，我们将开始版衫预订工作，为版衫制作筹集足够的资金。   科大的同学预计 6 月 18 日前可以收到货。校外同学请准确填写快递地址。   定价   版衫定价：50 元（一口价）   自提不收运费，快递运费到付   截止日期   截止日期：2017-6-6 23:59   预订方法      转账到支付宝帐号 crtmike (At) hotmail.com 姓名：马凯；头像为浑天仪。建议备注姓名 + 手机号以便追溯！   填写表单 https://t.cn/RSfG5md 如果购买多件烦请分别多次填写！   预订说明      目前暂定在 T 社（tshe.com）制作版衫。底衫如无意外会在 https://www.tshe.com/styles/2 和 https://www.tshe.com/styles/4 两款底衫中选择一种。我们会选择单件 50 元以内最好的棉质底衫制作版衫；   出于成本考虑，每种颜色订单数大于 10 件才会制作；   如订单无效或未制作，转账将在 6 月 20 日前原路返还；   如单件价格低于 50 元，结余资金将作为 USTC LUG 社团经费，公开使用情况。   如果有其他问题，请咨询：   LUG 邮箱：lug (at) ustc.edu.cn   负责人 QQ：515166698   设计图展示                    ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2017/06/2017-linux-banshan-preorder-start/",
"teaser": null
},{
"title": "LUG LOGO 征集活动",
"excerpt":"中国科学技术大学校学生 Linux 用户协会（简称 LUG）拟更换社团 LOGO，现采用征集活动的形式向全校师生，校友及所有开源社区的朋友征集 LOGO 设计方案，欢迎大家积极参与！     设计理念   LOGO 对于 LUG 的校内和校外形象有着重要的作用，它将用于以下用途：           网站图标；            帐号头像；            宣传海报；            幻灯片；            版衫和其他周边；            对外合作       等。   LUG 作为包容开放的技术类社团，设计作品可以参考以下方面（不要求全部满足）：           体现自由软件精神；            契合自由软件社区氛围；            具有时代感和较强的艺术表现力；            表现 LUG 的社团风格、特色、历史积淀。       LOGO 要求简明，清晰，辨识度高，设计方案不得侵犯他人著作权。   提交内容           参加征集的作品可以是 PNG，JPG 等位图格式，也可以是矢量图格式或 PSD 等格式。也可以是简笔画，表现自己的创意即可。作品提交时还应附上对作品的设计解释。            注意：经评选后，最终选定的一等奖作品要求能够提供成品矢量图或者 PSD 文件，包括透明背景，深色背景，以及浅色背景三个版本，并至少有一个与 USTCLUG 文字搭配使用的示例，但成品的制作可以在征集活动结束后完成。       奖励办法           一等奖 1 名：数位板或移动硬盘（二选一或选择其他等值奖品），和印有新 LOGO 的一系列定制周边（版衫，水杯，贴纸，鼠标垫，徽章，钥匙链）；设计作品作为 LUG 的 LOGO 使用，并在 LUG 主页上保留设计者的信息；            二等奖 2 名：印有新 LOGO 的部分定制周边（版衫，水杯，贴纸，鼠标垫，徽章，钥匙链）；            三等奖 5 名：印有新 LOGO 的部分定制周边（贴纸，鼠标垫，徽章，钥匙链）。       征集时间安排   作品提交截至时间： 7 月 10 日 24:00   投稿方式   参与征集的作品发至邮箱：logo@ustclug.org           邮件主题：设计者学号（若没有学号，需表明自己的身份，如教师标明教师）+ 姓名            邮件附件：设计作品（成品或简笔画）       版权归属   评选后选定的作品的知识产权和使用权归中国科学技术大学学生 Linux 用户协会和设计者共同所有，设计者不得私自转让或它用。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2018/05/lug-logo-collect/",
"teaser": null
},{
"title": "首届学生开源年会将在重庆召开！",
"excerpt":"   学生开源年会 Students Open Source Conference，简称 SOSCON，是国内首个面向学生的开源技术大会。SOSCON 是一个纯社区非商业非盈利的开源大会，票价全部免费，并且对学生讲者进行补助。     大会旨在鼓励学生享受开源、了解开源、参与开源、贡献开源，每年在不同城市轮流举办，从演讲者、组织者、志愿者到听众，绝大多数都为在校学生，包括中学生、大学生和研究生。联合创始社区包括：重庆大学 CONTINUE、清华大学 TUNA 协会、中科院开源软体协会、中科大 LUG、西南大学开源协会等、台湾大学开源会、重邮开源协会。   SOSCON 是中国大陆首届面向学生的开源会议，从演讲者到工作人员到听众几乎全部为学生，享受开源乐趣，参与开源贡献。关于畅想未来这件事，我们学生更有感觉。期望通过这次会议，分享开源精神，拓展与会者的视野；开源是一种精神，每位与会者，都是拥有贡献精神、乐于为社会付出的种子。期望今天的学生能成长为明日的参天大树，传承开源贡献的精神，传承理想主义的情怀，共同为推动社会的进步而无私努力。   参与方式   请访问 https://soscon.top/apply 申请入场券。   时间地点   SOSCON 2018 将于 2018 年 6 月 9 日 - 10 日在重庆大学 A 区（重庆市沙坪坝区沙正街 174 号）主教学楼三楼会议中心举行。学生可在大会官网获取入场券。   大会主办：开源工厂   大会官方网站：https://soscon.top   现场凭票签到还可领取首届学生开源年会纪念书签一套   更多信息   电报群：t.me/soscon   QQ 群：202790710   开源工场联系方式   Weibo：http://weibo.com/openingsource   Facebook：https://facebook.com/openingsource   Twitter：https://twitter.com/openingsource   Google +：https://google.com/+OpeningSource  ","categories": [],
"tags": [],
"url": "/news/2018/05/SOSCON18/",
"teaser": null
},{
"title": "服务器宕机通知",
"excerpt":"2018-06-16 UPDATE3:   目前以下服务已经恢复正常：      主页 (wiki)：https://lug.ustc.edu.cn/ （已恢复）   代码托管平台：https://git.ustclug.org/ （已恢复，建议用户切换新地址：git.lug.ustc.edu.cn）   LUG FTP：https://ftp.lug.ustc.edu.cn/ （已恢复）   反向代理：*.proxy.ustclug.org（已恢复）   如果您使用上述服务时遇到问题，请向我们反馈。   2018-06-15 UPDATE2:   目前以下服务已经恢复正常：      主页 (wiki)：https://lug.ustc.edu.cn/ （已恢复）   代码托管平台：https://git.ustclug.org/ （已恢复，建议用户切换新地址：git.lug.ustc.edu.cn）   LUG FTP：https://ftp.lug.ustc.edu.cn/ （已恢复）   由于网络架构的变化，部分服务需要您的 DNS 缓存过期后得到新的解析结果才能生效，这依赖于您的网络环境，您也可以尝试手动刷新缓存。维护期间服务的稳定性有下降，这是正常现象，如果您在使用中持续遇到问题，请联系我们。   从数据备份中恢复数据并没有计划中的这么一帆风顺，我们仍在努力恢复受影响的各项服务，接下来的工作计划是按照以下顺序继续恢复服务：      反向代理：*.proxy.ustclug.org   网络加速服务   VPN 在线申请系统   轻量级网络加速服务   给您带来的不便敬请谅解。   2018-06-14 UPDATE1:   初步的调查结果显示，此次宕机事件原因是虚拟机宿主机 3 号节点上的一块年代久远的硬盘因为老化或其他原因出现问题，导致该节点上运行的虚拟机全部宕机，并且导致该节点也无法被虚拟机集群控制，其上运行的虚拟机亦无法直接的迁移。   目前的修复方案是从我们的数据备份中恢复重要的服务到没有受影响的节点上重新运行，恢复备份和重建原有的网络环境还需要一段时间，给您带来的不便敬请谅解。     今天早些时候（2018-06-14 00:40 左右），由于我们的虚拟机宿主机 3 号节点的某些问题，LUG 内网包括网关与统一认证在内的部分关键服务器宕机，进而导致一部分服务不能正常提供，我们已经知悉并且开始处理这些问题。   以下服务因为此事件暂时不能正常运行，正在抢修中：      代码托管平台：https://git.ustclug.org/ （已恢复）   网络加速服务   防污染 DNS   主页 (wiki)：https://lug.ustc.edu.cn/ （已恢复）   反向代理：*.proxy.ustclug.org（已恢复）   VPN 在线申请系统   轻量级网络加速服务   服务器统一认证：ldap.ustclug.org   内网 VPN   LUG FTP：https://ftp.lug.ustc.edu.cn/ （已恢复）   Ganglia 监控：https://status.ustclug.org/   LDAP 配置管理系统（GOSA2）   以下服务暂不受此次事件影响：      开源镜像站（HTTP 访问）：https://mirrors.ustc.edu.cn/   开源镜像站（定时同步；rsync、FTP 访问；帮助页面）：https://mirrors.ustc.edu.cn/   权威 DNS：ns-a.ustclug.org. ns-b.ustclug.org. ns-c.ustclug.org.   网络启动：pxe.ustc.edu.cn   图书馆透明计算系统   PGP 密钥同步：https://pgp.ustc.edu.cn/   受影响服务的恢复时间有待我们进一步查明事件原因后给出，给您带来的不便敬请谅解！   USTCLUG   2018-06-14 01:10:50  ","categories": ["LUG 服务器"],
"tags": [],
"url": "/news/2018/06/server-down/",
"teaser": null
},{
"title": "2018 秋季学期新生活力课程",
"excerpt":"2018 年 8 月 25 号（星期六）晚，中国科学技术大学学生 Linux 用户协会（简称“协会”）在我校西校区 3A306 教室开展了本学期第一次新生活力课程，约 100 名同学参与了本次活动。   协会的本次新生活力课程主要面向面向才入学的大一新生，以“让大学生活效率腾飞：常用网络资源介绍”和“Linux：你所知道的与不知道的”为主题。前者主要介绍中科大校内的实用网络资源和一些校外的一些免费或付费资源，以帮助新生尽快提高学习效率，享受网络带来的便捷，后者通过对 Linux 和一些优秀桌面应用的介绍，为大家揭下 Linux 的神秘面纱，让大家看到一个更有趣的 Linux。      第一部分由社团 COO 任正行同学主讲。课程中介绍的网络资源将包括校内上网途径，学校购买的 Windows / Linux / macOS 下的各种正版软件，图书馆资源，论文数据库等;还有自助打印，GitLab，一卡通系统，中国最大的开源软件镜像站等服务。         中场休息时协会 CEO 何纪言解答大家的问题，并且简单介绍了我们协会的主题，日常活动，维护的服务，交流方式等。      第二部分是协会 VP 李文睿同学主讲。讲解了 Linux 是一套开源，自由，强大，有趣的操作系统，1991 年由芬兰大学生 Linus 开发，由于其开源的特性，任何人都可以对其作出贡献。Linux 出现近 30 年，现在早已广泛应用在各个领域。      台下的同学们认真的听讲，不时提出问题与主讲人互动。期间协会副会长马凯同学还解答了大家关于邮件列表的问题，协会副会长曾明亮还为大家解答了电脑选购的部分疑问。      本次活动我们还为新生同学们提供了自助饮料和纸杯。   活动结束后大家主动清理了教室并带走垃圾，本次新生活力课程圆满结束，感谢校团委，校学生社团管理指导委员会和计算机科学与技术学院团委的支持！   活动照片和讲稿：LUG FTP  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2018/08/freshman-course/",
"teaser": null
},{
"title": "LUG LOGO 征集结果",
"excerpt":"感谢同学们和开源社区的朋友们对我们 LOGO 征集活动的支持！     经过一段时间的征集和评选，我们得到了如下 LOGO 征集活动的结果：             一等奖 : Archlinuxcn 成员张盛宇            二等奖 : 崔灏，严鲸鲸            三等奖 : 薛瑞，蔡文韬，王若晖，王瑞，鲁吴越       在选出一等奖后，我们与获得一等奖的张盛宇先生进行了一系列关于 LOGO 细节修正的讨论，最后决定出了我们的 LOGO：                                                原版       带文字           LOGO 下载地址：logo.zip   根据我们的奖励办法，获得上述奖项的同学将获得印有新 LOGO 的定制周边等奖品，新 LOGO 已经选出，周边等奖品正在制作中，请获得奖品的同学耐心等待，奖品制作出之后我们会联系大家。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2018/09/lug-logo-collect-result/",
"teaser": null
},{
"title": "2018 软件自由日中国科大站",
"excerpt":"2018 年 9 月 15 日下午，2018 年软件自由日（SFD）中国科大站活动在西校区 3C103 教室成功举办。   本次活动我们有幸邀请到了来自 Linux foundation 的 Xu DiXing 和中国科学技术大学网络信息中心的张焕杰老师。Xu DiXing 为我们介绍了《A Hands-On Tutorial on using fabric-sdk-py and writing your first dapp with fabric》，张老师也做了《科大网络原理和 IPV6 介绍》，Linux 用户协会副会长马凯同学为大家介绍了《我已阅读并同意：软件许可证简介》，深受在场同学的欢迎。   不到 2:30 分，同学们便陆续赶到会场，在场工作人员为大家准备了 LUG 徽章等一些纪念品供大家自行领取。       2:30 分，活动正式开始，LUG CEO 何纪言同学先介绍了今年软件自由日的日程安排，赞助本次软件自由日的组织和闪电演讲的报名等。之后由中国科学技术大学网络信息中心的张焕杰老师给我们带来《科大网络原理和 IPV6 介绍》的讲座。张老师的讲座分中国科大校园网络简介，安徽省教育科研网简介，及校园网 IPV6 应用于管理三部分。在讲座中张老师还提及，校园网是没有防火墙的，但通过 IP 黑名单系统等措施使得校园网还是非常安全。由于讲座有很多相关校园网的问题，讲座结束后，很多同学积极提问，张老师也相应地作出了回答。        张老师的演讲结束后，由 Linux foundation 的 Xu DiXing 为我们介绍 Linux foundation 的 Hyperledger 项目，这是一个开源账本项目，由于内容较难，很多同学并不是很理解讲座的内容。       在茶歇时间，大家来到前面的桌子上取用我们准备的小零食，我们也趁此时间抽奖。我们根据签到表上的序号，使用 random.org产生随机数来抽奖。奖品为一些赞助组织提供的文化衫，由于衣服的数目较多，很多同学都中了奖。     下一场报告是马凯同学为大家介绍《我已阅读并同意：软件许可证简介》。马凯同学首先由大家熟知的“我已阅读并同意”开始，很多人安装软件时都不会仔细查看那些许可协议，而这真的安全吗？如何避免这种问题？由此引出了自由软件和开源软件的概念。两种概念又有区别，马凯同学又通过自己编造的一个“MLL (My Little License)“来说明开源软件不一定自由，而且相应地强调了查看许可协议的重要性。马凯同学的讲座通过丰富的例子向同学们阐释了开源软件，自由软件以及软件许可证等概念。    最后进行的是自由报名的闪电演讲。首先是宋一凡同学作了关于开源与大科学装置的演讲。大科学装置 (Large Scientific Facilities) 即一些规模很大的用于科学研究的装置，比如中国科大同步辐射实验室的加速器等。而这些装置，据宋同学阐述，很多都使用开源的引擎。然后就是郑子涵同学对开源订阅软件 Subscribe to anything 作出的一个简短的介绍。   感谢以下单位对本次活动的大力支持：      Canonical 提供了文化衫、贴纸等纪念品   深度科技提供了贴纸、钥匙链、活页本等纪念品   开源工场提供了文化衫、礼品袋等   谋智火狐提供了公仔和帆布袋和贴纸  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2018/09/2018-sfd-ustc/",
"teaser": null
},{
"title": "中国科学技术大学第五届信息安全大赛圆满结束",
"excerpt":"2018 年 10 月 16 日中午，随着分针滴答滴答地与时针在 12 点处重合，网站提交答案的窗口关闭，也宣布着第五届信息安全大赛落下帷幕。   本次比赛中，共有 4000 多人次线上报名参赛，2600 多人至少完成了一道题，参与人员涵盖校内外，分别来自于清华大学、北京大学、中国科学院大学等 91 所国内高校，以及几所海外高校。其中来自清华大学的同学获得总榜的第一名，最终以 6750 分结束比赛，中国科学技术大本科生选手邓龙以总分 4050 分获得校内榜第一，总榜第十的好成绩。本次比赛校内参加人数众多，共计 424 名本科生参与，139 名研究生博士生参与。   经过赛后主办方的统计，最终确定了获奖名单，并为校内参赛的同学颁奖。2019 年 1 月 3 日晚，第五届信息安全大赛颁奖仪式在西区举行，校内冠军邓龙荣获一等奖，付佳伟、莫子铭、徐一凡、贺泉、杨荣琛五位选手获得二等奖，还有王若麟等二十五位选手获得三等奖。此外还专门设置了面向大一新生的新生特别奖两名，分别为高泽豫和林焕承，面向女生的 Ada 奖一名，获奖者为林元芃。           自 2014 年起，科大信息安全大赛已经连续举办了五届，往届比赛均顺利进行，规模盛大，影响甚广。第五届信息安全大赛由中国科学技术大学网络空间安全学院、中国科学技术大学校团委、中国科学技术大学管指委主办，中国科学技术大学学生 Linux 用户协会、中国科学技术大学微软学生俱乐部等承办，并由南京大学微软学生俱乐部、湖南大学微软学生俱乐部等协办。本次比赛相比之前规模更大，参与人员更多，并邀请了更多国内高校参赛，旨在给国内高校的同学们提供一个学习交流的平台。并延续了往届的优良传统，努力结合科大特色，坚持向新生倾斜的原则，控制题目难度梯度，强调引导和教育工作。   本次比赛的题目在具有一定教育意义的同时也不失趣味性。题目“猫咪问答”让参赛选手在做题的过程中了解了科大的一些建校历史和 60 周年校庆知识，也向外校的选手宣传了科大；而有趣的“黑曜石浏览器”一题更是在知乎引起了热议。   赛后承办方组织参赛选手于网上 https://github.com/ustclug/hackergame2018-writeups 撰写了题目解答，并可在 https://hack2018.lug.ustc.edu.cn/ 上继续查看题目和提交。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2019/01/hackergame-awards/",
"teaser": null
},{
"title": "Linux 101 第一课暨 Linux 安装聚会成功举办",
"excerpt":"2019 年 3 月 10 日下午，由中国科大学生 Linux 用户协会承办的 Linux 101 第一课暨 Linux 安装聚会活动在西区 3C101 教室顺利举行。   在中国科大，同学们的学习和科研生活中都要广泛地接触 Linux 系统。Linux 101 是中科大 Linux 用户协会成员面向全校开设的长期课程，课程以应用角度出发，带领大家从零开始了解开源 Linux 系统并学会初步应用。Linux 安装聚会是多人集体安装 Linux 的线下活动，旨在由经验丰富的 Linux 用户帮助新手快速且“无痛”地完成 Linux 操作系统的安装。    下午 14:00，何纪言同学对同学们简单地介绍了 Linux 101 以及 Linux 用户协会，之后由李嘉豪同学作了“Linux 101 序–遇见 Linux”的演讲，也就是 Linux 101 第一课。在演讲中，李嘉豪同学介绍了什么是 Linux，它的发展历史，以及一些自由软件相关的知识，并进行了 WSL 和 Ubuntu 虚拟机的演示。    下午 15:00 左右，Linux 安装聚会开始。到场的同学很多，由于同学们的计算机品牌，硬件条件等有所不同，安装过程中不免遇到一些问题，而且由于人数较多，为同学们安装 Linux 的志愿者们忙得不可开交。    下午 16:30 左右，大部分同学已经安装好系统，由于安装过程中出现了问题的同学仍在忙碌，这时已经完成安装工作的同学为他们出谋划策。    下午 17:30 左右，基本所有的同学都完成了 Linux 系统的安装。参加活动的同学对协会志愿者表示了感谢，对活动予以了好评。今后的 Linux 101 课程将会更加深入地介绍 Linux 的使用以及一些原理，拥有了一个 Linux 操作系统将会使同学们在今后的 Linux 101 课程中能够方便地实践学习，学会 Linux。快速学会使用 Linux。同时，也希望同学们利用这次安装 Linux 的经验帮助身边的同学完成 Linux 安装，促进 Linux 和开源软件在中国科大的普及，弘扬自由软件精神！   （校团委、校学生社团管理指导委员会、Linux 用户协会）  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2019/03/linux-install-party/",
"teaser": null
},{
"title": "2019 Linux 板版衫设计方案征集",
"excerpt":"又是一年毕业季～ Linux 板 &amp; USTC LUG 版衫企划启动啦！   跟往年一样，首先征集设计方案。4 月底将通过投票选出最受欢迎的设计方案，并启动预订。6 月份毕业生离校前完成版衫制作和发放。   设计要求      主题：Linux 与自由软件，体现瀚海星云 Linux 板或 USTC LUG 特色   底色：不限，建议至少包含白色、灰色设计方案   图案：正面或双面图案（可设袖标），提交图案分辨率不低于 300DPI，并附简单效果图说明图案位置。   授权：投稿作品默认以 CC BY-SA 4.0 协议发布。如果选择其他授权，则应确保作品可以在 CC BY-SA 协议下再发布。   可以参考一下往年的版衫设计方案。   投稿方式      方式 1：回复瀚海星云 BBS 的征集贴，以附件形式附上设计图   方式 2：发邮件至 lug@ustc.edu.cn，标题「2019 版衫设计方案投稿」   方案选择   若方案多于 1 种，则通过投票来选出最终方案。投票将在方案征集后一周进行。   奖励      被选中方案的设计者可免费获得两件 2019 Linux 板版衫。   得票前 6 名的其他未选中方案，设计者可免费获得一件 2019 Linux 板版衫。   征集时间   即日起至北京时间 4 月 28 日（周日）23:59:59。   参考   LUG 相关素材  ","categories": ["LUG 活动"],
"tags": ["LUG","版衫"],
"url": "/news/2019/04/2019-bbs-linux-banshan/",
"teaser": null
},{
"title": "2019 Linux 版衫预订开始",
"excerpt":"经过版衫方案投票结果（2019 Linux 板版衫候选方案公布与投票），我们最终确定了 2019 Linux 版衫样式，并从即日起开始接受预定。   经过统计，包括微信公众号、BBS 等渠道所有投票中，方案二 Style 1 以 25.7% 的票数位居第一，恭喜设计者陈同学，也非常感谢其他投稿的同学。   我们与作者和供应商 T 社（tshe.com）沟通后决定制作黑色，白色，蓝色三种底色版本，效果图如下：   黑色版：      白色版：      蓝色版：      （前印花宽 19.4cm，高 25cm，距离领口 8cm；后印花宽 15cm，高 10.9cm，离领口 8cm）   预定说明   版衫定价：50.00 元/件   付款方式：支付宝转账（详见预定表单）   预定截止时间：2019 年 6 月 21 日 23:59:59 (UTC+8)   注意事项：      在校同学可以在到货之后自提，时间不限（如：暑期和下学期）。不在校的同学请填写准确的邮寄地址，我们将在收到版衫后统一以快递到付寄出（预计 6 月 27 日，较晚预订的同学可能会晚些收到）；   预定和付款同时进行，请在填写表单后尽快完成支付宝转账，备注信息填写预定者手机号；   如订单无效或未制作，付款将全额原路返还；   如需预定不同尺码，请多次填写表单；   出于成本考虑，每种颜色订单数大于 10 件才会制作；   按照投票人数估计，单件制作成本约为 50 元，如因预定数量提高，单件价格最终低于 50 元，则结余资金将作为 USTC LUG 社团经费，并公开使用情况；   任何问题请及时通过 goods@ustclug.org 和我们联系，预定截止后恕不接受退款。   预定方式：点击链接 https://www.wjx.cn/jq/41165916.aspx 填写，或扫描以下二维码预定。      更新：预定截止时间已由 6 月 18 日周二延至 6 月 21 日周五，发货时间也相应推迟；如果需要更改收货地址或有其他问题，请通过邮件联系我们：goods@ustclug.org     附 1：投票结果                  方案       票数       比例                       方案一       23       8.5%                 方案二 style 1       70       25.7%                 方案二 style 2(A)       45       16.5%                 方案二 style 2(B)       64       23.5%                 方案三       15       5.5%                 方案四       20       7.4%                 方案五       30       11.0%                 2017       2       0.7%                 2009       2       0.7%                 2015       1       0.4%           附 2: 尺码规格   ","categories": ["LUG 活动"],
"tags": ["LUG","版衫"],
"url": "/news/2019/06/2019-bbs-linux-banshan-preorder-start/",
"teaser": null
},{
"title": "2019 秋季学期新生活力课程",
"excerpt":"2019 年 8 月 31 日与 9 月 7 日，USTCLUG 在西校区的 3A110 教室开展了本学期的新生活力课程。   新生活力课程面向入学不久的大一新生。第一次新生活力课程以 Linux 为主题，上半场是由李文睿同学主讲的《Hello, Linux》，他从 Linux 的发行版、日常使用以及命令行等方面对 Linux 操作系统进行简单介绍，希望能够让同学们通过本次讲座了解 Linux；下半场是龚平同学的《Why learn Linux?》讲座，他从现今 Linux 应用情况，结合科大同学未来的学校生活和工作情况，介绍 Linux 系统的重要地位以及学习 Linux 的趣味性，希望能够激发同学们学习 Linux 的乐趣。         考虑到大部分科大新生都还没接触过 Linux 系统，我们专门将一台笔记本安装了 Linux 系统，带去课堂，给大家实机展示，并鼓励大家上手操作。讲座结束的提问环节，大家非常积极踊跃，提出了一系列不仅仅关于 Linux 还有将来四年的学习生活的问题。讲座结束，还有许多同学意犹未尽，希望可以进一步了解什么是 Linux，什么的是自由软件精神，并且希望能稍微了解 Linux 用户协会，我们就带他们去参观 Linux 用户协会的活动室。在活动室中，我们详细回答了关于 Linux 的种种问题。有一位对 Linux 特别感兴趣的同学从现场借走一本关于 Linux 的书籍。直到晚上 10 点左右，所有人才离开 LUG 活动室。   第二次新生活力课程以网络资源与信息安全为主题。上半场为由高泽豫同学带来的《让大学生活效率腾飞：常用网络资源介绍》。他介绍了中科大校内使用过的网络资源和一些校外的免费或者付费资源，帮助新生可以快速的使用学校的基础服务设施，提高学习工作生活效率。讲座下半场是陶柯宇同学的《日常生活的信息安全》。陶柯宇同学给大家科普了一些基础的网络知识，介绍了常见的信息安全漏洞，并提供了一系列防治措施，希望提高同学们网络风险的防范意识。特别是在万物互联，万物智能的物联网时代，网络风险的防范意识给格外的重要。同时，此次新生活力课程由于少院同学因院系安排无法参加，我们设置了直播与录播。         最终，本次新生活力课程圆满结束，感谢校团委，校学生社团管理指导委员会和计算机科学与技术学院团委的支持！   活动照片和讲稿：   第一次新生活力课程   第二次新生活力课程  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2019/09/2019-freshman-course/",
"teaser": null
},{
"title": "2019 软件自由日中国科大站",
"excerpt":"2019 年 9 月 21 日下午，2019 年软件自由日（SFD）中国科大站活动在西区 3C102 教室顺利举办。   本次活动我们邀请到了校友沈达以及王子博同学和刘紫檀同学为我们带来了精彩的演讲。其中沈达为我们介绍了《GNU TeXmacs: A Free Scientific Editing Platform》，王子博为我们介绍了《开源密码管理器 KeePass》，刘紫檀为我们介绍了《从 Makefile 到 Conan：手把手教你构建 C/C++ 项目》。   在活动开始前同学们陆续到达会场。LUG 为大家提供了一些徽章、贴纸等纪念品以及食物，供大家自行领取。      下午 2:30 活动正式开始。首先是由 LUG 的执行会长陶柯宇同学为大家介绍软件自由日、USTCLUG、本场软件自由日的日程安排，以及闪电演讲等事项。      在简短的介绍后就是校友沈达为大家带来《GNU TeXmacs: A Free Scientific Editing Platform》。TeXmacs 是一个为编写优雅美观的科技类文档而制作的编辑器，有 TeX 和 Emacs 的特点。沈达向大家介绍了 TeXmacs 的一些特性，例如方便的快捷键、导入导出 TeX 格式、调用其他数学计算程序的计算结果、使用 kbd-map 自定义宏等，并且介绍了 TeXmacs 的未来规划，以及他为改进 TeXmacs 编辑中文文档的体验上作出的努力。之后，很多好奇的同学都提出了相关的问题，沈达也一一作了回答。      之后由王子博同学向大家介绍 KeePass，在日常生活中管理网站密码，难道安全与易用不可兼得？密码管理器可以使二者得兼。KeePass 就是这样一款开源的密码管理器。之后，王子博同学还现场演示了 KeePass 的使用，介绍了 KeePass 的安全特性，最后还介绍了一些密码相关的小技巧。      在短暂的休息后，是刘紫檀同学对 C/C++ 项目构建系统的介绍。他从最简单的程序编译开始，一步步引入新的问题与解决方案，从最原始的编译的 Shell 脚本，到 Makefile，AutoTool 工具链，最后再到 CMake 和 Conan，举的例子很生动，并且提供了自己的电脑，以让现场的观众们当场实验。         最后是自由报名的闪电演讲。首先是陶柯宇同学向大家介绍了 Chisel 硬件编程语言，比较了 Chisel 与直接书写 Verilog 代码的优劣；付佳伟同学向大家介绍了静态网站生成器 Jekyll，指出有的时候 Jekyll 是比 Wordpress 等动态网站更好的方案；最后一项是李文睿同学介绍了开源游戏 Teeworlds，由于底层代码开源，开发者可以做出自己的定制，可玩性非常高。   感谢以下单位为本次活动的支持：      CodeWeavers 提供了 CrossOver 软件的激活卡片   深度科技提供了贴纸和活页本   Canonical 提供了贴纸  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2019/09/2019-sfd-ustc/",
"teaser": null
},{
"title": "中国科学技术大学第六届信息安全大赛圆满结束",
"excerpt":"2019 年 10 月 22 日中午 12:00，网站提交答案的窗口关闭，也宣布着第六届信息安全大赛落下帷幕。   经统计，在本次比赛中，总共有 2682 人注册，1904 人至少完成了一题。比赛期间所有人合计提交了 17098 次 flag，其中约 57.44% 为正确的提交。本次比赛由吉林大学、南开大学、北京邮电大学、重庆大学、哈尔滨工业大学和东北大学的计算机技术类及信息安全类的社团协办，此外还有来自其他高校的同学参加比赛。其中昵称为 Merg1n 的同学获得总榜的第一名，最终以 6400 分结束比赛；中国科学技术大学的本科生选手邓龙以总分 4200 分获得校内榜（不含已毕业同学）第一，总榜第 15 的好成绩。本次比赛校内参加人数众多，共计 395 人参与，其中有 297 名本科生。   经过赛后主办方的统计，最终确定了获奖名单，并为校内参赛的同学颁奖。2019 年 12 月 15 日晚，第六届信息安全大赛颁奖仪式在西区 3A112 举行，校内冠军邓龙荣获一等奖，胡航瑞、高泽豫、李永强、陈翊辉、汪若辰五位选手获得二等奖，还有陈泳融等二十五位选手获得三等奖。此外还专门设置了面向大一新生的新生特别奖两名，分别为陈泳融和谢亦秦，面向女生的 Ada 奖一名，获奖者为李静雯。此外，还颁发了一血奖和分类奖。               自 2014 年起，科大信息安全大赛已经连续举办了六届，往届比赛均顺利进行，规模盛大，影响甚广。第六届信息安全大赛由中国科学技术大学网络空间安全学院、中国科学技术大学校团委、中国科学技术大学管指委主办，中国科学技术大学学生 Linux 用户协会、中国科学技术大学微软学生俱乐部、中国科学技术大学 NEBULA 战队等承办，并由南开大学创新技术俱乐部、北京邮电大学微软学生俱乐部等协办。本次比赛延续了往届的优良传统，努力结合科大特色，坚持向新生倾斜的原则，控制题目难度梯度，强调引导和教育工作。   本次比赛的题目分为 4 类，包含了综合技能、程序逆向与漏洞利用、密码学与数学和网站安全类题目，在具有一定教育意义的同时也不失趣味性。例如，“宇宙终极问题”一题的第一小题与 9 月份科学家得到的丢番图方程 x^3 + y^3 + z^3 = 42 的解有关；“韭菜银行”一题有关区块链与智能合约的安全性；而“Flag 红包”一题通过流行的“成语接龙红包”的形式，带领选手了解图论、博弈论等算法知识。   赛后承办方组织参赛选手于网上 https://github.com/ustclug/hackergame2019-writeups 撰写了题目解答，并可在 https://hack2019.lug.ustc.edu.cn/ 上继续查看题目和提交。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2019/12/hackergame-2019/",
"teaser": null
},{
"title": "服务器宕机通知（已恢复）",
"excerpt":"2020-01-07 Update 3   代码托管平台 https://git.lug.ustc.edu.cn/ 已恢复正常。   2020-01-07 Update 2   以下服务目前仍有问题，正在抢修中：      代码托管平台：https://git.lug.ustc.edu.cn/   目前正常的服务：      主页 (wiki)：https://lug.ustc.edu.cn/   LUG FTP：https://ftp.lug.ustc.edu.cn/   反向代理：*.proxy.ustclug.org   校内网络加速服务   校内 VPN 在线申请系统   校内轻量级网络加速服务   服务器统一认证：ldap.ustclug.org   内网 VPN   Ganglia 监控：https://status.ustclug.org/   LDAP 配置管理系统（GOSA2）   开源镜像站（HTTP 访问）：https://mirrors.ustc.edu.cn/   开源镜像站（定时同步；rsync、FTP 访问；帮助页面）：https://mirrors.ustc.edu.cn/   权威 DNS：ns-a.ustclug.org. ns-b.ustclug.org. ns-c.ustclug.org.   网络启动：pxe.ustc.edu.cn   图书馆透明计算系统   如果您使用上述服务时遇到问题，请向我们反馈。     2020-01-07 Update 1   目前，科大校园网络已经恢复正常，故障原因可见 http://bbs.ustc.edu.cn/cgi/bbstcon?board=USTCnet&amp;file=M.1578332007.A。   我们正在确认目前受到影响的服务范围。     由于科大校园网络的未知故障，LUG 的所有网络服务现在处于不稳定状态。受影响服务的恢复时间暂时无法确定，给您带来的不便敬请谅解！   USTCLUG   2020-01-06 23:34:34  ","categories": ["LUG 服务器"],
"tags": [],
"url": "/news/2020/01/server-down/",
"teaser": null
},{
"title": "Linux 101 第一课在线上顺利举行",
"excerpt":"2020 年 3 月 15 日下午，由中国科大学生 Linux 用户协会承办的 Linux 101 第一课在线上顺利举行。   在中国科大，同学们的学习和科研生活中都要广泛地接触 Linux 系统。Linux 101 是中科大学生 Linux 用户协会成员面向全校开设的长期课程，课程以应用角度出发，带领大家从零开始了解开源 Linux 系统并学会初步应用。   受到疫情的影响，我们不得不在线上举行活动，并且暂停了往年会与 Linux 101 第一课一同开展的 Linux 安装聚会活动。并且，此次是我们第一次完全在线上举行活动。   在寒假期间，我们组织同学编写了活动系列讲义，存放于 https://101.lug.ustc.edu.cn/ 上。为了解决同学们学习 Linux 的配置环境问题，考虑到无法现场帮助同学们安装系统，在活动开始前，我们打包了一些 Linux 虚拟机镜像，在安装虚拟机软件之后就「开箱即用」。   下午 2:30，活动准时开始。金孜达同学开始向同学们介绍 UNIX 与 Linux 的发展历史，各个 Linux 发行版的基本区别，以及一些自由软件相关的知识，最后向同学们简单地介绍了学生 Linux 用户协会。在直播期间，活动直播间的「最高人气值」高达 3569，不仅有社团内的同学参加，也有很多社团外甚至校外感兴趣的同学过来参加。   在下午 3:55 时，活动正式结束。今后的 Linux 101 课程将会更加深入地介绍 Linux 的使用以及一些原理，拥有可操作的 Linux 操作系统环境将会使同学们在今后的 Linux 101 课程中能够方便地实践学习，学会 Linux。   本次线上活动的尝试不仅为未来的活动形式打开了新的可能性，并且从中也可见，尽管受到了疫情的影响，但是同学们仍然有迫切的学习 Linux，以及计算机技术的需求。我们之后也会做得更好。   （校团委、校学生社团管理指导委员会、Linux 用户协会）  ","categories": ["LUG 活动"],
"tags": ["Linux 101"],
"url": "/news/2020/03/linux101-online/",
"teaser": null
},{
"title": "「开源软件供应链点亮计划——暑期 2020」USTCLUG 项目提案",
"excerpt":"「开源软件供应链点亮计划」是由中国科学院软件研究所发起并长期支持一项活动，旨在解决基础开源软件面临的许可、质量、维护和技术支持等问题，进而影响整个软件产业的供应链。而「开源软件供应链点亮计划——暑期 2020」是由中科院软件所与 openEuler 社区共同举办的一项面向高校学生的暑期活动，旨在鼓励在校学生积极参与开源软件的开发维护，促进国内优秀开源软件社区的蓬勃发展。     此活动与 GSoC (Google Summer of Code) 的模式类似：开源项目/社区提供项目需求与导师 (mentor)；学生申请项目通过后利用暑期的时间进行开发，将成果贡献给社区；主办方（中科院软件所与 openEuler 社区）根据评估结果给学生发放奖金。所有参与的社区列表可查看 https://isrc.iscas.ac.cn/summer2020/#/organisations。   今年夏天，USTCLUG (中科大学生 Linux 用户协会) 计划以社区身份加入此暑期活动。以下是我们计划的项目提案，也欢迎社团的各位同学提出建议。   本提案参考了清华大学 TUNA 协会（清华大学学生网络与开源软件协会）的项目提案，在此表示感谢。   在报名前，请先阅读由主办方提供的学生指南。   科大镜像站前端架构改进   项目描述：目前，科大镜像站的前端架构仍然沿用着 2013 年的设计，但是随着时间的发展，我们也发现目前的镜像站前端架构在用户体验、维护与部署上带来了一些不便。目前的镜像站主页是由一套 Python 脚本每小时从模板生成得到的，虽然足够使用，但是在维护中也遇到了一些问题，诸如界面设计的实用性、主页与 status 页面显示不一致等问题。本项目希望能够通过调整镜像站前端架构，提高用户体验，降低维护的复杂度，也方便其他需要的镜像站部署页面显示的解决方案。   项目难度：低   项目社区导师：付佳伟   导师联系方式：ibug@ustclug.org   合作导师联系方式：陶柯宇 taoky@ustclug.org   项目产出要求：以下要求不需要全部达到，选择感兴趣的方向即可      调整页面结构，与 Nginx FancyIndex 结合，提供美观的文件列表页面   改进页面功能，提供准确的仓库最近更新时间（可以参考 status 页面）            为了得到准确的更新时间，需要能够与多种同步后端结合，包括科大镜像站目前使用的镜像同步工具 Yuki，以及传统的 crontab + 同步脚本的方式           与帮助页面更好的结合，例如            自动为新的帮助页添加首页上的链接           提升易用性，例如            提供一个各大发行版的软件源配置生成器，方便用户快速切换软件源           美化页面，例如            使用响应式设计在不同平台上都能提供良好的显示效果       提供对深色模式的支持           前端工程化，提高可维护性，例如            使用 Sass 或 LESS 重构 CSS 结构       使用 Vue.js 实现前端模板和（部分）动态页面效果       分离获取更新时间等仓库信息的这部分逻辑，更方便与其他数据源对接           改善部署文档，方便其他需要的镜像站部署   项目技术要求：      熟练一种方便灵活的编程语言及该语言常用的模板框架，例如            Python 和 Jinja2       Ruby 和 ERB           或者熟悉一种静态网站生成器的使用，例如            Jekyll       Hugo           熟悉 web 纯前端开发   相关的开源软件仓库列表：      https://git.lug.ustc.edu.cn/mirrors/mirrors-index   https://github.com/ustclug/yuki   License: GNU GPLv2   Hackergame CTF 比赛平台改进   项目描述：Hackergame 是 USTCLUG 开发的一套开源 CTF 比赛平台，主要用于每年举办的科大信息安全大赛，随真实需求不断进行技术迭代，并且重视生产环境下的安全性和可靠性。目前使用的是 Django + Vue.js 框架，但前后端解耦仍然不够充分，代码中写死了一些不合理的规则，很多地方缺少通用性和灵活性，测试和部署也不够方便。本项目希望能通过调整架构设计，重构部分代码，得到一个更加通用、健壮的比赛平台，让将来比赛中的实际需求更容易实现。   项目难度：中   项目社区导师：王子博   导师联系方式：hypercube@0x01.me   合作导师联系方式（选填）：暂无。   项目产出要求：以下要求不需要全部达到，选择感兴趣的方向即可      在不影响安全性和可靠性的前提下，用 Django REST Framework 重构后端，用现代前端工具链（Yarn、webpack 等）重构前端   增加自动测试、Docker 化部署、持续集成等工具   通过重构去除代码中写死的规则，如登录方式、参赛组列表、每个参赛组需要收集的个人信息   改正一些不正确的业务模型，如：            题目应该支持打开链接、下载源代码、下载文件等操作，而不是只能打开一个 URL       用户组、用户属性和权限的模型需要重新设计       比赛应该有尚未开始、正在进行、暂停、结束等多种状态，而不是只有开/关两种           增加一些新功能，如：            让出题、导入题目、审查题目、修改题目等操作更容易       所有操作保留历史记录以便审计和回滚       支持动态分数题目       支持 I18N           项目技术要求：      熟练使用 Python 和 Django   了解前后端开发和运维全过程   会避免常见的 web 安全漏洞   相关的开源软件仓库列表：      https://github.com/ustclug/hackergame   License: MIT   镜像站单副本对象存储   项目描述：   传统文件系统（如 XFS）、ZFS、RAID 等解决方案对于镜像站的负载类型来说并不高效：首先在用户读取文件时，RAID 会带来读取放大，在用户读取小文件时影响尤甚；其次文件系统的元数据无法确保一直缓存于内存中，从而使列目录等操作容易成为性能瓶颈。   而使用单副本的对象存储可以解决以上的两个问题：由于镜像站的数据更像是缓存，允许丢失，因此可以采用单副本的方式存储，免去冗余保护。坏盘后只需更新元数据删除对应的文件，触发增量同步即可；而关于元数据，在对象存储的实现中，大多使用数据库存放元数据，而数据库性能调优有许多成熟的工具和经验。这对元数据访问优化是比较有利的。   本项目的难点在于：对象存储的实现需要考虑坏盘更新元数据，删除对应文件，平滑过渡、平衡各个磁盘的读负载，避免负载集中在同一块磁盘上，以及使用 SSD 加速读取请求。目前开源的对象存储实现（如 OpenIO 和 minio）都无法很好满足需求；另外，下游的 rsync 同步会带来较高的并发量，fuse 可能会带来性能问题。   在工业界中，CDN 缓存的需求（数据可靠性不敏感、数据量大、吞吐量高）与本项目希望解决的问题也是类似的。   项目难度：高   项目社区导师：高一凡   导师联系方式：yifan@ustclug.org   合作导师联系方式（选填）：暂无。   项目产出要求：      基于现有的对象存储实现进行修改，支持以上提到的部分特性，包括：            坏盘更新元数据，删除对应文件，平滑过渡       平衡各个磁盘的读负载，避免负载集中在同一块磁盘上       SSD 加速读请求（可选）           测量下游的 rsync 同步为对象存储方案带来的性能影响。（可选）   服务器集群（可选）            使用单副本的方式，一旦磁盘故障，在下次成功同步之前，将会出现镜像不完整的问题。此时可以从集群中的其他节点获取数据。       镜像分级。对于不重要的镜像（或目录），可以在多个节点之间共享一个副本，从而提高可用空间，为更多镜像服务。           项目技术要求：      熟悉任何一种高性能的编程语言   能够阅读并理解现有对象存储的实现，以提出改进方案   对文件系统的实现有一定了解   相关的开源软件仓库列表：      https://www.openio.io (开源对象存储实现)   https://github.com/minio/minio (开源对象存储实现)   https://github.com/openstack/swift (开源对象存储实现)   https://rclone.org/ (S3 API fuse 实现)   https://github.com/kahing/goofys/ (S3 API fuse 实现)   License: 与指定修改的开源对象存储实现相同。   rsync 反向代理   项目描述：   镜像站通常会借助 rsync 协议，在上下游之间同步数据。在实践中，我们遇到的问题是：当有两台服务器分别存储不同的镜像内容（例如，一台存储热门内容，另一台存储冷门镜像），对外提供 rsync 服务时， 接入点无法统一。   本项目希望以反向代理 rsync 服务的方式解决此问题。 即：所有 rsync 请求通过一台统一的反向代理服务器，根据请求的 module name 代理至不同后端服务器。   项目难度：中   项目社区导师：高一凡   导师联系方式：yifan@ustclug.org   合作导师联系方式（选填）：暂无。   项目产出要求：      实现 rsync 反向代理            解析 rsync 握手协议       处理不同协议版本号间的兼容性           支持透明代理特性（可选）   项目技术要求：      对网络编程有一定了解   能够阅读并理解 rsync 工具源代码，理解其协议   相关的开源软件仓库列表：      https://git.samba.org/?p=rsync.git (原版 rsync)   https://github.com/tuna/rsync (TUNA 实现的 rsync，缓存元数据在内存中以减少磁盘开销。科大镜像站目前亦使用此版本的 rsync 为下游提供服务。)   License: 自定，OSI 组织认证的开源协议即可。注意：如果计划在完成项目时使用 rsync 的源代码，则协议需要使用 GNU GPLv3。  ","categories": [],
"tags": [],
"url": "/news/2020/05/opensource-summer-projects/",
"teaser": null
},{
"title": "近期部分服务中断通知（已修复）",
"excerpt":"2020-06-05 10:27 Update 5   ESXi 主机所在网段网络不稳定的原因已经查明，与网段内 ARP 包相关。目前已经修复。   此外，反向代理于 2 日进行了一些调整，详情见 https://github.com/ustclug/discussions/issues/325#issuecomment-637319675。   2020-05-31 22:45 Update 4   间歇性的网络问题仍然存在，我们将继续排查问题。   2020-05-31 14:09 Update 3   在校园网路由清空了内部转发表后，目前 ESXi 主机已经运行 7 小时而未出现网络问题。我们仍在监测问题是否已经解决。   2020-05-30 16:15 Update 2   我们注意到 ESXi 主机再次出现了间歇性的网络问题。包括 git.lug.ustc.edu.cn 在内的服务受到影响。我们正在尝试排查问题。   2020-05-26 23:10 Update 1   git.lug.ustc.edu.cn 目前已经恢复。     近期 USTCLUG 的一部分网络服务出现中断，具体情况如下：      *.proxy.ustclug.org（开源软件反向代理）与 servers.ustclug.org（服务器新闻站）的校外访问，24 日晚由于服务器月流量超额而暂停，具体情况见 https://github.com/ustclug/discussions/issues/325。在 6 月份服务恢复后，我们将对反代服务进行调整。   git.lug.ustc.edu.cn 于今日晚 22:24 由于 ESXi 主机的未知故障而下线。我们正在尝试修复。   2020-05-26 23:00:00  ","categories": ["LUG 服务器"],
"tags": [],
"url": "/news/2020/05/servers-down/",
"teaser": null
},{
"title": "新网站上线啦",
"excerpt":"经过多位成员连续多日的努力，Linux 用户协会的网站焕然一新。现在你所看到的页面正是我们新网站上线后的第一篇新闻。   新的网站采用 Jekyll 静态网站方案，基于 minimal-mistakes 修改的主题，并使用 GitHub Actions 自动构建，利用 webhook 通知服务器自动部署。   重新设计的网站架构带来了多方面的好处：      首先是更美观了：我们选用的主题既适用于首页等展示性页面，又适用于 wiki、文档、文章等内容性页面，同时还采用了响应式设计 (responsive design)，使得同一个页面在不同大小的屏幕上都能获得较好的显示效果   功能方面，我们终于将 wiki（即本网站）、news（社团新闻）和 planet（社团博客）合并到了一起，一定程度上解决了社团网站太多、内容过于分散、账号系统混乱的问题   基于 Git 的版本管理和协作更加方便：如同我们的旧新闻站，现在我们所有修改都有完整的历史记录，同时也能以 Pull Request 的形式接受投稿及修改建议   更易于维护及部署：纯静态的网站不需要维护数据库及 PHP 运行环境等，只需要一个能提供静态文件的服务器即可运行。我们采用了 OpenResty 作为 HTTP 服务器，在使用 Nginx 的同时还能通过 Lua 代码提供 webhook 相关功能   本网站的源码位于 ustclug/website，以 Creative Commons Attribution-NonCommercial-ShareAlike (BY-NC-SA) 4.0 协议开源。   原来的网站（wiki）已移动至 https://lug.ustc.edu.cn/oldwiki，旧新闻站仍保留在 https://news.ustclug.org/，其内容不再维护，留作存档。  ","categories": ["LUG 网站"],
"tags": [],
"url": "/news/2020/08/new-website/",
"teaser": null
},{
"title": "2020 软件自由日中国科大站",
"excerpt":"2020 年 9 月 26 日，USTCLUG 在西校区 3C103 教室开展了本学期第一个大型活动：软件自由日（Software Freedom Day）。   本次活动我们邀请了来自中科院软件所 PLCT 实验室的李威威，以及校内的陈泳融和明宇龙同学，为我们带来了精彩的演讲。   李威威为我们介绍了他所在的程序语言与编译技术实验室在编译技术领域进行的开源贡献。陈泳融同学带领我们走近 Swift 语言，了解 Swift 作为开源项目的发展进程和发展模式以及如何参与 Swift 项目与社区建设。Linux 用户协会 CTO 明宇龙同学向我们介绍了最近十分热门的 Rust 语言，并带领我们一步一步地使用 Rust 语言写出我们自己的内核。   不到 7 点，同学们便陆续来到教室。LUG 为大家提供了一些关于 LUG 和开源/自由软件的徽章、贴纸等纪念品以及饮料和零食，供大家自行取用。   武汉深之度科技公司（Deepin）给 LUG SFD2020 提供了贴纸、钥匙扣等纪念品，在此表示感谢。         七点整，软件自由日活动开始。   首先是 Linux 用户协会会长袁一玮介绍了今年软件自由日的日程安排以及闪电演讲的报名等事宜，之后便正式开始了今天的自由软件日活动。      首先是来自 PLCT 的李威威，他首先介绍了程序语言与编译技术实验室的背景，讲述了实验室的主要工作与目标。其次，他介绍了他们实验室的 RISCV 轻量级模拟器 spike 和 QEMU 的 RISCV vector v0.9 支持上所做的工作，这些都已经在 GitHub 上面开源，供大家修改、审计以及添加需要的功能。在结束后，李威威对同学们的问题一一做出了回答。         同时，我们在两场演讲的间隔中准备了零食与饮料供大家补充能量。         第二位演讲者是陈泳融，他带我们走近了 Swift 语言，首先介绍了苹果开源社区现状。   在 2015 年时，苹果拥抱了开源社区，将自己的代码共享出来，让社区共同参与语言的演进。      陈泳融带领我们了解 Swift 作为开源项目的发展进程和发展模式，以及如何参与 Swift 项目与社区建设。介绍了一个十分重要的概念：swift-evolution，介绍了社区如何通过 swift-evolution 帮助改进 swift 的语言特性，乃至 evolution 自身。      之后，明宇龙同学为我们讲解了如何用 Rust 构建安全的裸金属系统。   Rust 是新一代高性能且安全可靠的程序设计语言，已经被 Mozilla 基金会及其社区用在开发 Firefox 浏览器的引擎、编译器和操作系统上。Rust 解决了人们想要 C++、C 的速度和效率、但又不想解决 C++、C 中处理内存所固有的难题的问题。明宇龙同学的演讲让很多不了解 Rust 这个小众新兴语言的同学对 Rust 系统编程有更深入的理解。      在明宇龙同学结束演讲后，便来到了闪电演讲的环节。会长袁一玮向大家简单介绍了闪电演讲的要求后，闪电演讲的报名与小憩同时进行。与此同时，还有来自自由软件基金会（FSF）的自由软件日公益广告（Shoe tool），让大家意识到自由软件存在的价值和意义。   首先是马凯同学为我们带来了 emacs 的使用，从安装到基础的 lisp 语言入门，告诉我们可以通过 lisp 语言快速地完成一个小功能或者插件的编写，这对于 vscode、notepad++ 用户是一个新鲜的概念，我们通常要为插件专门创建一个项目，并且要为插件进行较完备的测试。而 lisp 编写的插件，可以直接在当前窗口调出一个编写插件的窗口，直接快速创建一个可以立即测试并使用的插件。除此之外，马凯还介绍了许多 emacs 的其他用法，都等我们带来了许多新鲜的使用理念。      第二位报名闪电演讲的同学是吴雨飞，他介绍了 TiddlyWiki 笔记软件，这是一个单文件的笔记软件，HTML 文件既是笔记界面，又是笔记数据保存的位置，便于备份以及分享。同时，TiddlyWiki 还能够实现演示文档的功能，通过几步即可实现简单的演示功能。      第三个闪电演讲是由明宇龙同学带来的 Antigen，是 zsh 的另一个插件管理器，可以作为 oh-my-zsh 的替代，或者与 oh-my-zsh 配合使用，增强其功能。      在 10 点时，大家的演讲全部结束，自由软件日圆满结束。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2020/09/software-freedom-day/",
"teaser": null
},{
"title": "游戏安全与 Cheat Engine 核心指北",
"excerpt":"在 2020 年 10 月 17 日，USTCLUG 在西校区 3C102 教室开展了一次 Linux 用户协会小聚活动，邀请了李晨宇同学分享标题为《游戏安全与 Cheat Engine 核心指北》的演讲。   不到七点，就已经有较多的同学来到了教室，等待演讲的开始。在临近开始时，200 人的教室已接近满员。是 LUG 参与人数最多的活动之一。      在开始前，李晨宇同学重申了游戏逆向可能带来的法律风险，告诫同学们绝不可使用逆向工具从事非法的事情。我们固然是科技类社团，但是应当让科技在管控之下，方能使其发挥最大的效用。      之后，李晨宇同学便正式开始了今天的演讲。他介绍了今天的演讲所使用的软件 Cheat Engine，并介绍了 Lua 脚本语言。他的可移植性以及较高的性能，得到了大家的青睐，许多安全工程师都会使用 Lua。   同时，他也介绍了，作为一个 Hypervisor，它提供了对程序与内核之间隔离的方法，使得既是在调试过程中程序崩溃了，甚至导致虚拟出来的内核出错，也不会影响运行中的内核。保证了安全性。      在介绍完了理论知识之后，李晨宇同学使用 Cheat Engine 介绍了如何给 PvZ 这个热门的游戏制作外挂。使用 Lua 的脚本，我们能够实现代码注入，内存查找，代码劫持等功能，如此，我们可以实现包括且不限于向日葵无限产生阳光、秒杀、没有技能冷却的时间、加快时间等操作。虽然看起来这个游戏变得无趣了，但是我们通过游戏逆向的方法，我们掌握了基本的内存存储方法，代码执行等基础技能。      在最后，李晨宇同学带领我们完成了简单的上手实践，回答了同学们的一些问题，并且给同学们点出了相应的学习资料。   至此，本次小聚圆满结束。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2020/10/ce-and-reverse/",
"teaser": null
},{
"title": "LUG 全员大会",
"excerpt":"在 2020 年 10 月 24 日星期六，USTCLUG 在西校区 3C102 教室召开了 LUG 全员大会，由 LUG 主要成员向新成员介绍 LUG 组织的各项精彩活动、维护的服务等信息。   七点整，LUG 全员大会正式开始。      首先，Linux 用户协会会长袁一玮简要介绍了 LUG 概况，包括 LUG 的建立、荣誉、组成以及 LUG 的目标，为新成员解答了“LUG 是什么”这一问题。      LUG 是一个以推广自由软件文化、宣传自由软件价值为目的的协会组织，为带给科大的 Linux 等技术爱好者一个交流学习的环境而努力。   接下来，由 Linux 用户协会 COO 罗丽薇介绍 LUG 所举办的丰富活动。 她先是回顾了刚举办不久的 SFD（软件自由日）和每周小聚，让新成员了解到 LUG 所举办的这类分享活动的形式和主题。      之后，她向新成员介绍了 LUG 即将举办的 Hackergame 活动，鼓励新成员在这一充满趣味性的比赛中学习并得到成长。   她还提到了 LUG 常有的参观网络信息中心活动以及每年举办的 Linux101 活动，展示了 LUG 往年制作的精美版衫、贴纸和徽章，让新成员对 LUG 丰富而精彩的日常活动有了充分的了解。   最终，罗丽薇同学向新成员介绍了 LUG 的各种活动通知方式以及 LUG 的联系方式，让新成员能够与 LUG 有更紧密的联系。   罗丽薇同学做完对 LUG 活动的介绍后，由会长袁一玮对 LUG 提供的网络服务进行介绍。 Mirrors 开源软件镜像站、LUG Gitlab、LUG FTP、网络加速服务等，都是能为同学们提供极大帮助的服务。      最后，袁一玮同学展示了 LUG 全员大会的职能。在确认没有同学提出修改章程后，本次 LUG 全员大会圆满结束。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2020/10/freshmen-meeting/",
"teaser": null
},{
"title": "中国科学技术大学第七届信息安全大赛圆满结束",
"excerpt":"2020 年 11 月 7 日中午 12:00，网站提交答案的窗口关闭，也宣布着第七届信息安全大赛落下帷幕。   经统计，在本次比赛中，总共有 3733 人注册，2410 人至少完成了一题。比赛期间所有人合计提交了 23545 次 flag，其中有 12240 次是正确的提交。本次比赛由浙江大学、哈尔滨工业大学、吉林大学、西安交通大学、重庆大学、北京邮电大学、东北大学和南京航空航天大学的计算机类的社团或战队协办，此外还有来自其他高校的同学参加比赛。其中昵称为 mcfx 的同学获得总榜的第一名，最终 AK、以 7100 分结束比赛；中国科学技术大学的本科生选手谢强以总分 3800 分获得校内榜（不含已毕业同学）第一、总榜第 17 的好成绩。本次比赛校内参加人数众多，共计 395 人参与，其中有 297 名本科生。   赛后主办方的统计，最终确定了获奖名单，并为校内参赛的同学颁奖。2020 年 12 月 6 日晚，第七届信息安全大赛颁奖仪式在西区 3A111 举行。      校内冠军谢强荣获一等奖。      崔泽仁、邓龙、疏智磊、韩睿天、谢璟毅五位选手获得二等奖。      还有李嘉豪等二十五位选手获得三等奖。      此外还专门设置了面向大一新生的新生特别奖两名，分别为崔泽仁和 Goh Yi Hang。此外，还颁发了一血奖和分类奖。   自 2014 年起，科大信息安全大赛已经连续举办了七届，往届比赛均顺利进行，规模盛大、影响甚广。第七届信息安全大赛由中国科学技术大学网络空间安全学院、中国科学技术大学校团委、中国科学技术大学管指委主办，中国科学技术大学学生 Linux 用户协会、中国科学技术大学微软学生俱乐部、中国科学技术大学 NEBULA 战队和中国科学技术大学信息安全俱乐部承办，并由浙江大学 AAA 战队、哈尔滨工业大学 Linux 开源学生俱乐部等协办。本次比赛延续了往届的优良传统，努力结合科大特色，坚持向新生倾斜的原则，控制题目难度梯度，强调引导和教育工作。   本次比赛的题目分为 4 类，包含了综合技能、程序逆向与漏洞利用、密码学与数学和网站安全类题目，在具有一定教育意义的同时也不失趣味性。例如，“从零开始的火星文生活”一题让选手了解了文本编码的知识；“来自一教的图片”一题则结合了物理学的傅里叶光学实验；而“超安全的代理服务器”一题和 http2 的 feature 推送（PUSH）有关。   赛后承办方组织参赛选手于网上 https://github.com/USTC-Hackergame/hackergame2020-writeups 撰写了题目解答。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2020/12/hackergame-2020/",
"teaser": null
},{
"title": "无主题小聚",
"excerpt":"2020 年 12 月 13 日，USTCLUG 和 MSC 在西区 3A109 教室开展了本年度第一次无主题小聚活动。   明宇龙同学从介绍时代背景开始，表示了民用 CPU 核心数的增加和 GPU 计算的普及，并行变得越来越重要。他从异步和多进程开始，讲述了多进程和资源的概念、各种语言的多进程实现和其弊端，引出了线程、纤程和协程的概念。         之后由李文睿同学介绍 Grafana，一个能将服务器的运行状况可视化的软件。他以一个开源社区游戏为例，详细地讲述了如何使用 TIG 套件监视游戏的在线人数、服务器的运行状况等等信息。      陶柯宇同学介绍了如何使用 Electron 框架开发跨平台桌面应用程序，分享了他近期积累的相关经验。他从各种操作系统下有的图形库开始，引出了 Electron 基础的用法。同时，他结合自己之前做的一个项目，详细地为大家讲解了 Electron 的配置。      古宜民同学讲述了如何使用 Vivado 的 Debug 模式调试 Verilog 代码，分享了在 FPGA 开发方面的一些经验。      付佳伟同学讲述了静态网站的搭建，并且拿了 LUG 官网和几位同学的博客作为例子进行比较。      郑子涵同学通过两个程序示例介绍了 x86 和 arm64 在内存模型方面的差异。     ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2020/12/multitopic-party/",
"teaser": null
},{
"title": "无主题小聚",
"excerpt":"2020 年 12 月 27 日，USTC LUG 和 MSC 在西区 3C101 教室举办了本年度第二次无主题小聚。   金泽文同学介绍了 Serverless Computing，他以一个生动的例子开篇，展示了 Serverless 的巨大优势，随后深入介绍了 Apache OpenWhisk 的具体实现和 Serverless 目前的局限性。      随后，古宜民同学介绍了 GRUB 和 Linux 启动修复，他从 GRUB 在 Linux 启动中的作用开始，讲解并演示了如何在 GRUB 启动失败时进行修复。      接下来，刘紫檀介绍了他近期参与搭建的 Verilog OJ 在线评测系统。      之后，袁一玮同学介绍了手机实现快充的原理，简述 USB-PD 协议的定义。      最后，明宇龙同学即兴发挥，分享了自己使用 AWS Lambda、Azure Function 和 Cloudflare Worker 的心得体会，介绍了自己 Serverless 架构的博客。     ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2020/12/multitopic-party-2/",
"teaser": null
},{
"title": "无主题小聚",
"excerpt":"2021 年 3 月 31 日下午，我们在西区 3A108 教室开展了本学期的第一次小聚，由明宇龙和袁一玮两位同学主讲。      从 jQuery 到 React、从 webpack 到 esbuild，前端开发迭代出了纷繁复杂的工具链。 明宇龙同学从 JavaScript 的历史讲起，系统梳理了 Web 前端开发工具的历史沿革，结合自己的学习历程，概述了前端开发的现状。      袁一玮同学则介绍了家庭组网各种方法。开始简略描述了常见的 frp 反代、突破 ISP 的 NAT，到 zerotier 一键组网，再到自己使用 Tinc 和 WireGuard 在本地进行组网和开发不再活跃的 Tinc 所带来的缺陷，最后介绍了使用 OSPF 和 BGP 在内网路由的 dn42、扮演 ISP、注册 ASN、拿到 IPv4 和 IPv6 地址池并进行广播。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2021/03/multitopic-party/",
"teaser": null
},{
"title": "Linux 101 第一课",
"excerpt":"2021 年 4 月 11 日下午，USTCLUG 在西区 3C104 教室举办了 Linux 101 活动的第一课：LIP（Linux Install Party）。      Linux 101 是 USTCLUG 每年举办的 Linux 教学活动系列。在此系列活动中，USTCLUG 将介绍 Linux 的方方面面，带领大家认识 Linux、熟悉 Linux，掌握基本的 Linux 使用技巧，从而提高工作效率、增加个人技能。      LIP 是 Linux 101 的第一课。正如其名，USTCLUG 在此次活动中为前来的同学指导安装了 Linux 的各个发行版，解决了同学们基本的 Linux 安装问题。USTCLUG 的指导员热情友善，参加的同学们乐于发问、渴求知识，活动取得了巨大的成功。      同学们借助此机会认识了 Linux 的基本特点，也为大家埋下了中国开源社区的基础。         此次 LIP 活动只是 Linux 101 活动系列的第一课，之后将会有进一步的课程举办，欢迎大家前来参加！  ","categories": ["LUG 活动","Linux 101","Linux Install Party"],
"tags": [],
"url": "/news/2021/04/linux-101-1/",
"teaser": null
},{
"title": "Linux 101 第二课",
"excerpt":"2021 年 4 月 18 日下午，USTCLUG 在西区 3C104 教室举办了 Linux 101 活动的第二课：Shell 基础、软件和命令行工具。      Linux 101 是 USTCLUG 每年举办的 Linux 教学活动系列。在此系列活动中，USTCLUG 将介绍 Linux 的命令行使用技巧，带领大家认识 Shell、熟悉 Linux 的基本命令行工具，掌握基本的 Linux 使用技巧，从而提高工作效率、增加个人技能。         这是 Linux 101 的第二课。USTCLUG 在此次活动中为前来的同学提供了基本的命令行操作教学，解决了同学们 Linux 的基本使用问题。USTCLUG 的指导员热情友善，参加的同学们乐于发问、渴求知识，活动取得了巨大的成功。同学们借助此机会认识了 Linux 的基本特点，也为大家埋下了中国开源社区的基础。   此次活动是 Linux 101 活动系列的第二课，之后也将会有进一步的课程举办，欢迎大家前来参加！  ","categories": ["LUG 活动","Linux 101"],
"tags": [],
"url": "/news/2021/04/linux-101-2/",
"teaser": null
},{
"title": "「开源软件供应链点亮计划——暑期 2021」USTCLUG 项目提案",
"excerpt":"「开源软件供应链点亮计划」是由中国科学院软件研究所发起并长期支持一项活动，旨在解决基础开源软件面临的许可、质量、维护和技术支持等问题，进而影响整个软件产业的供应链。而「开源软件供应链点亮计划——暑期 2021」是由中科院软件所与 openEuler 社区共同举办的一项面向高校学生的暑期活动，旨在鼓励在校学生积极参与开源软件的开发维护，促进国内优秀开源软件社区的蓬勃发展。     此活动与 GSoC (Google Summer of Code) 的模式类似：开源项目/社区提供项目需求与导师 (mentor)；学生申请项目通过后利用暑期的时间进行开发，将成果贡献给社区；主办方（中科院软件所与 openEuler 社区）根据评估结果给学生发放奖金。所有参与的社区列表可查看 https://summer.iscas.ac.cn/#/org。   今年夏天，USTCLUG (中科大学生 Linux 用户协会) 计划以社区身份加入此暑期活动。以下是我们计划的项目提案，也欢迎社团的各位同学提出建议。   在报名前，请先阅读由主办方提供的学生指南。   通用反向代理缓存程序   项目描述：受到磁盘空间等的限制，镜像站有些时候无法完整同步上游的文件。退而求其次，能否只缓存“流行”的文件？能否在对缓存的总容量大小与文件过期时间进行限制的情况下管理缓存的文件？能否查看缓存命中率等指标，进行问题排查与优化？尽管现有的反向代理实现能够做到缓存，但是配置并不够灵活，无法满足需求。本项目计划构建一个灵活的、适用于镜像站场景的通用的 HTTP 反向代理缓存程序，提高用户体验。   项目难度：中   LICENSE：自选开源协议。   项目社区导师：陶柯宇   导师联系方式：taoky AT ustclug.org   合作导师：明宇龙   联系方式：myl AT ustclug.org   项目产出要求：一个稳定的、经过测试可用的 HTTP 反向代理缓存程序（缓存得到的文件存储在传统文件系统上），包括以下要求：      包含对缓存总大小与文件过期时间限制的缓存规则实现。            能够定时或实时清理不符合缓存条件的文件。           用户可编写配置文件，针对符合不同规则的路径，配置不同的缓存规则。   实现日志与用量统计。   通过有效性测试，可正确对 pypi/conda 镜像设置反代。   项目技术要求：      对 HTTP(S) 相关协议有基础了解。   有高性能的网络编程语言的编程能力。   有使用内存数据库的经验。   相关开源软件仓库列表：      https://github.com/sjtug/mirror-intel（SJTUG 镜像的智能缓存方案，缺少本提案中计划的一些特性）   Rsync 在传统文件系统架构上的性能改进   项目描述：Rsync 是镜像站上下游间进行同步的事实标准，但是由于每次同步时 rsync 服务器与客户端都需要扫描一遍本地的文件列表，即使只有少量的文件需要更新，每次同步仍然会带来很高的 I/O 消耗，大幅度提高了服务的负载，降低了服务性能。本项目计划通过修改 rsync 服务端与客户端的实现，在不大幅影响整体架构的情况下优化 rsync 对文件元数据的读写性能（读取为主），降低镜像站的负载，提升 rsync 同步速度与服务性能。   项目难度：高   LICENSE：自选开源协议。对 rsync 的修改需要以 GPL v3 发布。   项目社区导师：陶柯宇   导师联系方式：taoky AT ustclug.org   合作导师：明宇龙   联系方式：myl AT ustclug.org   项目产出要求：本项目包含对 rsync 服务端和客户端这两个部分进行改进的要求。以下要求作为参考，如果有更好的 idea 在讨论后也可实现。      Rsync 客户端            修改 rsync 客户端，使其能够访问 rsync-huai 的元数据，以在同步时减小对主仓库的磁盘压力。       修改 rsync 客户端，针对镜像站场景减少多余的本地读写，提高性能。           Rsync 服务端            不修改服务端（rsync-huai）的源代码，而是使用 FUSE 设计高性能的、只存储文件元数据的文件系统存储文件元数据。例如，可以将元数据存储在内存数据库中，以减小 rsync-huai 在获取文件元数据时对磁盘的压力。       或者，修改服务端代码，使其可以绕过 kernel (FUSE) 直接连接相关数据库读取元信息。           项目技术要求：      有 rsync 的使用经验。   C 语言编程能力，以及其他系统开发语言（如 C++, Go, Rust 等）的编程能力。   有 FUSE 的编程经验。   相关开源软件仓库列表：      https://rsync.samba.org/（Rsync 官方实现）   https://github.com/tuna/rsync（Rsync-huai 实现）   https://github.com/facebook/rocksdb（RocksDB 数据库，可作为在实现使用 FUSE 的元数据文件系统的参考）   全连通内网守护程序   项目描述：一个组织的鉴权接口、数据库接口等服务都不应在公网公开，而内网（IntraNet）的瓶颈通常会出现在转发流量的网关上，若任意两台机器间直连则可以让总网络压力下降不少（一般需要借助中心节点协助 NAT 后的机器打洞）。Tinc 等优秀项目年久失修、无人维护，WireGuard 等新兴 Site2Site 的虚拟专用网络较轻便简单但是未实现 mesh、会对中心网关产生较大的流量压力。本项目计划构建一个灵活高效的全连通内网守护程序（IntraNet VPN）。   项目难度：中   LICENSE：自选开源协议。   项目社区导师：袁一玮   导师联系方式：totoroyyw AT ustclug.org   合作导师：明宇龙   合作导师联系方式：myl AT ustclug.org   项目产出要求：一个稳定的、全连通内网守护程序，包括以下要求：      用户可方便地对内网中的节点进行增删与同步配置（亦可选用其他虚拟专用网络实现作为基础）            基于 WireGuard，将 AllowedIPs 变为 AllowedMacs（实现基于 Mac 地址而非 IP 地址的配置描述）       在内网新加入一台机器后，整个内网可以自动更新、同步节点配置（选做）           通过有效性测试，可以在快速路由迭代后实现任意节点间的 mesh 连接   程序尽可能高效，减少内网中较大流量机器的 CPU 压力   可以让两台在 NAT 之后的机器直接相连（选做，假设 NAT 打洞完可以持续使用）   项目技术要求：      对 OSI 二层或三层模型有所了解，对内网搭建和架构有所了解   有高性能的网络编程语言的编程能力   相关开源软件仓库列表：      https://github.com/cloudflare/boringtun (Rust 下的用户态 WireGuard 实现)   https://github.com/WireGuard/wireguard-go (Go 下的 WireGuard 实现)   https://gitlab.com/NickCao/RAIT/ (基于 WireGuard 的三层分布式全连通网络实现，缺少本提案中计划的一些特性)   https://github.com/gsliepen/tinc (工作在 OSI 二层或三层的全连通网络实现，但其已年久失修，最近一次稳定版 release 是两年前)  ","categories": [],
"tags": [],
"url": "/news/2021/04/opensource-summer-iscas/",
"teaser": null
},{
"title": "2021 Linux 板版衫设计方案征集",
"excerpt":"经过了去年的疫情，时隔一年，Linux 板 &amp; USTC LUG 版衫企划再次启动啦！   跟往年一样，首先征集设计方案。   5 月中旬将通过投票选出最受欢迎的设计方案，并启动预订。尽力在 6 月份毕业生离校前完成版衫制作和发放。   设计要求      主题：Linux 与自由软件，体现瀚海星云 Linux 板或 USTC LUG 特色   底色：不限，建议至少包含白色、黑色设计方案   图案：正面或双面图案（可设袖标），提交图案分辨率不低于 300DPI，并附简单效果图说明图案位置。   授权：投稿作品默认以 CC BY-SA 4.0 协议发布。如果选择其他授权，则应确保作品可以在 CC BY-SA 协议下再发布。   投稿方式      方式 1：回复瀚海星云 BBS 的征集贴，以附件形式附上设计图   方式 2：发邮件至 lug@ustc.edu.cn，标题「2021 版衫设计方案投稿」   方案选择   若方案多于 1 种，则通过投票来选出最终方案。投票将在方案征集后一周进行。   奖励      被选中方案的设计者可免费获得两件 2021 Linux 板版衫。   得票前 6 名的其他未选中方案，设计者可免费获得一件 2021 Linux 板版衫。   征集时间   即日起至北京时间 5 月 16 日（周日）23:59:59。   参考   LUG 相关素材 往届板衫设计图  ","categories": ["LUG 活动"],
"tags": ["LUG","版衫"],
"url": "/news/2021/04/lug-banshan/",
"teaser": null
},{
"title": "Linux 101 第三课",
"excerpt":"2021 年 4 月 28 日，中国科学技术大学 Linux 用户协会在 3A211 教室举办了本学期第三次 Linux 101 课程，本次课程的主要内容是 Linux 下的用户管理和权限机制，同时介绍了 Linux 下文件系统层次规范，主讲同学准备了大量操作演示。同时，同学们交流了近期 Linux 使用存在的若干问题，现场氛围融洽。   讲稿现已上传 LUG FTP。  ","categories": ["LUG 活动","Linux 101"],
"tags": [],
"url": "/news/2021/04/linux-101-3/",
"teaser": null
},{
"title": "Linux 101 第四课",
"excerpt":"2021 年 5 月 16 日，中国科学技术大学 Linux 用户协会在 3C101 教室举办了本学期第四次 Linux 101 课程，本次课程的主要内容是 Linux 下的进程的概念，由主讲同学刘隆邦同学带来课程。   在课堂上，刘隆邦同学准备了大量的演示操作，通过 htop 以及多个小程序展示了进程和信号的概念。   讲稿和活动视频现已上传 LUGFTP：https://ftp.lug.ustc.edu.cn/%E6%B4%BB%E5%8A%A8/2021.05.16_Linux_101_%E7%AC%AC%E5%9B%9B%E8%AF%BE/linux-101-ch04.pdf。  ","categories": ["LUG 活动","Linux 101"],
"tags": [],
"url": "/news/2021/05/linux-101-4/",
"teaser": null
},{
"title": "PCB 设计与电子制作入门",
"excerpt":"6 月 5 日，USTC LUG 与无线电协会在西区 3A108 教室举办了主题为“PCB 设计与电子制作入门”的小聚，由古宜民同学主讲。在介绍了 PCB 设计的基本流程后，他演示了 Altium Designer 和开源工具 KiCAD 的使用，同时分享了自己从设计到联系厂家加工的经验心得。现场同学们积极提问，气氛融洽。   讲稿和活动视频现已上传 LUGFTP：https://ftp.lug.ustc.edu.cn/weekly_party/2021.6.5_PCB%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%94%B5%E5%AD%90%E5%88%B6%E4%BD%9C%E5%85%A5%E9%97%A8/。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2021/06/pcb/",
"teaser": null
},{
"title": "2021 Linux 板版衫开始预订!",
"excerpt":"经过版衫方案投票结果（2021 Linux 板版衫候选方案公布与投票），我们最终确定了 2021 Linux 版衫样式，并从即日起开始接受预定。   经过统计，方案二的票数位居第一，恭喜设计者邓同学，也非常感谢其他投稿的同学。投票结果见附 1。   我们和供应商 T 社（tshe.com）沟通后决定制作黑色，白色两种底色版本，效果图如下：      另，原投票中方案二后背的文字是 join，而实际设计者提供的原稿文件为 login，经过决策后，我们选择 login 作为最终定稿版，在此勘误，希望大家谅解。   预定说明   版衫定价：70.00 元/件   付款方式：支付宝转账（详见预定表单）   预定截止时间：2021 年 6 月 22 日 23:59:59 (UTC+8)   注意事项：      在校同学可以在到货之后自提，时间不限（如：暑期和下学期）。不在校的同学请填写准确的邮寄地址，我们将在收到版衫后统一以快递到付寄出（预计 6 月 30 日）   预定和付款同时进行，请在填写表单后尽快完成支付宝转账，备注信息填写预定者手机号   如订单无效或未制作，付款将全额原路返还   如需预定不同尺码，请多次填写表单   尺码表见附 2   出于成本考虑，两种颜色订单数合计大于 50 件才会制作   按照投票人数估计，单件制作成本约为 70 元，如因预定数量提高，单件价格最终低于 70 元，则结余资金将作为 USTCLUG 社团经费，并公开使用情况   任何问题请及时通过 goods@ustclug.org 和我们联系，预定截止后恕不接受退款   预定方式：填写 https://forms.office.com/r/tmLyZ97zQ7 中的表单，或扫描以下二维码预定。      如有其他问题欢迎邮件联系。联系邮箱：goods@ustclug.org   附 1：投票结果                  方案       票数       比例                       方案一       43       30.9%                 方案二       58       41.7%                 方案一       38       27.3%           附 2：尺码表      附 3：彩蛋   我们也收到了一份娱乐版的版衫，相关的设计文件已经放在 https://ftp.lug.ustc.edu.cn/%E7%89%88%E8%A1%AB/2021banshan/amusement/。欢迎感兴趣的同学自行取用 :D  ","categories": ["LUG 活动"],
"tags": ["LUG","版衫"],
"url": "/news/2021/06/lug-banshan-order/",
"teaser": null
},{
"title": "2021 软件自由日中国科大站",
"excerpt":"2021 年 9 月 25 日，开源社区传统活动软件自由日（Software Freedom Day）于下午 2 点 30 分在西区 3C101 教室如期举行，本次活动我们邀请到来自 TUNA 的 Zenithal 同学，以及 18 级曹嘉琪、19 级蔡智臻同学为我们带来精彩的演讲。除此之外，在闪电演讲环节中 21 级新生袁宝杰、科大校友吴峰光、以及来自线上的 Zhou Zhiqiang 三位演讲者的精心准备也为我们带来意外惊喜。   得益于第二课堂系统以及社团游园会的宣传，本次活动在新生中的影响力空前，大量新生来到现场参与本次自由软件日活动。也许对于大部分新同学而言，演讲的内容对于他们是陌生的，也无法通过一次演讲对其主 题进行全面地了解和深入的理解，然而演讲的内容仍然可在记忆之中沉淀，形成对技术的认知。      2 点 30 分，简短的活动引入环节扼要地介绍了今日的流程安排和演讲嘉宾后，软件自由日活动正式开始。   首先由蔡智臻同学为我们介绍堪称开源界明星的 wireguard 组件。只需寥寥几行配置，活动室的机器和演讲者的主机便处于同一局域网下，继承了 Unix 哲学一贯的简单优雅。随后，蔡智臻同学深入介绍了背后的逻辑——做为内核模块工作时，其将自身模拟为网络设备，复用系统的 TCP/IP 路由表实现网络的通信与中继。在享受嵌入内核模块获得极致的速度提升的同时充分利用了利用已有的路由配置规则，降低了维护者学习记忆的成本，与配置复杂的 IPsec 以及在用户态与内核态往复横跳的 OpenVPN 相比在实际应用层面上高下立判。其实这一思想正是著名的“一切皆文件”观点的延续，也由此获得了 Linus 的共鸣 —— “state my love”      了解完网络建构工具，来自 TUNA 协会的 Zenithal 同学为我们带来镜像站联盟计划 —— MirrorZ 项目。Z 同学从镜像站的维护切入主题，先行分享自己的镜像维护历程，让未能经历的同学们一窥镜像维护的琐事。而正是在维护镜像的过程中，Z 同学既看到各大高校镜像站的蓬勃发展，也注意到终端用户存在着信息获取困难，镜像选择不便等问题，以此出发发起 MirrorZ 项目，并获得各大高校镜像站的响应。总而言之，该项目意在完成镜像站之间的信息整合与接口统一工作，并实现自动择优机制。各大镜像站将镜像状态信息推送至 MirrorZ 前端，实现信息的统一呈现。而镜像站针对拉取镜像请求，根据用户的意愿，基于镜像站评分为用户自动跳转至最优镜像，以获得最快的镜像下载速度。和大多数开源软件一样，MirrorZ 受使用过程中的不便性启发，以开源协作的模式解决问题，这样一个开源项目的动机与组织形式，值得开源社区的所有同仁借鉴。      身在科大，自然当对学术上开源软件留心。曹嘉琪同学为我们带来科学计算软件 Maxima 的介绍与基本操作。Maxima 源自于 Macsyma，被 Maple 及 Mathematica 等计算机代数系统所借鉴。在日常计算任务中可以一定程度上替代商业软件 Mathematica。在图形界面 wxMaxima 的帮助下，曹嘉琪同学通过逐条演示的方式，为我们详细介绍了常用的 Maxima 的常用功能 —— 符号计算、数值求解、求导积分、作图 ······ 所见即所得，更直观地让听众了解到 Maxima 的语言风格与使用效果。         三场演讲结束，欣赏之余未免有些疲倦。正值茶歇，同学们陆续前来领取水和零食。由于错误地预估了参与的人数，零食很快被瓜分完毕。按照往年惯例，现场提供了印有开源软件 logo 的贴纸，做为对自由软件的宣传。贴纸上的符号是开源文化的一部分，而使用贴纸往往可以增强对开源文化的归属感。无论是因为熟悉还是因为好奇，lug 新做的贴纸成功地吸引了一部分同学的注意，前来领取贴纸贴在笔记本上。闪电演讲的名单上多出了一位 21 级的同学袁保杰，想对他所熟悉的开源终端 ConEmu 做一番推荐；一位科大校友，lug 的老社员吴峰光也参与进来，希望向观众介绍 Nix 包管理器；线上的 Zhou Zhiqiang 也提前报名，将为我们带来混沌工程概念，SFD 的下半场，足以令人拭目以待。      SFD 进入到下半场，首先由袁保杰同学介绍 Windows 平台可定制化终端 ConEmu，其提供了终端背景定制，多窗口，并集成了文件管理器等其他组件，可以在一定程度上缓解 Windows 自带终端对双眼造成的不适。其易于上手的特性对于新人来说更加友好。   一味小菜过后，吴峰光校友为我们带来 Nix —— 一个包管理器，或者一种依赖管理思想，该思想正是 “share everything” 和 “share nothing” 的折衷，即 “share when possible”。Nix 完全按照版本依赖要求安装被依赖方的对应版本，将不同版本的软件视为不同的软件，以哈希值决定不同版本的访问路径。这意味着其以完全违反 Linux 所规定的目录结构为代价，获得软件包依赖的绝对正确。理解了其基本思想后，演讲者顺势引入 Nix 语言与 Nix 包配置格式，Nix 的包管理方式由此展现出一个巨大的优势，即在 Nix 包管理系统下，可以让一个系统整体对应唯一的配置文件，环境的复现将通过该统一配置文件的迁移实现。正如刘紫檀同学在讨论过程中所说，Nix 与 Docker 的目标是一致的，该配置文件扮演 dockerfile 的角色。随后是对 Nix 应用的介绍：通过使用 NixOS，所有软件及内核均在 Nix 版本控制之下，可以用于嵌入式、云端部署领域批量化部署等应用场景。虽然 Nix 仍然是一个新兴技术，其由于文档稀少、社区小众造成的入门困难一定程度上限制了其普及速度，其镜像的庞大复杂也为镜像站提供服务造成困难，但 Nix 的未来仍然值得期待。         最后，Zhou Zhiqiang 通过线上会议的方式加入现场，为我们带来“混沌工程”这样一个较为陌生的话题。根据演讲者的介绍，所谓混沌工程，即是在实验环境中加入各种具有破坏性的运行干扰，如以一定频率加入延时，篡改目录，假报硬盘故障，切断网络，乃至从集群中离线单节点等，构造一个“稳定产生不稳定因素”的系统。演讲者以 chaos mesh 平台为例，从平台的架构解析混沌系统的一种实现方式，又以一个简单的混沌实验，展示了实验过程中设置的主要参数。随后，演讲者选取了文件系统错误注入，细致地讨论了如何通过 hook 系统调用，随机性篡改函数参数并将错误原封返回，达到模拟错误的目的。混沌系统可以为开源软件的安全性、稳定性提供可行的基准测试方案，为确保开源软件的质量做出贡献。      由于时间原因，两位本来报名了闪电演讲的同学未能演讲，着实遗憾。但分享自由的时光总是短暂，同学们陆续扫码签退，离开会场。原定的聚餐环节由于第二天将有更多 lug 老成员前来临时更改了日期，所以做完善后工作后，几位熟悉的同学在食堂相聚，为今年的 SFD 做上小结。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2021/09/SFD/",
"teaser": null
},{
"title": "2021 全员大会",
"excerpt":"2021 年 11 月 17 日，下午 4:30，校学生 Linux 用户协会秋季学期全员大会如期举行，本届全员大会一如既往，承担着向新成员介绍 LUG 社团内部情况的任务，同时也进行了 LUG 章程讨论环节。指导老师与本届负责人悉数到场，为现场的新同学们答疑解惑。部分社团老人也参与到社团建设的讨论中，时刻关注着社团的发展。   在社团中直播负责人刘正韬的忙碌下，直播设施在全员大会之前顺利地搭建完毕。线上线下的全员大会参与者们在 4:30 顺利通过直播进入到会场。在为需要二课学时的同学们让出五分钟签到时间后，全员大会正式开始。   首先由刘隆邦同学开门见山，向新成员介绍了全员大会的意义。随后通过对 Linux，对 Linux User，对 Linux User Group 的逐层剖析，向新成员们揭示了 Linux 社群的形成原因以及 Linux 社群所包含的的内在精神 —— 开拓、探索、分享。最后谈到科大的 Linux 用户协会的成立往事，为大家呈现出一个有历史传承的 LUG 组织，尽力将 LUG 描述得具体而真实。         活动，是一个社团的能保持活力的关键所在，所以接下来由刘隆邦同学继续介绍社团中的四大活动：自由软件日、Hackergame 信息安全竞赛、Linux 101 系列课程以及在平时进行的每周小聚。   首先，是对自由软件日和 Hackergame 的回顾，自由软件日活动给了自由软件爱好者们一个理由，让他们可以在这一天聚会分享自己在自由软件上的经验。而 Hackergame 则是为同学们提供了一个可以学到软件知识，享受探索乐趣的平台，其以对萌新友好的特性成为了影响极大的 LUG 标志性活动。如果说自由软件日体现了身为自由软件爱好者的分享精神，那么 Hackergame 则集中体现了自由软件爱好者们的进取与探索，两个活动完美地诠释了 LUG 社团存在的意义。   随后，刘隆邦同学向新成员们预告了 Linux 101 教学活动和每周小聚的开展。Linux 101 活动体现了社团在技术教学上为科大做出的一份贡献，在教学活动过程中，社团核心成员们将引导同学们一步一步地完成从认识 Linux 到熟练使用 Linux 的蜕变。每周小聚则是社团内部互相分享自己探索所得的日常活动，社员们在每周小聚互相探讨，互相学习，共同进步。   接下来则由龚乐同学为我们介绍社团的网络服务部分，首先是 LUG 的核心服务——开源软件镜像站，为同学们在校内提供了一个高速，完备的开源软件镜像，为同学们下载开源软件提供便利。随后介绍的是 LUG 提供的代码托管服务—— GitLab，为同学们在校内提供一个高质量的代码协作平台，避免了 GitHub 等代码托管平台的高延迟访问。      同时龚乐同学还介绍了 LUG 的 FTP 服务，上面存储了 LUG 以往小聚的信息，对想要了解的后来者有很大帮助。最后还提到了 vlab 服务，虽然服务本身并不是由社团直接提供，但 LUG 主要成员为其提供技术支持，vlab 自投入使用以来广受师生欢迎，广泛应用于课堂教学实验中，影响广泛。   最后，龚乐同学向新人们介绍了 Linux 相关技术的学习方法和技巧，在探索、查找和交流中逐步提升自己的技术水平。   在进行了短暂的休息后，我们开放了二课签退码，无意参与 LUG 社团章程讨论的同学可以先行离开。在大部分在场同学离开后，我们对章程中的表述进行了修改，并得到了出席社团成员三分之二人数表决通过。章程表述修改如下：   将《中国科学技术大学学生 Linux 用户协会章程》中第八条末尾“委员会会长任期⼀年，不得连任”表述，修改为“委员会会长任期⼀年，一般不得连任，特殊情况下最多可连任一届”。   修改后章程可在 ftp 上查看。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2021/11/freshman-meeting/",
"teaser": null
},{
"title": "中国科学技术大学第八届信息安全大赛",
"excerpt":"2021 年 10 月 30 日，正午十二时，Hackergame 网站答案提交窗口如约关闭，这场持续七天的属于 hacker 们的盛宴落下帷幕。   经统计，在本次比赛中，总共有 4023 人注册，2740 人至少完成了一题。比赛期间所有人合计提交了 23522 次 flag，其中有 11975 次是正确的提交。本次比赛由浙江大学、哈尔滨工业大学、吉林大学、西安交通大学、重庆大学、北京邮电大学、东北大学和南京航空航天大学的计算机类的社团或战队协办，此外还有来自其他高校的同学参加比赛。其中昵称为 mcfx 的同学获得总榜的第一名，最终 AK、以 9450 分结束比赛；中国科学技术大学的 21 级研究生选手马瑞丰以总分 4200 分获得校内榜（不含已毕业同学）第一、总榜第 23 的好成绩。本次比赛校内参加人数众多，共计 569 人参与，其中有 436 名本科生。   赛后经主办方统计，确定了获奖同学以及奖项，并为校内参赛的同学颁奖。2021 年 11 月 27 日晚，第八届信息安全大赛颁奖仪式在西区 3A212 举行。网络空间安全学院党委书记谭勇、校 NEBULA 战队指导老师吴文涛出席本次颁奖典礼，并为获奖同学颁发证书。      校内冠军马瑞丰荣获一等奖。   胡航瑞、毛浩宇、樊一展、黄致远、Goh Yi Hang 五位选手获得二等奖。      还有甘文迪等二十五位选手获得三等奖。      此外还专门设置了面向大一新生的新生特别奖两名，分别为陈骆鑫和赵奕。此外，还颁发了一血奖和分类奖。      自 2014 年起，科大信息安全大赛已经连续举办了八届，往届比赛均顺利进行，规模盛大、影响甚广。第八届信息安全大赛由中国科学技术大学网络空间安全学院、中国科学技术大学校团委、中国科学技术大学管指委主办，中国科学技术大学学生 Linux 用户协会、中国科学技术大学微软学生俱乐部、中国科学技术大学 NEBULA 战队和中国科学技术大学信息安全俱乐部承办，并由浙江大学 AAA 战队、哈尔滨工业大学 Linux 开源学生俱乐部等协办。本次比赛延续了往届的优良传统，努力结合科大特色，坚持向新生倾斜的原则，控制题目难度梯度，强调引导和教育工作。   本次比赛的题目分为 4 类，包含了综合技能、程序逆向与漏洞利用、密码学与数学和网站安全类题目，在具有一定教育意义的同时也未曾放弃对趣味性的追逐：如何利用手中的“秤”逃脱华强的刁难？如何利用旅行照片在世界地图上大海捞针？如何让你的程序学会玩 Overcooked？如何让不存在的好友帮你的 flag 大砍一刀？当然更有一些题目考验着同学们的数理基础：如何骑走一辆二维码被打了码的共享单车？如何将矩阵点亮成 LUG 的形状？当然，更加硬核的题目永远为勇攀高峰的选手准备着，也总有选手不曾屈服于未知而复杂的技术，攻坚克难，在排行榜上默然前行。   赛后承办方于 https://github.com/USTC-Hackergame/hackergame2021-writeups 公布了官方题解，并收集了参赛选手的题目解答。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2021/11/hackergame-2021/",
"teaser": null
},{
"title": "桌面美化",
"excerpt":"2021 年 12 月 5 日，LUG 社团于 3A212 教室开展了本学期第一次小聚分享活动，本次是由诙谐幽默的赵作竑同学为同学们带来 Linux 桌面美化方案的介绍。（顺带狠狠地捧了一把 Arch Linux 发行版）      赵作竑同学深知介绍新事物，要从听众所熟悉的内容入手。于是演讲一开始，纯净的蓝天，白絮的闲云便迎面而来，翠绿的草甸勾勒出舒畅的坡形，我的文档、电脑、网上邻居坐落有序 —— 这就是同学们小时候的 XP 啊！      界面是那么朴素，年代是那么久远，直到同学们熟悉的命令行的出现，它才褪去了伪装。XP 桌面主题用它的天衣无缝，向同学们证明了 Linux 桌面美化的无限可能。   赵作竑同学借此机会向同学们推荐了演示所用的 B00merang 主题，它可以让同学们的 Linux 桌面审美风格倒退 20 年，向 Windows XP 看齐，同时建议同学们尝试采用 B00merang 下其他 Windows 版本的主题，以得到形似 Windows 但更加流畅的界面体验。   简单的引入环节后，赵作竑同学向同学们系统地介绍了桌面配置背后的逻辑：   首先将桌面环境的软件分为四类：程序、窗口管理，外设设置（状态栏），桌面常用软件，其他功能。同学们可以从某一类入手，对系统的环境进行调节。   随后赵作竑同学从窗口管理器入手，介绍了平铺式，层叠式和混合式窗口管理器的区别，并举例说明，供大家按喜好选择。顺便推荐了 Arch Wiki 上的窗口管理器页面 Window manager - ArchWiki，供同学们参考。      接下来是面板和启动器，赵作竑同学推荐了 Rofi + Polybar 的配置，并推荐了 GitHub 上的 adi1090x 用户的配置方案做参考。同时提醒同学们这个方案提供的是外观，如果希望可以在面板上进行调节亮度，连接 wifi 等操作，需要安装对应的软件包，因为对控件的操作本身是对对应命令的调用。   完成了上述过程后，同学们就有了一套属于自己的可控风格的系统，接下来就可以开始对风格进行调整了——赵作竑向同学们推荐了他的经验：根据自己最喜欢的终端配色方案进行各控件的颜色配置。而对 GTK 或 Qt 应用的主题也可以使用对应插件实现。   若希望更进一步的优化，需要细节上的耐心：如工作栏的字体，图标风格等的挑选。   在小聚的最后，赵作竑同学为同学们演示了如何参与社团的开源桌面美化方案投稿：只需要在投稿仓库 Open-Source-Desktop-Show 的 issue 板块中中选择对应的 Template 填写后提交，即可完成投稿。      小聚结束后，陶柯宇同学为同学们演示了参与二课的同学如何将自己的学校账号和 GitHub 账号关联起来：首先访问 https://ghauth.ustclug.org，依次点击 Authenticate USTC 和 Authenticate GitHub ，最后点击 token 导出密钥，在二课提交时应将密钥附在提交窗口中。   若希望了解小聚的更多细节，可阅读本次讲座的小聚讲稿。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2021/12/linux-beautify/",
"teaser": null
},{
"title": "网络资源&技术部介绍",
"excerpt":"2021 年 12 月 12 日，LUG 社团再一次迎来小聚分享活动，本次小聚由两部分组成，首先由蔡智臻同学为我们带来学校网络资源的介绍，随后由我们社团的技术主力陶柯宇同学为我们分享 LUG 技术部的日常。      蔡智臻同学用简明扼要的方式为我们列出了做为科大同学可以得到的便捷信息：首先是对于计算机类课程学习至关重要的参考材料，有往年试卷，往年实验样例，甚至是半开卷考试准许携带的 cheatsheet。掌握了这些信息资源，我们可以进行更有目的的学习和复习。随后是对校内关键网络资源的介绍，这些资源信息关系着同学们的校园生活，可以通过 ustc.life、i.ustc.edu.cn 这两个集成了我们学校中关键站点的导航网站前往。邮件系统、网盘系统、图书馆查询系统、以及部分同学会用到的学校个人主页支持、创新实践基地预约，这些都是校园中的宝贵资源。      随后蔡智臻同学又介绍了其他校园服务相关内容，如打印机、一卡通、校园网、研讨室等学习生活相关的事项的处理。最后向同学们推荐了一些技术性的资源，如 LaTeX 模板，计科相关的软件推荐，顺带对 LUG 的 Linux 101 系列课程以及 FTP 资源进行了宣传。      随后的时间交给了在 LUG 技术部中尽责的陶柯宇同学，这位陪伴了 LUG 4 年的老同学将在接下来的 ppt 中，为我们理清科大镜像站背后的琐碎。从简单来讲，LUG 所维护的服务主要是镜像站，当然日常的维护工作还包括基础设施。于是首先陶柯宇同学向我们简要介绍了建立科大镜像站的目的、服务现状以及服务所依赖的基础设施。   镜像服务中最基础的自然是可靠的存储，于是有了 ZFS 文件系统、硬件 RAID 冗余、LVM 缓存加速的架构，在保证了稳定性的同时提高了系统的性能。而有了基础后，构建的镜像站应当有对外提供服务、同步上游数据的能力。针对 HTTP(s) 访问，镜像站使用 OpenResty 拓展 Nginx 提供服务，对于 Rsync 请求自然使用 Rsync 提供服务。至于同步任务，LUG 维护组使用自行开发的 Yuki 同步框架，辅以 Docker 虚拟化批量管理，实现对上游镜像的稳定同步。      除了镜像站外，LUG 技术部还需要维护好其他对外服务，如 FTP 和 GitLab。为了维护这些服务，LUG 技术部构建了配套的网络基础设施：LDAP 用于服务器集群的统一鉴权，Telegraf + InfluxDB + Grafana 对服务器的 IO、网络、内存占用和存储状态进行实时监控，ESXi 进行服务器的虚拟化。为了可持续性地传承 LUG 技术部的维护，LUG 将技术文档公开于 docs.ustclug.org，可以供维护人员以及对 LUG 技术部感兴趣的同学参考。      介绍完较为正式的 LUG 服务，技术部成员还为社团的运行提供便利。如在本次的桌面投稿活动中，技术部的同学编写了 gh-auth 项目用于关联 GitHub 账号和提交同学的统一身份认证；在游园会活动中陶柯宇同学提供了用 rust 编写的终端问答小程序做为游园会答题项目，让每一位前来 LUG 摊位的同学体会到了 LUG 的技术氛围；在 Linux 101 系列课程中，为线上讲义的实时部署配置 GitHub Actions ……   做为一个合格的运维人员，关心服务的安全问题是必不可少的，所以运维同学的日常任务中往往包括关注安全资讯，对各组件进行定期的安全检查，及时更新。同时还要应对从各个渠道发来的用户反馈，及时给予回应，这正是运维同学日常辛苦所在。   看到大家饶有兴致地听着技术部的介绍，陶柯宇同学切换了 PPT，为我们细致地讲述了在服务器维护中遇到的问题以及解决问题的详尽过程，让我们有机会一窥技术部同学们的广博、严谨与钻研。   小聚结束后，我们也如愿吸引了一些来自低年级的同学与我们共同探讨技术话题。这是令人兴奋的事情，因为只有新人对技术讨论的参与，才能让 LUG 这个足够“古老”的社团得以一直延续。   小聚相关的讲义、照片已上传 FTP，可在此获取。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2021/12/USTC-resources-LUG-tech-intro/",
"teaser": null
},{
"title": "适合个人开发者的网站开发方案",
"excerpt":"12 月 18 日 19:30，本学期的第三次也是最后一次小聚正式拉开序幕，本次小聚由王子博为大家介绍适合个人开发者的网站开发方法，讨论前后端常用框架和常见问题。由于演讲者不方便回校，小聚改为线上举行。   想要开发一个网站，必须先了解网站的工作原理。王子博同学从大家访问网站时在浏览器输入的 URL 开始，自顶向下，逐层深入的剖析了浏览器把我们的输入转化为报文发送，交由后端处理，再返回的完整过程，让大家对 HTTP 的响应原理有了一个大概的了解。随即以此为引子，列出了建设网站需要的几个环节，即域名，服务器，服务器端程序，HTML、CSS，浏览器端程序。简单的一页 ppt，就梳理清楚了一个网站成功运行所需要的几个最重要的环节。   框架梳理完成后，为了加深同学们的理解，王子博同学还结合自己开发 ustc.life，南七集市等网站的经验，带着大家分析了搭建这些网站所需要的技术。其中提到不少现代的技术以及免费的建站资源，给了同学们很大的启发。这些具体的方案也为大家以后自己搭建网站提供了参考。   在了解的网站运行背后的技术后，很多同学可能会问，这里面有很多条技术路线，我该如何学习呢？王子博同学很快为大家解决疑惑，他凭借自己学习和实际开发网站的经验，由浅到深的总结出学习的方向，覆盖了开发，部署，存储，工具等等方方面面的技术。紧接着，他还列出了几个学习的网站，供大家使用。   当然，在实际开发网站的过程中，我们还需要对前后端的一些架构做出更精细的规划，以应对各种可能的网络流量，并把安全性也列入考量。因此，接下来的时间里，王子博主要针对这些实际问题进行细致的讲解并给出解决方案。自此，我们的网站可以正式部署在公共网络，供大家访问了。   讲解结束后，还有很多同学就会议中提到的技术与应用场景与王子博同学进行了全面的交流，在思维的碰撞中获得对 web 技术的新理解。 今年的最后一次小聚至此圆满结束，会议材料可在小聚材料中找到。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2021/12/web-development/",
"teaser": null
},{
"title": "Linux 101 第一课",
"excerpt":"3 月 13 日下午，Linux 用户协会在西区 3C101 教室举办了 Linux 101 系列活动的第一课： LIP (Linux Install Party)。   Linux 用户协会每年都将举办的 Linux 101 系列活动， 并编写了在线讲义。 在此期间，Linux 用户协会将全面介绍 Linux 的使用， 带领同学们认识和熟悉 Linux，掌握基本的使用方法， 了解使用技巧，从而提高工作效率、增进相关技能。   Linux Install Party 作为 Linux 101 的第一课， 介绍了什么是 Linux 和 Linux 可以做什么， 普及了 Linux 背后的自由软件和开源软件的历史，激发了同学们对 Linux 的兴趣。         此外，Linux 用户协会成员在活动中帮助其他同学安装了常见 Linux 发行版， 解答其他同学在 Linux 使用中遇到的问题。现场交流氛围融洽，活动顺利举办。            在之后的活动中，Linux 用户协会将全面介绍 Linux 使用， 欢迎同学们参与 Linux 101 的后续活动。  ","categories": ["LUG 活动","Linux 101","Linux Install Party"],
"tags": [],
"url": "/news/2022/03/linux-101-1/",
"teaser": null
},{
"title": "Linux 101 第二课",
"excerpt":"4 月 3 日下午，Linux 用户协会于线上举办了 Linux 101 系列活动的第二课：命令行界面的使用。   命令行界面是 Linux 系统使用的精髓所在，熟练地使用命令行可以让同学们更加高效地在 Linux 系统下处理任务。本节 101 由赵作竑同学为我们进行 shell 相关内容的讲解。   初次接触命令行界面（shell），自然应当由简入繁，循序渐进。所以赵作竑同学在带领大家认识并打开 shell 后，首先介绍了几个简单的命令，如 ls、cd、cal、date，让大家清楚命令行的输出格式。      稍作了解后，我们需要系统性地学习命令行的使用，而最关键的自然是如何理解命令的帮助文档。赵作竑同学以 ls 命令为例，为我们讲解了其对应文档的结构以及应当如何去理解命令文档。      由于对命令行的介绍不能脱离对 Linux 系统本身的理解，所以赵作竑同学为我们附带介绍了 Linux 文件系统相关的内容，包括文件类型、文件权限、Linux 下的目录结构，软硬链接等，并介绍创建文件的命令。      本节课的讲义位于 LUG ftp 上：slides  ","categories": ["LUG 活动","Linux 101"],
"tags": [],
"url": "/news/2022/04/linux-101-2/",
"teaser": null
},{
"title": "Linux 101 第三课",
"excerpt":"4 月 17 日下午，Linux 用户协会线上举办了 Linux 101 系列活动的第三课：Linux 环境下的编程。   Linux 本身提供的是一个使用计算机的环境，因此，学习 Linux 的过程即是了解如何使用 Linux 完成各项任务的过程。而 Linux 上的编程开发正是使用中无法绕过的一环。本节 Linux 101 由明宇龙同学为我们讲解如何在 Linux 下完成 C/C++, Python 等编程语言的开发。      首先，明宇龙同学向大家介绍了 C 与 C++ 语言在 Linux 上的开发过程。对于简单的单文件而言，一行 gcc 命令即可完成编译过程。更进一步，我们可以了解到编译过程的四步过程分别由 cpp、cc1、ar、ld 完成。然而在面对多文件大项目时，需要严格的编译顺序管理和并行管理，于是我们使用 make 工具对编译过程进行管理，这涉及到 Makefile 的编写。随着项目增大，文件增多，出现了 cmake 等工具来自动编写管理 Makefile 文件。      随后明宇龙同学向我们介绍了 Linux 上 python 环境相关的基础内容，包括 python 的包管理器，python 语法版本变迁以及 python 语言的各种实现，这些内容对于构建符合自身需求和兼容性要求的 python 应用至关重要。      在课程最后的提问环节，明宇龙同学细心地为大家解答了 Linux 相关疑问，探讨了从编程环境配置到 LUG 相关的问题，在轻松愉快的氛围中结束了 Linux 101 第三课的讨论。   本节课的讲义位于 LUG ftp 上：slides  ","categories": ["LUG 活动","Linux 101"],
"tags": [],
"url": "/news/2022/04/linux-101-3/",
"teaser": null
},{
"title": "「开源软件供应链点亮计划——暑期 2022」USTCLUG 项目提案",
"excerpt":"「开源软件供应链点亮计划」是由中国科学院软件研究所发起并长期支持一项活动，旨在解决基础开源软件面临的许可、质量、维护和技术支持等问题，进而影响整个软件产业的供应链。而「开源软件供应链点亮计划——暑期 2022」是由中科院软件所与 openEuler 社区共同举办的一项面向高校学生的暑期活动，旨在鼓励在校学生积极参与开源软件的开发维护，促进国内优秀开源软件社区的蓬勃发展。     此活动与 GSoC (Google Summer of Code) 的模式类似：开源项目/社区提供项目需求与导师 (mentor)；学生申请项目通过后利用暑期的时间进行开发，将成果贡献给社区；主办方（中科院软件所与 openEuler 社区）根据评估结果给学生发放奖金。所有参与的社区列表可查看 https://summer-ospp.ac.cn/#/org。   今年夏天，USTCLUG (中科大学生 Linux 用户协会) 计划以社区身份加入此暑期活动。以下是我们计划的项目提案，也欢迎社团的各位同学提出建议。   在报名前，请先阅读由主办方提供的学生指南。   网络测量系统   项目描述：在校园网管理中，很多时候我们需要看某个网站/服务器在学校不同地点、不同运营商网络出口下的访问质量，分别到不同机器上手工测试并汇总常常会带来巨大的人工成本，在 https://ping.chinaz.com/ 或者类似的网站上我们可以很方便的看网站/服务器在全国各地访问的情况，但是可惜网站的主体和客户端都不是开源的。本项目计划建设一个可自己搭建的分布式网络测量系统，架构为控制端 + 多个测量 agent。   项目难度：基础   LICENSE：自选开源协议   项目社区导师：totoroyyw   导师联系方式：totoroyyw AT ustclug.org   项目产出要求：建设一个可自己搭建的分布式网络测量系统，控制端 + 多个测量 agent：      控制端            控制端提供 Web 界面，接收测试指令、发给测量 agent、收集并展现测量结果       对不同级别的用户有权限控制（比如普通用户不能开放 TCP 端口扫描功能）           测量 agent            启动后连接到控制端，接收测试指令、进行测试、返回测试结果       隶属于多个组，可以按照组选择运行测量指令       docker 封装部署，预计数量在 N*10 量级           测量功能包含多节点 ping、DNS 解析、http/https get、TCP 端口连接测试、TCP 端口扫描、traceroute，具体可以参考相关网站的功能            测量功能方便扩展           项目技术要求：      掌握网络编程语言   拥有 Web 开发能力   相关网站：      https://www.17ce.com/   https://ping.pe/   https://ping.sx/ping   https://ping.chinaz.com/   网盘睿客网的 SDK 及 Rclone plugin 开发   项目描述：中科大校内有一套网盘系统睿客网（英文指代暂规定为 recdrive），此系统目前仅有网页界面而没有命令行接口，因而无法轻松地将睿客网提供的云存储整合到其他系统中。我们计划在此次项目中，为睿客网实现一套 SDK，支持基础的文件 CURD 操作，然后将此 SDK 整合到云存储命令行工具 Rclone 中，提供给用户一份 Rclone plugin 或是直接合并至 Rclone 上游。   项目难度：进阶   LICENSE：可自选开源协议，但推荐 Apache 2.0   项目社区导师：myl7   导师联系方式：myl AT ustclug.org   项目产出要求：      基础：提供一套 SDK 支持睿客网网盘文件的 CURD            需要保证 Go 中可用以满足下一阶段的条件       除 Go 外，可以使用 Rust/C/C++ 编写，只须提供 Go 中调用的方案即可       由我们提供测试帐号           进阶：对接 Rclone，提供一份睿客网的 Rclone plugin            Rclone 的各种子功能，如 cache 等，可以酬情对接，以可用为第一要义       开发者可以尝试将此功能提交到 Rclone 上游进行合并           项目技术要求：      掌握 Go 语言，或是掌握 Go 语言 FFI 并掌握另一门可 Go FFI 的语言   能理解文件系统语义，对 FUSE 等类似部件有一定了解   能阅读以 Rclone 为例的大型 Go 开源项目的源码并分析出扩展时需要对接的部分   相关网站：      睿客网：https://rec.ustc.edu.cn/   Rclone：官网：https://rclone.org/ 源码：https://github.com/rclone/rclone   一个参考性质的半成品：https://github.com/myl7/recdrive  ","categories": [],
"tags": [],
"url": "/news/2022/05/opensource-summer-iscas/",
"teaser": null
},{
"title": "复古计算与无线电展",
"excerpt":"2022 年 5 月 8 日下午，由中国科学技术大学学生 Linux 用户协会与学生业余无线电协会承办的复古计算和无线电展活动在中区 3 号楼架空层圆满落幕。本次活动中，由学生业余无线电协会社长刘紫檀及两社社员共同筹借的复古设备得以“重见天日”，向我们再次讲述那个曾经属于它们的时代。   摩尔定律曾预言，每隔 18 个月，计算机的性能就将提高一倍。这意味着，短短 20 年，计算设备的性能已经发生了翻天覆地的改变。本次复古计算展，筹办团队不是仅仅满足于让这些被时间淘汰的设备陈列展出，而是将其修复的同时上电运行，让参观者获得属于那个时代的交互、文化和操作体验——可以说是一门让时光“倒流”的艺术。   作为常与计算技术打交道的无线电社员与 LUG 社员们，旧式荧屏的辉光对于我们有着莫大的吸引力。在 LUG 活动室中，留存着老一代社员们遗留下来的各种旧硬件，或是龙芯 MIPS 笔记本，或是苹果最后一代 PowerBook。而在网络信息中心的角落，悄然静置着一台 DEC 生产的 80486-DX2 处理器品牌机，即使曾是一个时代算力的骄傲，如今也埋没在故纸堆里。   筹备   或许是听到了这些被时代淘汰的芯片们不甘的叹息，由业余无线电协会会长刘紫檀同学牵头的复古计算展览计划悄然开始筹划。为了搜罗更多更有趣的展品，也为了让喜欢复古计算的同学们看可以更好的参与进来，两社共同成立了复古计算和无线电展筹备 QQ 群，并且通过管指委、Linux 用户协会公众号等多种渠道向校内同学发出征集通告。在同学们的踊跃参与下，展览收集到了计算尺、8086 兼容便携式计算机、486 PC-98 兼容机、PowerBook G4 等复古计算设备，CRT 电视机、VHS 影碟机、收音机、磁带机等复古电器设备。   此外，展览展出的展品还得到了校内多位老师的支持。网络信息中心的张焕杰老师得知展览的信息，向筹备同学们借出了曾经在校园网上工作过的 DEC 486 品牌机和 CRT 显示器。科大讯飞的方明老师，则贡献了曾经风靡的 FC 仿制机“小霸王”和电视机，以及几台晶体管收音机。同时，在少年班学院的代镭老师的帮助下，筹备组还借到了存放于少年班学院主控室内的库存串口鼠标器、Maxtor ATA 硬盘等硬件，以及 Windows 98、Visual Studio 6.0 等上个世纪的盒装软件。   场地是参观体验中的重要一环。得知两社筹办展览的消息，中校区创新实践基地的崔峰老师同意我们在展览当天使用中校区 3 号楼架空层北侧的场地，并且提供了插线板和桌子来布展。   同时，精美的宣传图片则是展现复古计算设备的绝佳方式。在摄影协会的帮助和支持下，筹备组于 4 月 29 日在摄影协会的影棚内拍摄了展品的展示图片，制作海报的同学之后又进行了仔细的排布。      但是，最重要的还是让复古计算设备可以正常运行，提供属于那个时代的操作体验。计划展出的 DEC 486 PC 机，因为原配的 540 MiB 康诺硬盘已经无法正常读取并且引导，筹备组要寻找一块合适的 ATA 硬盘进行替换。同时，该机 BIOS 不支持由 CD-ROM 驱动器进行引导和启动，而 3.5’’软盘驱动器又会在引导时提示读取失败，筹备组同学只能选择将系统镜像直接写入硬盘中。由于该机 BIOS 年代久远，对于硬盘驱动器需要手工设置 C/H/S 参数，而稍后十年中流行的 ATA 硬盘均为数十 GiB，这曾一度对修复工作产生了很大的阻碍。不过终于，在展览前几日，刘紫檀同学利用 86box 和 ATA 标准大概猜测了 BIOS 读取大硬盘时卡住的原因，将 C/H/S 参数手工设置为了 1023/16/63，并且关闭了 13H 磁盘读取中断的”LBA Convert”选项，最后让该机可以成功读取主引导记录，并且引导硬盘中前 503 MiB 安装的 MS-DOS 7.1 和 Windows 98 操作系统。至于展览所展出的 Amstrad PPC512 便携式计算机，则因其软驱只兼容 3.5‘’720KiB 磁盘，拷贝内容颇费了一番功夫。      展出   时间来到 5 月 8 日，在九点的阳光眷顾不到的架空层实践基地中，摊位已在桌子上铺展开来。近处是无线电设备展区，稍远些是各年代的主机，远处则是与“旧时代计算机“密切相关的 3.5’’，5.25’’和 8’’软盘与盒装 CD-ROM 发行的操作系统和应用软件。大厅中，旧物错落而设，踱步其中，唯有回忆斑驳。社员们和前来参与活动的同学们三两成簇而谈，四五环屏而观。   本次展览在复古计算之余，还融入了曾经颇为流行的业余无线电活动的科普介绍。业余无线电协会提供了协谷 G90S 短波电台、ICOM IC-R71E 短波接收机、宝峰 UV-5R 手持电台和德生 PL-680 收音机等设备送展，还有用于拍发等幅电报的多种电键以及配套的天线以供把玩。在中间聊的火热的，正是呼号为 BH6AIK 的业余无线电协会成员张逸凡，他在向围观的同学们细心地介绍业余无线电的玩法与意义，以及设备与通联的基本知识。虽然加入协会的时间尚不足一年，但他在讲解过程中的热情与流利，通联示范中的随性与娴熟，暗示着他已经可以独当一面了。在经过关于频率划分、摩尔斯电码和电波传播规律的科普后，不少同学都对这一爱好表现出浓厚的兴趣，显得跃跃欲试了。协会也在其中安排了一些实践环节，如指导新人使用中国科大业余电台 BY6DX 的呼号通联合肥本地友台，用收音机接收位于陕西西安的中科院国家授时中心播发的摩尔斯电码并解出对应的字母（BPM），聆听来自欧洲和大洋洲的广播节目，空中交通管制（ATC）语音信号等。这些无线电相关的一切都散发着信息超视距传输的魅力。      复古计算的“明星展品”之一是之前由刘紫檀同学负责修复的 DEC 486 微机。来参观的同学，很多都对这台 32MiB 内存，66MHz 主频，并且装有 VGA 显示卡，14GiB 硬盘的“大屁股电脑”展示出了浓厚的兴趣。这台计算机安装有 Windows 98 操作系统，在展览时好奇的同学的帮助下又安装了 Visual C++ 6.0——大家纷纷惊讶于 504MiB 的分区里，操作系统只占用了 250MiB，而编译器和 IDE 也只需百兆出头。看到 IDE 熟悉的界面，有的同学开始体验在 Windows 98 上复习自己的 C 语言程序设计。      “我晕，原来你也网上冲浪啊！”筹办团队中不少人对于互联网最初的记忆，都是拨号上网时调制解调器滴滴答答的拨号声音。本次展览中，筹办团队精心准备了由一台实达 56Kbps 串口调制解调器、一台 TCL 电话交换机和一台 Lenovo ThinkPad X61 笔记本内置的调制解调器组成的简易拨号上网体验平台。安装有 Windows 98 的 DEC 486 微机，通过串口连接实达调制解调器，再通过电话线和电话交换机连接到运行有 PPP 服务的 X61 笔记本，该笔记本再通过以太网连接到作为网关的笔记本，这台笔记本运行有 NAT 服务，可以将数据包转发到 eduroam 无线网。   服务配置过程并非是一帆风顺。先是 HyperTerminal 的“非法访问”，再是作为接入服务器的 X61 笔记本上运行的 RRAS 服务无法启动。但好在，各种“复古问题”经过详尽的资料查询和反复实验被一一解决，这台电脑最后终于连上“信息高速公路”，实现了“赛博飞升”，大家激动之余纷纷拍照。            在这台 DEC 486 微机旁边，其貌不扬的“上网本”却内藏玄机。该笔记本采用龙芯中科开发的龙芯 2F 处理器，从 BIOS 到操作系统均为开放源代码的自由软件。不少同学也登入系统，细细欣赏 cpuinfo 中的“ICT Loongson-2”字样。   PC-98 是 NEC 公司独立设计的一系列个人电脑产品的略称，而本次展出的“PC-98 兼容机”EPSON PC486NAS2 对于电子音乐和东方 Project 爱好者来说都是不容错过的展品。90 年代的膝上计算机、古铜烁金般的屏幕主色、网点与栅格交织出的纹理细节、略带拖影的视觉效果、干涩又略吵闹的背景音乐，这些要素加在一起，原汁原味的还原了东方 Project 旧作的表现。除东方系列作品外，参展者还特地演示了如何在这一设备上利用合成器进行编曲，着实令人大开眼界。      展览最内侧的设备可谓最为“复古”，一把对数计算尺吸引着不少人的目光。对数计算尺可以比较高效的计算乘法、三角函数和开平方等操作，是计算机出现之前的“利器”。除了计算尺，展览还展出了盒装 CD-ROM 软件和各种型号的软盘。一位参观的同学幽默地表示“今天终于见到了保存按钮的实体手办！”而 VHS 影碟机、白炽灯和录音机则将时光又偷偷往前拉回了一段时间。         乘兴欣然往，兴尽自然归，大半日的复古计算与无线电展在欢笑中落下帷幕。通过此次活动，同学们对早期的计算设备有了更多的认识。现在不仅是个人计算机，我们随身携带的手机，甚至是手环的计算能力都远超出这些设备。但是正是在这些看似缓慢而又简陋的设备的基础上，人们不断探索与推进，才促使了计算设备功能与性能的大幅发展。  ","categories": ["LUG 活动","业余无线电协会活动"],
"tags": [],
"url": "/news/2022/05/retrocomputing-and-radio-show/",
"teaser": null
},{
"title": "2022 秋季学期新生系列活动",
"excerpt":"在 2022 年 8 月 29 日、8 月 31 日、9 月 1 日、9 月 2 日，中国科学技术大学学生 Linux 用户协会分别于西校区的 3C201、203 教室和东校区的 2504、2621 教室开展了本学期的社团宣讲以及新生活力课程系列活动。         新生系列活动面向刚加入科大家庭，还在军训的同学们，希望通过我们的介绍让大家了解 Linux 和自由软件文化。我们的新生系列活动第一站是面向 2022 级信息学院同学的社团介绍。廖巍同学和李博诚同学分别在两个教室展开了宣讲，简要介绍了 LUG 的性质、维护的服务以及每年会举办的多样活动。廖巍还与在场的同学们现场演示了 Hackergame 2021 的赛题「旅行照片」，带领大家从一张普通图片的图片解读出拍摄的位置，赢得众人惊叹。      LUG 新生系列活动的第二站是新生活力课程第一部分：「网络资源/科研工具介绍」。我们来到了二教 2621 教室，与 2022 级计算机学院的一百余位同学进行线下分享，LUG 的指导教师程雨老师也来到了现场。李博诚同学准备了详尽的校内网络资源和学习科研工具的介绍，从校内常用网址到学校提供的正版软件，从 LaTeX 到 Markdown，从 Semantic Scholar 到 CSRankings，介绍的内容涵盖了学习和科研的方方面面。李博诚同学还当场向同学们演示了一下 LaTeX 在线编辑工具 Overleaf 与开源 Markdown 编辑器 MarkText 的使用，用实际的操作告诉大家排版精良的论文是如何编写出来的，而这一切每个人都可以做到。这次课程的内容十分详实，相信能为新同学们将来的学习生活提供不小的帮助。在第二天我们为少年班学院的同学进行了相同的一次分享，现场互动热烈，LUG 的招新工作也进行得十分顺利。         我们新生系列活动的第三站是新生活力课程第二部分：「Hello,World 漫谈」，由袁保杰同学为 2022 级计算机学院的新生讲授，LUG 的指导教师程雨老师也来到现场。袁保杰同学在课程中向同学们详细地阐述了一个程序的前世今生，讲述了我们用键盘敲下的程序从按下 F11 键开始，是怎样地经过预处理、编译、汇编、链接最终成为可执行文件的过程。之后他以一个非常简单的 C 程序为例，演示了逆向工程的过程，熟悉的 C 代码摇身一变成为汇编出现在我们眼前，分析这些汇编指令，看懂他们的逻辑是逆向工程的重点。在我们的课程现场，袁保杰同学还为同学演示了利用栈溢出攻击，将一个登录界面 Hack 掉的过程。袁保杰同学之后还提到了开放源代码和自由软件运动，他用天赋人权来形容自由软件精神。我们应该成为程序的主人，应该享有学习和修改程序代码的权力，我们使用程序更要懂得程序。此次课程深入计算的内核，探索程序的本质，相信袁保杰给同学们带来了看待程序的全新视野。      在 LUG 协会成员的努力和同学们的积极参与下，本次新生活力课程圆满结束。感谢校团委，校学生社团管理指导委员会和计算机科学与技术学院团委、信息科学技术学院团委和少年班学院团委的支持！   我们的社团活力课程讲义及活动照片均已上传到 LUG FTP 上：   第一次社团活力课程「网络资源/科研工具介绍」及社团介绍 PPT   第二次社团活力课程「Hello,World 漫谈」及社团介绍 PPT  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2022/09/2022-freshman-course/",
"teaser": null
},{
"title": "2022 软件自由日中国科大站",
"excerpt":"2022 年 9 月 17 日，中国科学技术大学软件自由日（Software Freedom Day）活动于下午 2 时 30 分在西区 3C101 教室及 B 站线上直播同步举行。本次活动我们邀请到中国科学技术大学网络信息中心总工程师张焕杰老师、PLCT 实验室的创始人及项目总监吴伟、那一科技 CEO 贾枭和中科院计算所在读博士生王凯帆为我们带来精彩的演讲。除此之外，在闪电演讲环节中陶柯宇和王永福同学也为我们带来了开源软件的使用心得。   由于第二课堂系统的推广效果，本次活动吸引了众多刚入学的大一同学来到现场参与本次自由软件日活动。相信这次活动能在同学心中播种下自由软件精神的种子。      2 点 30 分，在会长李博诚简洁地介绍了今日的流程安排和演讲嘉宾后，软件自由日活动正式开始。   首先由张焕杰老师为我们介绍了智能家居解决方案 Home Assistant，以及如何基于 Home Assistant，方便地连接各种外部设备，手动或按照自己的需求自动化地联动这些外部设备。介绍完成之后，张老师现场进行了演示过程，访问了家中的 Home Assistant 服务页面，向我们展示了如何在一分钟之内查看土壤湿度肥力，完成院子中桃树、李树和梅花的浇灌，并知道所消耗的水量。张焕杰老师的演讲让同学们进一步体会到了 Home Assistant 作为一个开源智能家居系统的强大能力，并让在场的众多同学对于这个开源解决方案产生了兴趣。      接下来，PLCT 实验室的创始人及项目总监吴伟为我们详细介绍了 RISC-V 以及其开源生态。他从拥抱开源软件的必要性开始切入，为我们先介绍了 RISC-V 诞生的背景和历史。其次介绍了围绕着 RISC-V 国际基金会开展的各类新进展；第三部分介绍国内 RISC-V 现状以及活跃的开发团队；最后，介绍 PLCT 实验室和 TARSIER 团队在 RISC-V 开源软件项目中的进展和同学们可以参与的新机会。作为一个新兴和开放的指令集架构，RISC-V 的发展势头正劲，出货量已超 100 亿颗，非常有希望在 2025-2030 左右跻身世界三大指令集架构之一。吴伟老师的演讲让同学们对于 RISC-V 的发展有了更深入的了解，也让同学们对于 RISC-V 开源生态的发展有了更多的期待。      随后那一科技 CEO 贾枭为我们介绍了软件供应链的安全问题。他为我们详细介绍了软件开发中从开发者编写、提交、依赖、构建和分发的各个环节中可能存在的威胁，并给出了一些解决的方法。比如：面对开发者提交有风险的改动，需要认真做好 Code Review。面对构建环境被污染的风险，可以考虑 CI 不联网/CI 从头开始/对工具链进行版本控制等。贾枭随后介绍了 “SLSA Levels” 用于评估安全等级。最后介绍了 Google 内部的具体实现方法，用真实的示例讲解如何真正做好供应链安全。      之后中科院计算所在读博士生王凯帆为我们介绍了香山处理器的敏捷开发实践过程。香山处理器作为一款开源的高性能 RISC-V 处理器在去年正式亮相，受到学术界和工业界的广泛关注。为了帮助开发，团队设计了一系列支持处理器敏捷开发的基础工具，如在仿真时拍摄快照，便于出错时回滚的工具等等。随后他为同学们介绍了一生一芯计划的开展情况，即使是本科生也可以通过一生一芯计划，通过学习，设计芯片并流片。         在简短的茶歇之后，闪电演讲拉开帷幕，远在北京的陶柯宇学长向我们介绍了 Wayland 的使用体验，和 X server 比较，指出了它的优势与不足。而王永福同学则上台现场快速用 Tailscale 建立了通道，使得两台主机通过在互联网上“打洞”互联。         约下午 6 点钟，今年的 SFD 活动顺利结束。自由软件就在我们身边，希望通过这次软件自由日活动，能够让更多的同学了解到自由软件，开始尝试并参与到自由软件的开发中来。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2022/09/SFD/",
"teaser": null
},{
"title": "Hackergame 2022 动员会",
"excerpt":"学生 Linux 用户协会于 2022 年 10 月 21 日晚 19:00 举办了中国科学技术大学第九届信息安全大赛（Hackergame 2022）动员会，旨在为参赛者提供比赛规则、流程和常用工具的介绍，帮助大家更好地准备比赛。      Hackergame 2022 是一项旨在推广信息安全知识和提高参赛者信息安全技能的比赛。比赛涵盖了多个方向的比赛题目，包括但不限于综合技能、程序逆向与漏洞利用、密码学与数学和网站安全类，通过同台竞技来激发同学们对信息安全的兴趣和热情，进一步提高大家的技术水平和实战能力。除了比赛本身，Hackergame 还提供了一个交流和分享的平台，参赛者可以借机和其他参赛者的交流和讨论，分享自己的技术和心得，进一步提高自己的水平。      在动员会上，袁保杰同学向参赛者详细介绍了比赛的内容、规则和注意事项，还演示了比赛的参赛流程和一些常用的工具和方法，为参赛者提供了有力的支持和帮助。袁保杰同学还向参赛者介绍了 Web 的基础知识——网络服务是如何由服务端和浏览器端合作呈现，以及这过程中可能会出现的漏洞。这为之后的比赛铺垫了基础知识。      随后，USTC NEBULA 战队队长李蔚林进行了战队介绍和招新宣讲。他向参赛者展示了 NEBULA 战队获得的各种荣耀和征战四方的过去经历，并介绍了 CTF 的入门方法。此外，他还向参赛者介绍了战队新生的培养方案，鼓励更多的同学加入到 NEBULA 战队中，提高自己的信息安全技能水平。      大赛动员会原定于线下在 3C101 进行，但在活动当天，突入其来的疫情防控打破了原先的安排，在多次调整后，动员会顺利在腾讯会议和 B 站直播同步举行。   整场录像已经上传至 LUG FTP，欢迎大家观看：LUG FTP  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2022/10/Hackergame2022-pep-rally/",
"teaser": null
},{
"title": "LUG 小聚：Node.js 介绍",
"excerpt":"2022 年 10 月 26 日，学生 Linux 用户协会举行了小聚活动。本次小聚是由刘良宇同学为我们带来的关于 Node.js 的技术分享。   Node.js 是一种基于 Chrome V8 引擎的 JavaScript 运行环境，可以使 JavaScript 在服务器端运行，使 JavaScript 不仅仅只是一种浏览器端脚本语言。Node.js 的出现使得前端工程师能够在服务端运行 JavaScript 代码，从而可以通过 JavaScript 来开发 Web 应用的整个应用程序。      刘良宇同学从 Node.js 的开发背景与概念、并发与异步、包管理器、构建系统与网页、应用等方面向我们全面介绍了 Node.js 的技术细节。      接下来是对 Node.js 的技术细节讲解。Node.js 有其独特的有点如高性能的异步 I/O 模型、超完善的 npm 仓库。刘良宇同学以 Yunzai-Bot &amp; oicq 为例子，用源码简单地介绍了 Node.js 在实战中的优势。      包管理也是 Node.js 的重要特色。刘良宇同学用一幅图，生动地展示了 Node.js 层层打包的特色。也教了大家如何管理依赖和自行打包。      在刘良宇同学的介绍下，我们初步了解了 Node.js 这一常伴我们的开发利器，相信会在将来的学习工作中起到帮助。  ","categories": ["LUG 活动","LUG 小聚"],
"tags": [],
"url": "/news/2022/10/gathering-nodejs/",
"teaser": null
},{
"title": "LCPU x USTCLUG 联合沙龙：Xmake 和墨干编辑器",
"excerpt":"2022 年 10 月 27 日晚 19:00，北京大学学生 Linux 俱乐部与中国科学技术大学 Linux 用户协会举办了联合沙龙。本次沙龙邀请到了 Xmake 的主要开发者 Ruki 和墨者实验室的开发者们，向参与者们介绍了这两个工具的用途和优势。  Xmake 是广受赞誉的轻量级跨平台自动构建工具，可以帮助开发者快速构建和打包应用程序，同时也支持远程构建和缓存等功能，可以理解为 Build backend + Project Generator + Package Manager + [Remote|Distributed] Build + Cache 的集大成者。Ruki 向我们介绍了 Xmake 的使用和开发历程。接下来介绍的墨干编辑器就是用 Xmake 构建的。   墨干编辑器，是墨者实验室开发的 GNU TeXmacs 的衍生版，对于论文等公式符号密集型写作。它提供了许多强大的功能，如实时预览、即时渲染、公式编辑、多平台支持等。开发者们从使用方法、工程结构、实际教学使用体验等多角度为我们介绍了墨干编辑器。他们的官网是 https://mogan.app 欢迎大家尝试。   活动录像：LCPU&amp;USTCLUG 联合沙龙  ","categories": ["LUG 活动","LUG 小聚"],
"tags": [],
"url": "/news/2022/10/gathering-xmake/",
"teaser": null
},{
"title": "Linux 101 讲义修订",
"excerpt":"2023 年 2 月，USTCLUG 成员对 Linux 101 讲义进行了审阅和修订。   主要工作：      将涉及到接近生命周期末期的发行版（例如 Ubuntu 18.04）的教程内容替换为最新版本（Ubuntu 22.04）的教程内容。   对教程中可能存在的错误进行修改，对教程中有不足的部分进行补充。   具体修改内容可参见 GitHub 仓库：ustclug/Linux101-docs  ","categories": [],
"tags": [],
"url": "/news/2023/03/linux101-revision/",
"teaser": null
},{
"title": "中国科学技术大学第九届信息安全大赛圆满落幕",
"excerpt":"中国科学技术大学第九届信息安全大赛圆满落幕。   2023 年 3 月 19 日下午，中国科学技术大学第九届信息安全大赛颁奖仪式在西区 3B103 举行。网络空间安全学院谭勇书记、USTC-NEBULA 战队指导老师吴文涛老师、本届比赛负责人、USTC-NEBULA 战队成员、本届比赛参赛选手出席了本次颁奖典礼。       谭勇书记发表了颁奖致辞。他鼓励同学们通过比赛提高分析问题和实际解决问题的能力，并分享了自己在研究生期间动手参与项目的经历。他号召同学们积极参与实践，希望本次信息安全大赛能够成为同学们展示科大风采的起点，为更多更广的比赛和活动奠定基础。根据得分结果，中国科学技术大学第九届信息安全大赛校内组评选出一等奖 1 名、二等奖 5 名、三等奖 25 名、新生奖 2 名、分类奖 4 名以及一血奖 18 名。谭勇书记和吴文涛老师为获奖同学颁发了奖项。      刘成龙同学荣获一等奖。      刘良宇、甘文迪、卢天祥、毛浩宇、武汉同学荣获二等奖。   刘威、叶知易、吴远韬、陈思、郝英屹、许睿达、郑逸、吕思源、余达一、牛楚蒙、谭旭、熊轶旸、李蔚林、叶升宇、李翰阳、舒英特、李远航、彭博、王星河、郑闻杰、郭耸霄、洪文杰、高宇、杨柳、黄科鑫同学荣获三等奖。      叶知易、吕思源同学荣获新生特别奖。      刘良宇、刘成龙、陈思、黄科鑫分别在综合技能（general）、 程序逆向与漏洞利用（binary）、密码学与数学（math）、网站安全（web）获得分类奖。      关佳旺、刘良宇、马瑞丰、卢天祥、刘成龙、罗浩铭、郑逸、吴正旭、贺若舟、刘泽仁、甘文迪、王星河、陈思、李蔚林、叶知易、郝英屹、何昕、牛楚蒙作为各题目的首位答对者，荣获了一血奖。      中国科学技术大学第九届信息安全大赛由中国科学技术大学网络空间安全学院、中国科学技术大学团委、中国科学技术大学管指委主办，中国科学技术大学学生 Linux 用户协会、中国科学技术大学微软学生俱乐部、中国科学技术大学 NEBULA 战队和中国科学技术大学信息安全俱乐部承办。此外，东北大学 NEX 信息安全创新团队、复旦大学信息网络安全协会、复旦大学六星战队、国防科技大学 BOI 战队、哈尔滨工业大学 Linux 开源学生俱乐部、哈尔滨工业大学紫丁香 CTF 俱乐部、吉林大学 Linux 用户协会、吉林大学 Spirit 战队、南京航空航天大学 Asuri 信息安全战队、同济大学 xd1ddw 战队、西安电子科技大学信息安全协会、浙江大学 AAA 战队（Azure Assassin Alliance）、中国海洋大学 Blue-Whale 战队、中山大学互联网与开源技术协会和中山大学 W4terDr0p 战队也参与了此次比赛的协办。      本届比赛于 10 月 22 日中午 12:00 正式开启，历时七天，参赛人数超过 4500 人，刷新了历史记录。比赛共设置了约 25 道题目，涵盖了综合技能、程序逆向与漏洞利用、密码学与数学、Web 安全等多个方向。命题延续了往届的优良特色，努力结合科大特色，坚持向新生倾斜，控制题目难度梯度，强调引导和教育工作。正如信息安全的千变万化，每道题目各有其独有的魅力。《旅行照片 2.0》通过照片追随学长脚步；《关于 RoboGame 的轮子永远调不准速度这件事》、《线路板》、《片上系统》等题目则是做了硬件里的信息安全的尝试。比赛选手们则通过洞幽察微，打破常规，综合运用方法技能，勇攀信息安全的高峰。   官方题解和参赛选手的解答公布于 hackergame2022-writeups ，欢迎大家学习交流。  ","categories": [],
"tags": [],
"url": "/news/2023/03/hackergame-award-ceremony/",
"teaser": null
},{
"title": "Linux Install Party 2023",
"excerpt":"Linux Install Party 是中国科学技术大学 Linux 用户协会每年必办的活动，通过手把手帮助同学们安装 Linux，来增进大家对 Linux 了解，宣传开源和自由软件精神。      2023 年 4 月 2 日下午， Linux Install Party 作为本期 Linux 101 课程的第一课在 3C101 举行。由廖巍同学和王永福同学介绍了 Linux 的来源、优点和各大发行版的区别之后，令人心动的 Linux 安装就正式开始了。      本次活动我们尝试了多种 Linux 的安装体验方式，如注册使用 Vlab ，尝试 Windows Subsystem for Linux ，安装打包好的 Linux 虚拟机镜像，在虚拟机中体验安装过程和直接真机安装。      很多同学在使用虚拟机体验 Linux 之后决定腾出硬盘空间来安装双系统。在确认相应分区无重要数据后，使用 Windows 的压缩卷功能腾出用来安装的空间。随后在 BIOS 中关闭安全启动并选择使用 U 盘引导，最后在 Ventoy 的列表中选择相应发行版的安装镜像就能进行相应的安装。   因为在 Mac 上的 Linux 安装比较复杂，同为 Mac 用户的会长李博诚负责为同学们的安装过程进行指导。      时间很快来到了六点，同学们纷纷带着各个 Linux 发行版满意地离开了教室，相信 Linux 和自由软件们可以自此常伴大家。   我们本次的讲解视频回放已上传到 LUG FTP，欢迎观看。  ","categories": ["LUG 活动"],
"tags": ["linux-install-party"],
"url": "/news/2023/04/Linux_Install_Party_2023/",
"teaser": null
},{
"title": "Linux 用户协会参加 2023 开源软件论坛",
"excerpt":"2023 年 8 月 19 日，由南京大学人工微结构科学与技术协同创新中心主办的“2023 开源软件论坛”在南京大学鼓楼校区举行。论坛主要围绕“高校中的开源软件”、“高校中的开源服务”、“高校中的开源组织”和“高性能计算”等议题展开讨论。中国科学技术大学学生 Linux 用户协会会长廖巍同学在会上做了报告，分享在信息安全大赛中的规划、筹办和运营等相关经验。      中国科学技术大学信息安全大赛，比赛平台链接是 hack.lug.ustc.edu.cn。在去年的第九届信息安全大赛中，注册选手数超过了 4500 人，并有 10 余所协办高校。赛题难度梯度提升，比赛在提高题目质量的同时，也有对新手循序渐进的引导。题目背景结合实时，富有趣味，选手在解密过程中既能丰富各种小知识，又能提高信息安全能力。      信息安全大赛的时间跨度较大，在 10 月前主要是一些准备工作，比如招募比赛的出题人和分管负责人，并完成出题工作。10 月到赛前这段时间中，需要对题目和平台进行全面的测试，同时进行宣传工作，通过公开平台对比赛进行宣传推广，并处理与协办高校的外联事务等。比赛进行期间，需要维持比赛秩序，比如防止讨论题目解法等作弊行为；还要保持对比赛相关问题的高度响应，比如有选手邮件反馈比赛相关问题时，需要及时排查及时回信。赛后需要整理各榜单的成绩认证，以及颁奖等收尾工作。      2022 年第九届信息安全大赛于 10 月 22 日中午 12:00 正式开启，历时七天，参赛人数超过 4500 人，刷新了历史记录。比赛共设置了约 25 道题目，涵盖了综合技能、程序逆向与漏洞利用、密码学与数学、Web 安全等多个方向。命题延续了往届的优良特色，努力结合科大特色，坚持向新生倾斜，控制题目难度梯度，强调引导和教育工作。正如信息安全的千变万化，每道题目各有其独有的魅力。《旅行照片 2.0》通过照片追随学长脚步；《关于 RoboGame 的轮子永远调不准速度这件事》、《线路板》、《片上系统》等题目则是做了硬件里的信息安全的尝试。比赛选手们则通过洞幽察微，打破常规，综合运用方法技能，勇攀信息安全的高峰。      除中国科学技术大学外，同作报告的还有来自南京大学、清华大学、山东大学、北京大学、浙江大学、西安交通大学、吉林大学等高校的师生。与会成员在论坛上进行了广泛且深入的交流。这次论坛为高校中的开源软件爱好者们提供了交流的平台，对在高校和科研院所中推广开源软件，建设开源生态具有积极的推动作用。  ","categories": [],
"tags": [],
"url": "/news/2023/08/nju-talk/",
"teaser": null
},{
"title": "2023 秋季学期新生活力课堂",
"excerpt":"在 2023 年 9 月 2 日，中国科学技术大学学生 Linux 用户协会于西校区的 3A102 教室开展了本学期的新生活力课程系列活动与社团宣讲。         新生活力课堂面向刚入学还在军训期间的新同学们。活动的上半场中，廖巍同学为大家带来了《实用工具介绍》，主要内容为科大的网络资源与学习生活中的实用工具的使用，希望新生能够在大学阶段快速地获取所需内容、利用常用的工具来提高学习科研的效率。廖巍从校内常用网址及其内容出发，讲到由科大计算机实验教学中心提供的 Vlab 云桌面、由 LUG 维护的 GitLab、由中国科学技术大学网络信息中心维护的 USTC LaTeX 这些云工具，再讲到一些专属于在校同学的“特权服务”。在后续的常用工具的介绍中，廖巍现场演示了 LaTeX 与基础 Markdown 编辑器 Typora 的使用，简明直观，现场反响互动热烈。      新生活力课程的下半场是王永福同学的《日常生活的信息安全》，他给同学们科普了基础的网络安全知识与常见的信息安全漏洞。提及网络安全防范时，王永福以 2022 年网络信息中心开展的以“中秋免费月饼领取”为主题的钓鱼邮件演练活动为例，警醒同学们网络诈骗无处不在。该次课程内容生动详实、贴近大家的日常生活，相信能为新生留下深刻的印象。      活动的最后，我们简要地介绍了 LUG 的性质、维护服务与开设活动，同时也对开源软件进行了一定的宣传与推广。在 LUG 协会成员的努力和同学们的积极参与下，本次新生活力课程圆满结束。感谢校团委与校学生社团管理指导委员会的支持！   活动照片和讲稿均可在 LUG FTP 上查看：   《实用工具介绍》PPT   《日常生活的信息安全》PPT  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2023/09/2023-freshmen-course/",
"teaser": null
},{
"title": "2023 软件自由日中国科大站",
"excerpt":"2023 年 9 月 16 日，中国科学技术大学软件自由日（Software Freedom Day）活动于下午 2 时 30 分在西区 3C101 教室及 B 站线上直播同步举行。本次活动邀请来自 PLCT 实验室的项目总监吴伟、来自大连理工大学的胡张治同学、来自 PLCT 实验室的软件开发工程师章翔以及来自墨客社区的沈达为我们带来精彩的演讲。除此之外，在闪电演讲环节中陶柯宇同学也为我们分享了他为科大镜像站编写的实用工具。      14 时 30 分，校学生 Linux 用户协会会长廖巍同学简洁地介绍了活动流程安排和演讲嘉宾后，软件自由日活动正式开始。         首先，吴伟老师回顾了 RISC-V 诞生的背景和历史。他由三个基本的观测得出两点推论，一是开源软件会将“吞噬一切”，二是必将出现自由开放的指令集，由此 RISC-V 应运而生。吴老师表示 RISC-V 的出现正好在一个合适的时间，为开源生态填补上了重要一环。在这之后，吴老师介绍了开源软件世界对 RISC-V 支持的各类新进展，同时也介绍了国内 RISC-V 现状以及活跃的开发团队、全球开源社区对 RISC-V 做出的支持与适配。其中，吴老师特别提到 PLCT 实验室对 RISC-V 开源软件项目做出了相应的贡献，期待能有更多人能够参与建设 RISC-V 社区。演讲结束后，吴伟老师为现场到来的同学每人赠送了一块 RISC-V 开发板，引起了热烈反响。      接下来，远在大连理工大学的 Arch Linux 用户胡张治同学通过现场连线与我们交流。作为一名 archlinuxcn 的维护者、FSF 成员，胡同学分享了自己参与开源社区的经历。在他演讲的第二部分，胡同学强调了自由软件的价值、推崇对用户自由与安全的重视，并分享了他个人目前正在使用的自由软硬件。在讲述的同时，胡同学通过远程拍摄展示了他的电子设备，包括装有 Arch Linux 的笔记本电脑、装有各类开源自由软件的智能手机等。他介绍了 Mastodon 分布式的社交网络与 Matrix 等开放协议，并回答了与 GNU/Linux、Android 系统相关的问题。在演讲的最后，胡同学提及了一些未来有潜力的自由软硬件，并与现场同学交流了国内自由软硬件的使用心得，引发了线上和现场同学的广泛讨论。      经过短暂的茶歇，同样来自 PLCT 实验室的软件开发工程师章翔老师为我们介绍了 OpenJDK8 移植 riscv64 的过程与进展，希望新人做移植工作时少走弯路。章老师首先对 OpenJDK 做了一些简要的介绍，然后从编译开始到解释器的移植与最后的运行调试，逐步介绍了移植的进展与过程，并着重分享了几点宝贵的移植经验。演讲结束后，现场同学积极提问，这让同学们对这一工作也有了更加深入的理解。         在这之后，闪电演讲拉开帷幕。来自墨客社区的沈达学长讲述了墨客社区的筹建工作，并分享了他追逐梦想的过程中经历的些许坎坷。墨客社区希望构建一个开放式的科技知识库，沈达学长在分享自己创业之路的同时也鼓励各位同学将自己的想法付诸实践。陶柯宇同学紧随其后，为大家介绍了自己编写的 HTTPS 镜像同步工具，通过解析目录树网页的方法来替代 HEAD 请求以获取源数据，降低了同步的开销。      17 时 30 分，今年的软件自由日活动完满结束。活动场上场下互动交流效果理想，演讲和分享丰富了同学对开源社区和自由软硬件的认识，同时也激发了同学们的思考和创造力，相信无论是开源社区还是自由软硬件的宣传都将深入人心。  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2023/09/SFD/",
"teaser": null
},{
"title": "LUG 小聚：Git 简介与使用心得分享",
"excerpt":"2023 年 10 月 22 日，校学生 Linux 用户协会举办了一场小聚活动。本次小聚是由王永福同学为我们带来的关于 Git 的简介与使用心得分享。      Git 是一款开源的分布式版本控制软件，多用于项目的管理与合作开发，能够便捷地进行开发历史回溯。Git 由一系列的小工具组成，配合使用以完成工作任务。      首先，王永福同学从创建工作目录、初始化 Git 版本库、编辑文件、添加到暂存区、进行最终的提交等方面演示了 Git 的基本操作，给线上线下的同学们一个对 Git 使用的直观理解。      紧接着，王同学结合他上述操作为大家讲明了 Git 的基本工作原理。工作区中含有一个 .git 目录，存放着 Git 版本库。Git 所有东西都是对象存储的，基本命令可以将文件在工作区与版本库间移动。每个提交（commit）构成了一个节点，Git 对分支的生成、合并与并行合作都有较好的支持。      在介绍完基础知识后，王同学也同样介绍了 Git 的一些进阶使用技巧，如分支（branch）相关操作、代码托管等等，同时也列举出了 Git 的常用命令并对其进行解释。为了对开发历史版本有更直观的了解，王同学推荐了几款图形化工具，其中重点展示了 VSCode 与 GitLens 的协同工作效果。      小聚接近尾声，王同学在最后分享了自己 Windows 与 Linux 协同工作时的心得体会，也提供了更深入了解 Git 操作的渠道。分享结束后，现场的同学积极提问，这周的小聚便在热烈的讨论声中画上了句号。  ","categories": ["LUG 活动","LUG 小聚"],
"tags": [],
"url": "/news/2023/10/gathering-git/",
"teaser": null
},{
"title": "Hackergame 2023 动员会",
"excerpt":"校学生 Linux 用户协会于 2023 年 10 月 27 日晚 19:00 举办了中国科学技术大学第十届信息安全大赛（Hackergame 2023）动员会，旨在为参赛者提供比赛规则、流程和常用工具的介绍，帮助大家更好地准备比赛。      Hackergame 作为一项旨在推广信息安全知识和提高参赛者信息安全技能的比赛，涵盖了多个方向的赛题，包括但不限于综合技能、程序逆向与漏洞利用、密码学与数学和网站安全类等。Hackergame 的题目设计不仅考察了参赛者的理论知识，更注重实际操作，使参赛者能够在比赛中不断提高自己的技术水平和实战能力。除了比赛本身的挑战，Hackergame 还提供了一个宝贵的交流和分享的平台。参赛者有机会与其他技术爱好者交流，分享自己的技术心得，并学习他人的经验。这种技术社交不仅促进了信息安全领域的知识传播，也为年轻的技术爱好者提供了与同行互动的机会。通过这种互动，参赛者能够建立联系、拓宽视野，更好地了解信息安全领域的前沿发展，这对于个人的职业发展和技术成长都具有重要意义。      活动首先由 Linux 用户协会的杨柳同学担任主讲人，他详细介绍了比赛的基本信息，包括比赛时间、网址和参赛须知等。杨柳同学还分享了一些自己的解题思路与往年的参赛经验，让参赛者能够更好地准备自己，迎接比赛的挑战。      紧接着，NEBULA 战队的崔泽仁同学上台进行了战队的招新宣传。他介绍了 NEBULA 战队的背景和成就。崔泽仁同学还详细介绍了 CTF（Capture The Flag）比赛的一些情况，包括比赛形式和赛程等，为想要参与比赛的同学提供了宝贵的信息。他还回答了同学们提出的问题，解除了他们的疑虑，吸引了一部分同学加入这个充满活力的团队。      最后，NEBULA 战队的袁保杰同学举例了 Hackergame 2022 的部分题目，为大家详细介绍了一些题目的解题方法。他通过实际案例，生动形象地展示了解题的过程，让参赛者们能够更好地理解和掌握解题的技巧。袁保杰同学的示范受到了在场学生的欢迎，大家纷纷表示受益匪浅。      整个动员会充满了技术氛围，参与者们积极互动，踊跃提问，展示了大家对技术挑战的浓厚兴趣。通过本次动员会，参赛者不仅获得了宝贵的比赛信息和解题思路，还有机会加入 NEBULA 战队，与志同道合的伙伴一起挑战技术巅峰。   Hackergame 2023 动员会为比赛的顺利进行提供了有力支持。希望更多的同学能够积极参与比赛，锻炼自己的技术能力，同时也感谢 NEBULA 战队为大家提供了如此精彩的分享和招新机会。期待能在比赛中见证同学们的精彩表现！  ","categories": ["LUG 活动"],
"tags": [],
"url": "/news/2023/10/Hackergame2023-pep-rally/",
"teaser": null
},{
"title": "Hello! LUG Planet",
"excerpt":"欢迎大家来到 LUG Planet！这是一个刚刚被发现的新星球，百废待兴。本文是 LUG Planet 的说明书，在你入驻之前，不妨先驻足欣赏一下这片风景。😀   LUG Planet 是什么？   LUG Planet 是……      由 USTCLUG 负责运营和管理的群体博客。   目标读者与参与者：            USTCLUG 会员；       认同 USTCLUG 理念的同好；       希望积极参加 USTCLUG 线上活动的朋友。           主要话题为 USTCLUG 社团的活动覆盖范围：            UNIX、Linux 及自由/开源软件；       Windows 与 Microsoft 新技术；       信息安全；       这些技术与 USTC 的碰撞与融合。           LUG Planet 是精神上的 Linux 文摘 计划的延续。我们认可这个群策群力式的知识汇集的理念，但使用更方便和更自由的形式，从而鼓励大家能更积极地参与到这个项目中来。   订阅我们   你可以做一个默默潜水的读者，也可以在评论区与作者激辩，或者亲自成为写作者。但无论如何，你一定非常关注 LUG Planet 的动态。所以我们提供了多种方式确保你能得到及时的通知：      RSS 订阅（推荐）。由 LUG Planet 本身提供的服务，最完善且及时；   QQ 公众号。QQ 号：2786229166；   微信公众号。ID：ustclug；   Telegram 频道。邀请链接：https://t.me/lug_planet。   免责声明：我们可能不会将所有动态都公布在这些信息渠道上。   如果你想“共襄盛举”，加入写作者的行列，就请仔细阅读下面的内容，确保我们达成共识～   运作方式   作为一个群体博客，LUG Planet 严重依赖于各位作者的辛勤劳动，没有内容，博客将不能称为博客。虽然为时尚早，但请允许我在此提前表示感谢！ 🙂   在 LUG Planet 上，主要有两种角色类型：作者和编辑。下面我们详细介绍这两类角色的职责。如果你不认可其中的某些条款，请与我们联络并陈述理由。   （其实还有“牛顿”——运维人员，不过就让他们继续呆在幕后吧～）   作者   任何人都可以成为作者！我们不限制你的身份，无论你是否是 USTC 的学生、校友、老师，只要你认同 USTCLUG 的理念，我们就欢迎你的来稿。   参与的方法很简单，只需为 本网站仓库 提交 Pull request 即可（如果文章包含图片等大二进制文件，需要将相关文件 PR 到 网站静态内容仓库）。具体操作细节可参考 仓库 README 与 Planet 文章模板   如果觉得麻烦，可以使用邮件（见文章最后）等方式单独联系我们，我们可以帮助排版并发布 :-)   （在未来我们会根据反馈定期对文章进行评选，优秀作品的作者有机会得到我们的奖品哦~）   与此同时，作者应该承担如下责任：      遵守 LUG 网络服务总则；   对内容的真实性、有效性和合法性负责；   配合编辑对稿件质量进行提升。   发布后，我们鼓励作者根据读者的评论持续改进文章质量。   任何作品的著作权属于原作者，但如果你想在 LUG Planet 这个平台上发布作品，需要同意：      USTCLUG 可以对这些内容进行再分发，即可以在 LUG Planet 及其他 LUG 官方信息渠道（包括但不限于 QQ 空间、Telegram 频道等）重发布；   USTCLUG 可以对这些内容进行微小修改。我们不会改变文意，大概是帮助你修改一些错别字和术语大小写等等细枝末节的问题；   USTCLUG 可以使用 USTCLUG 的名义对这些作品进行宣传；   文章发布以“现状”发布。不同版本的同一作品，其授权许可应该是互相独立的。在 LUG Planet 上发布作品就代表你同意：即使未来变更作品的许可协议，已被发布的版本将仍然按原有协议许可给 USTCLUG 展示或以上述被提及的方式继续使用。在未作出特别陈述的情况下，在 LUG Planet 上编辑你撰写的已经发布的文章默认继续使用上一个版本的许可协议。（简单说，就是一旦你的文章被发布，就无法撤回了。但你有权选择将新版本的文章不授权给 LUG Planet 使用。）   为了方便起见，除了这些条款，你应该允许你的作品在 CC BY-NC-SA 4.0 (国际) 协议下发布，同时同意上面的附加条款。这是因为我们不是律师，所以选择一个已经写好的许可证书。   这里需要提醒一下，虽然文章的版权仍然属于原作者，但发布与否是由编辑决定的。   编辑      审核评论及垃圾评论清理；   审核稿件是否适合发布在 LUG Planet 上；   在能力范围内，协助作者确认发布该文章是合法的（但不提供任何担保）；   在能力范围内，协助作者改进文章质量。   投稿标准与类型   为了鼓励大家能积极投稿而不要过多地考虑质量问题，我们设立的标准非常宽松：      合法；   内容长度不少于三句话；   使用简体中文（汉语普通话），正确使用标点符号；   语句通顺，正确输入专有名词的大小写，不故意欺骗读者；   符合本博客的活动主题。   我们特别欢迎以下类型投稿：      小聚话题的延伸   折腾的心得体会   自由/开源软件教程   有趣的自由/开源软件的推介   通俗易懂的技术内幕   但如果你要长篇连载（连载篇数大于等于 3），那么请向编辑们证明你能完结这个系列！   上面说得可能有些抽象，下面举几个例子吧。当然，不限于这些例子。      你是小聚的主讲人。讲完后意犹未尽，那么你可以在这里进一步阐述；   你是小聚的听众之一。听完后意犹未尽，那么你可以在这里发表你的看法并进行延伸讨论；   你是 Linux 新手，不管是安装还是维护 Linux 都有了自己的独特的心得和体会，那么我们也欢迎你在这里发布；   你解决了 Linux 在某种硬件上的兼容性问题，而在互联网的其他地方并不能找到解决方案，那么我们特别欢迎你在这里发布；   你对某种 Microsoft 新技术有一定了解，那么我们欢迎你在这里向大家介绍。   标准很宽松，话虽这么说，但我们仍然有“禁区”。下面这些话题是我们认为不适宜的：      过偏过难的技术向文章            过于专门的文章我们也许无力审核       读者面过于狭窄，且可能与 LUG Planet 目标读者重叠较小，发布在 LUG Planet 上“性价比”较低           业界资讯            这类文章时效性强，与更偏向于积累知识的 LUG Planet 不太搭调       我们认为这类文章有更好的资讯站点           商业广告及赞助内容            USTCLUG 是一个不营利的学生社团           与 LUG 主题没有任何关系的内容            包括但不限于新式永动机设计、大陆漂移学说不成立的分析、相对论错误的第 114514 种证明       编辑和读者对这些内容都不感兴趣，所以不能发布           其他任何编辑认为不适宜的内容   联系方式   如果你有任何有关文章发表上的问题、或任何对 LUG Planet 发展上的建议，请立即与我们联络。联系邮箱：planet@ustclug.org。   目前 LUG Planet 不知道谁在负责 😥   更新日志   2021-01-24: 删除了有关 Wordpress 的内容，并更新了订阅方式。   2021-01-26: 更新了投稿操作细节。  ","categories": [],
"tags": [],
"url": "/planet/2018/08/hello-lug-planet/",
"teaser": null
},{
"title": "USTC Linux 用户生存指南",
"excerpt":"本指南指导中科大 Linux 用户如何使用 Linux 完成各门课程、处理学业事项，以及运行需要的专业软件。“兼容性”仅代表使用 Linux 完成任务的难易程度，与其他指标（如课程本身质量和难度）无关。   注意：本指南目前仅包含部分计算机专业本科课程。欢迎其他同学贡献更多内容！   课程   程序设计   mk (16 级):   程序设计课程主要讲授 C 语言知识，而 C 语言本身就是用来 UNIX 的原生语言，所以不会有任何障碍。   建议使用 GCC 或 Clang 作为编译器，使用 GDB 作为调试器。可以选用任意一款文本编辑器（Vim、Emacs、Sublime、Atom、VSCode、gedit、Kate 等）或集成开发环境（如 CLion、Geany、KDevelop）。   兼容性：★★★★★   数据结构   mk (16 级):   主要讲授数据结构及其 C 语言实现。和程序设计一样没有任何问题。   课本（严蔚敏版数据结构）分光盘版和无盘版。光盘内容为算法和数据结构的演示程序，仅支持 MS-DOS 和 Windows，其功能可完全由 VisuAlgo 替代。所以建议购买无盘版。   taoky (17 级):   补充一点，如果真的要跑光盘的话，用 wine 和 DOSBOX 可以顺利执行。   兼容性：★★★★★   模拟与数字电路实验   mk (16 级):   旧开发板：Digilent Nexys 2 和 3 均有 Linux 工具，Xilinx ISE 也有 Linux 版本。笔者经验是 Xilinx ISE 可以正常使用。   新开发板(Digilent Nexys 4 DDR)：Xilinx Vivado 有 Linux 版本。可模拟，综合，实现，烧录。（含串口通讯等 exe 文件的实验可能无法正常开展）   注：除了烧录 FPGA，可以完全使用自由软件替代。仿真可以使用 Icarus Verilog 和 GTKWave。   兼容性：★★★☆☆   taoky (17 级):   我们这一届开始全面用新的开发板 (Nexys 4 DDR)，实验可以完整在 Linux 上完成。（没有见到上面说的串口通讯实验）   兼容性：★★★★★   计算机系统概论（H）   mk (16 级):   LC3 Tools 提供 Linux 版本。作业和 Lab 只需提交 PDF 版本。教学资源、课程要求见课本官网或课程官网：http://acsa.ustc.edu.cn/ics/。   LC3 Tools 二进制文件(.AppImage)   taoky (17 级):   LC3 Tools Linux version 没有中断的支持。不过我们这一届没有出这个实验。   兼容性：★★★★☆   计算机组成原理   mk (16 级):   实验主要为仿真，FPGA 开发板使用较少。部分仿真实验使用 Xilinx ISE 较为方便。最后的大作业可选烧录到 FPGA 上。   注意，本课程可能必须使用 Xilinx ISE 进行仿真，因为只有 ISE 支持以直观方式查看「内存」的内容。   兼容性：★★★☆☆   taoky (17 级):   和数电实验一样。而且我觉得搞 MIPS/RISC-V 的 toolchain Linux 更方便。   兼容性：★★★★★   regymm (17 级):   注：如果有串口通信实验，在 Linux 上有 picocom 等工具，不必非要使用专门的 exe 软件。   操作系统原理与设计   mk (16 级):   操作系统课不可能绕过 Linux！就算是 Windows 用户也会被迫安装 Linux 虚拟机。所以 Linux 用户不会遇到任何问题。   兼容性：★★★★★   编译原理与技术   mk (16 级):   本课程会大量使用开源/自由软件，如 Flex、Bison、ANTLR、LLVM 等。作为 Linux 用户，当然 Feel at home~   兼容性：★★★★★   计算机网络   mk (16 级):   使用 Wireshark，支持 Linux。   taoky (17 级):   不同班级的实验会不一样，但是基本上都需要使用 Wireshark。有些实验会有 socket 编程相关的内容，兼容性上没有问题。   兼容性：★★★★★   微机原理与系统   mk (16 级):   需要用到 MASM。大概使用 DOSBox 就能应付（？）   taoky (17 级):   我记得我做微机原理实验的时候，开了个 Windows XP 的 VM，毕竟实模式的 DOS 还是有点麻烦的，如果处理不好，每次都要重开 DOSBOX。而 XP 的好处是可以用 NTVDM 直接跑 MASM，并且大部分实验中编译得到的 .com 文件也可以直接跑，只有少部分实验不得不开 DOSBox。   另一个麻烦的东西是 Emu8086。没有测试过它能不能用 wine 跑起来（感觉应该可以）。   相比于其他依赖 Windows 的实验来说，微机原理比较好的一点是，可以直接开个非常轻量的 Windows XP 虚拟机完成所有实验。不过这门课现在变成选修了。   BTW: 有同学问如何让 DOSBox 在 Linux 下在当前终端处理输入输出。如果有这样的需求（比如说你在用 VSCode Remote 连到某台机器上做实验），可以尝试 https://github.com/dosemu2/dosemu2，参考 https://retrocomputing.stackexchange.com/questions/16173/emulate-a-text-mode-dos-program-using-a-unix-terminal。   兼容性：★★★☆☆   算法基础   mk (16 级):   和数据结构差不多，写一些与平台无关的算法代码。   兼容性：★★★★★   数据库系统及应用   mk (16 级):   PowerDesigner?! 看起来只能 Wine / 虚拟机 了。   taoky (17 级):   我这届金培权老师班级的实验是：实验一写 SQL，实验二用 PowerDesigner 画图，实验三写使用 MySQL 的小 project。实验一和三都可以在 Linux 下顺利完成，只有实验二需要依赖 Windows。   兼容性：★★☆☆☆   人工智能基础   mk (16 级):   实验与操作系统关系不是很大~   兼容性：★★★★★   计算机体系结构   mk (16 级):   写模拟程序，可以使用任何语言，所以问题不大。   兼容性：★★★★★   taoky (17 级):   目前体系结构实验变成了写 Verilog，跑 Vivado。最后一个实验要求运行多 Cache 一致性和 Tomasulo 模拟器，这两个是 Windows 程序。我用 wine 尝试跑过，发现显示有一些问题。   兼容性：★★★☆☆   大学英语听说 I-IV   regymm (17 级):   这门课可能需要随书附带光盘中的练习资料。自带的练习软件无法在 wine 中运行。然而，光盘中的音频和视频文件均可以直接播放（老师可能也会提到这一点）。   同时，二教 8 楼等听力考试的机房似乎也在平时开放供同学使用。   兼容性：★★★☆☆   金工实习   regymm (17 级):   需要使用 AutoCAD 和 SolidWorks 完成课后设计作业。或许有自由软件替代。这类软件对图形要求较高，VirtualBox 上表现不佳，我只能选择使用 VMWare。这方面似乎 Linux 上确实无太好的解决方案。   虚拟仿真实验需要安装科大平台提供的 Windows 程序并在指定浏览器运行。在 VirtualBox 中使用时图形性能十分低下，不影响完成实验但体验不佳。   如果手头没有性能较好能够在 VMWare 中运行 CAD 软件的机器，可以选择在工院机房完成，那里有性能不错并预装好所需软件的 Windows 机器。   兼容性：★☆☆☆☆   大物实验   regymm (17 级):   对于大部分实验，只需要处理数据并绘图。Origin 是”官方推荐“的软件，但是用 MATLAB 或 Python 等可以胜任。   个别实验似乎会要求用 U 盘拷贝 Origin 文件并课下分析，这就没有办法只能用 Origin 了。而也有个别实验让我觉得 Origin 明显是更加明智的选择。   个别实验需要用（可能是实验室助教自己编写的）基于 MFC 等框架的处理程序，但我遇见的所有情况都是在课上分析完成，并不需要在自己电脑上使用这些程序。   核物理专业实验等需要分析一些专门处理软件（探测器上位机）或示波器导出的数据，但似乎都是纯文本，用 Linux 不会有什么困难。有时也可能使用 ROOT.   总之，如果你只需要做一级实验，应该不会遇到任何 Linux 无法处理的情况。然而如果你需要做三级甚至更多级，最好为 corner case 做好准备。对于这一系列本就较为繁琐的课程，从节约时间的角度考虑，装上 Origin 以备不时之需也是应该的，即使是在偶有问题的 wine 上。   兼容性：★★★★☆（一级二级），★★★☆☆（三级至五十三级）   计算物理   regymm (17 级):   除了 C、C++、Fortran 等编程外，可能用到 MATLAB、Mathematica、Origin  等，但没有任何一个是必须的。可以根据个人喜好或兼容性选择。   兼容性：★★★★★   计算方法   regymm (17 级):   除了基本程序设计软件之外，可能会用到 MATLAB.   兼容性：★★★★★   学业杂项   托福   regymm (17 级):   小站托福可以在 Crossover 中较好的运行，有 bug 但并不会在做题过程中出现。不建议在虚拟机中使用，因为音频可能质量下降。   兼容性：★★★★☆   实验报告/文书编写   regymm (17 级):   无论是 LaTeX、LyX、Texmacs 还是 IDE 如 TexStudio，都有 Linux 版本，甚至可能安装更加容易。   Word 或 Excel 等格式的文件主要是社团/学生会/班级的填报表格等，WPS for Linux 可以胜任。如果不放心，可以在手机上的 Office 软件中 double check. 另外，我在 Crossover 中安装的 Office 2010 套装运行良好（而 Office 2013 和 Office 2016 经常出现各种问题）。   兼容性：★★★★☆   申请出国   regymm (17 级):   文书可以用 TeX，填写各种申请表也只需要一个 modern 的浏览器。需要在 PDF 中添加注释，或在 Word 文档中编辑的情况很少但确实存在。Linux 上的 Foxit Reader 是不错的 PDF 编辑器，但在这种事情上我还是选择了虚拟机中的福昕企业版（科大正版软件有提供）和较新的 Office 套装。   兼容性：★★★★★   专业软件   MATLAB   regymm (17 级):   专利软件 MATLAB 是有 Linux 版的，并且科大正版软件有所提供。本人在用 MATLAB 完成计算、绘图、网络编程、Simulink 等任务时均未遇到任何问题。   然而，如果要使用一些第三方厂商提供的模块和/或进行硬件控制，可能会遇到 Linux 上无法正常使用的情况。   兼容性：★★★★☆   Mathematica   regymm (17 级):   专利软件 Mathematica 是有 Linux 版的，并且科大正版软件有所提供。尽管界面相比 Windows 版稍丑（个人看法），未遇到任何功能问题。   兼容性：★★★★★   Origin   regymm (17 级):   专利软件 Origin 是交互式科学绘图和数据分析工具，没有 Linux 版。在 Origin 2017 / Origin 最新版 / wine 32 位 Win10 模式 / wine 64 位 Win10 模式的组合中，大部分可以正常安装运行。   然而，需要注意的是，尽管大部分功能能正常运行，一些个别功能可能会 fail silently，如果遇到某一操作无法执行，除了自己操作错误外，也可能是其本身的问题。这可能耽误很多时间。   VirtualBox 可以正常运行。   可以考虑 QtiPlot、gnuplot、甚至 ROOT 完成绘图。   兼容性：★★☆☆☆   ROOT   regymm (17 级):   CERN 的 ROOT 同样有原生 Linux 支持。课程提供的程序文件中只可能有个别地方，如文件路径格式等，需要修改。   兼容性：★★★★★  ","categories": ["Experience"],
"tags": ["Courses"],
"url": "/planet/2018/08/USTC-Linux-user-guide/",
"teaser": null
},{
"title": "一根网线安装 Linux——PXE 介绍",
"excerpt":"预启动执行环境（Preboot eXecution Environment，PXE，也被称为预执行环境)提供了一种使用网络接口（Network Interface）启动计算机的机制。这种机制让计算机的启动可以不依赖本地数据存储设备（如硬盘）或本地已安装的操作系统。——摘自 Archwiki   PXE 原理介绍   PXE 协议是由 Intel 设计的，它可以使计算机通过网络启动。协议分为 client 和 server 两端，PXE client 在网卡的 ROM 中，当计算机引导时，BIOS 把 PXE client 调入内存执行，并显示出命令菜单，经用户选择后，PXE client 将放置在远端的操作系统通过网络下载到本地运行。   PXE 可以通过网络直接启动一些 Live Linux，或者调用 Linux Installer，GParted 等工具，较使用 U 盘启动更加方便快捷，有多种工具，Live 系统等可供用户挑选，在紧急维护情况下也有很大的作用。   例子：图书馆查询机   图书馆内的图书查询机就是用 PXE 启动的，启动镜像叫 liims，里面包含了一个以图书馆透明计算系统为主页的浏览器（主页包括了图书查询，邮箱登录，学习空间预约等功能），还有瀚海星云的 telnet 客户端和彩虹猫，用户也可以自己启动一个虚拟机，用 PXE 启动进入查询系统。   PXE 怎么用   使用条件   电脑最好内置有 PXE Boot Agent，并且已经激活；没有现成支持的话，有几种解决办法。 所在的网段最好有能提供正确的 PXE 信息的 DHCP 服务器，以及可以通过 TFTP 数据包的网关；没有的话可以请管理员加以设置，或自己动手把网络启动系统加入 GRUB/LILO 菜单。 如果所在实验室用地址转换/伪装技术建立了自己的子网，则需要配置。   科大校园网   连接校园网（一般需要插网线）调节 BIOS 设置进入 PXE 环境即可直接进入 USTC PXE   非科大校园网   首先需要进入 PXE 环境，这里以在 virtualbox 虚拟机使用 iPXE 为例， virtualbox 自带的 PXE 功能比较简单，所以使用 iPXE 替代之。从 iPXE 官网下载 iPXE 的 ISO，然后让虚拟机从这个 ISO 启动。 按 Ctrl + B 进入 iPXE 的命令行模式。然后输入以下命令：   dhcp //如果已经获取到了地址则请忽略 set 210:string http://202.38.93.94/boot/tftp/ chain ${210:string}pxelinux.0   注：目前 PXE 处于更新状态，新版 PXE 还有一些问题，使用上述命令出现问题的同学请使用旧版 PXE，使用 Windows PE 的同学也请先使用旧版 PXE，命令如下   dhcp //如果已经获取到了地址则请忽略 set 210:string http://202.38.93.94/boot/tftp/ chain ${210:string}lpxelinux.0   接下来你就能见到 USTC PXE 的界面了 🙂   注意到我们使用的 iPXE 的命令里使用的是 http 协议，这也为一些在 NAT 后面而无法使用 tftp 的用户提供使用 USTC PXE 的方法。   另外 iPXE 也可以刻录到 usb 上，这样主机如果想用 PXE 就可以用 usb 启动 iPXE （如果主机自带的 PXE 比较弱），然后使用上面的命令进入 USTC PXE 了。 iPXE 的 usb 镜像可以从 http://boot.ipxe.org/ipxe.usb 下载，然后用 dd if=ipxe.usb of=/dev/sdX 来刻录。   下载 iso 作为虚拟光驱挂载在虚拟机上，从 CD 启动，   PXE 有什么             PXE 的启动菜单        Linux 安装工具      Ubuntu   Debian   Kali   OpenSUSE   Centos   Arch Linux   Fedora   Live System      Ubuntu   Debian   Deepin   Archlinux   Manjaro   Windows PE      实用工具           Hardware Detection Tools (hdt)             hdt 中的查看硬盘信息部分          PXE Knife   GParted Live   Clonezilla live   图书馆查询系统      应用场景分析   体验新系统   PXE 的 Live System 菜单中包含了 Debian，Deepin，Arch Linux，Manjaro 等 Live 系统，选择一个 Live 系统启动，就可以不用安装就能体验 Linux 的使用。   安装新系统   PXE 中 Linux Installer 菜单下有 Debian，Kali 等多种 Linux 发行版的安装器，当然也可以通过 Live System 进行安装，PXE 使用的 Live System 与写了 Live iso 的 U 盘功能是一样的。   Linux 密码恢复，磁盘检查等   Linux 用户通常需要准备一个 Live USB，在忘记密码，磁盘检查等需要对根分区进行操作等情况下能够进入 Live，再 Live 上面对本机系统进行各种操作。PXE 其实就在不需要 U 盘的前提下实现了这个功能，而且由于 PXE 上面有多种镜像，用户就有了多种选择。   进入 Live 之后，如果进入图形界面，启动一个终端模拟器（即 terminal）即可，或者进入 tty。进行密码恢复等操作一般需要 root 权限。   密码恢复：首先挂载本机系统的根分区（mount 设备名(如 /dev/sda1)**挂载点），然后 chroot 进入挂载点，再用 passwd 用户名（root 可以不加参数）命令修改密码。   磁盘检查，分区修改等：fsck 和 fdisk 命令均需要进行操作的分区未被挂载。如果磁盘检查，fsck 设备名 即可。分区修改，如扩容等操作先 fdisk 设备名，进入 fdisk 程序内部，再执行 fdisk 命令即可。fdisk 命令可以使用 m 查看。fdisk 命令较为简单，如 p 为打印分区表，d 为删除分区，n 为新建一个分区，w 为写入分区表等，执行命令后 fdisk 会对接下来进行的操作给出提示。分区修改也可以使用 gparted live，图形界面可能更友好一些，下文会进行介绍。   硬盘分区扩容   GParted 的界面较为直观，选择设备后界面就会出现这个设备的分区情况，点击一块分区可以进行删除，移动，改变大小或复制，如果有空闲空间也可以点击 New 新建分区。移动分区或向前扩容时要注意，改变分区起始位置可能会使文件系统损坏。每次进行一次操作后最下方会增加一个条目，确认修改时要点击 Apply，此时 GParted 会根据 operation list 进行操作并给出日志，在完成之后会更新分区表。    使用 GParted 改变分区大小和位置   Windows 下的启动修复等   PXE 上还有 Windows PE 的镜像，因此也可以通过 PE 来对本机的 Windows 进行启动修复，文件移动复制，修改注册表等操作。   总结   相比使用 U 盘安装时还需要下载镜像，制作启动盘等繁琐的操作，使用 PXE 只需要插上网线，并且调节 BIOS 设置即可进入 live linux，而且还有 GParted 等一系列工具可用，在服务器等出现问题时应急处理也很有帮助，还是很方便的。同学们也可以事先安装 ipxe，以便在校外或直接连接时连接不上等特殊情况时也可以使用 PXE。   PXE 目前由李文睿同学维护，如果需要反馈 BUG，可以发邮件到 lug AT ustc.edu.cn 或 sirius AT ustclug.org。  ","categories": ["Technology"],
"tags": ["PXE"],
"url": "/planet/2018/10/PXE-intro/",
"teaser": null
},{
"title": "一个 NFS 的简介",
"excerpt":"NFS（网络文件系统，Network File System）是一个分布式的文件系统，可以用于在局域网中共享文件。它通常运用在 Unix 与类 Unix 操作系统中。对于 Linux 服务器之间的文件共享来说，NFS 相比于其他的方案（如 Samba）更加方便，性能也更好。对于应用程序来说，NFS 也是透明的。   简单配置 NFS   我们以两台 Debian 10 的机器为例1简单配置 NFS 服务端。其余的发行版可以查询各自的手册以获取详细信息。   在绝大多数情况下，NFS 支持已经安装在 Linux 内核中。我们可以使用以下命令安装内核态的 NFS 服务器实现：   sudo apt install nfs-kernel-server   （如果有兼容 NFSv2 和 NFSv3 的需求，需要安装 portmap）   出于安全性的考虑2，我们假设 NFS 共享的根目录是 /srv/nfs4。 如果需要共享的目录在其他位置，可以使用 bind mount 的方式挂载上去。（当然，对于简单的配置来说，不这样做问题也不大）   mount --bind 实际放置文件的目录 /srv/nfs/your_folder_name   编辑 /etc/exports，设置共享文件夹的位置、允许访问的 IP、权限等，以下是一个示例。   /srv/nfs4/Downloads 192.168.124.0/24(rw,sync)   这里设置了 /srv/nfs4/Downloads 可以被 192.168.124.0/24 的子网访问，如果希望所有人都可以访问，可以用星号 * 代替这里的网段。参数为可读写 (rw)，同步 (sync，即更改操作完成之后才会返回用户的请求)。更多的参数细节可以至 man exports 查看。   接下来，重启 NFS 服务，服务器端就配置好了。   sudo systemctl restart nfs-kernel-server   接下来配置一下客户端。安装 nfs-common，之后就可以愉快地挂载了。   sudo mount -t nfs4 192.168.124.18:/srv/nfs4/Downloads /mnt/nfs_mount/   此处将服务器 192.168.124.18 上的 NFS 共享挂载到了 /mnt/nfs_mount/ 文件夹下。可以看到服务器的文件显示在了客户端中，可以正常打开。   可以使用 showmount -e 服务器名称或 IP 来查看某台服务器上可挂载的 NFS 共享。   如果发现写入没有权限的话，这是由于客户端用户访问时的权限在服务器端会变为匿名用户 (nobody. uid, gid = 65534) 以保障安全性。可以调整文件夹的权限、调整「匿名用户」为指定的 UID 和 GID，或者设置导出参数 no_root_squash，使客户端用户权限可以在服务端保持（很危险，因为在挂载点中，客户端的 root 和服务端的 root 是一样的）。   Windows 和 macOS 也支持（当客户端）吗？   当然啦。（虽然可能有点麻烦）   Windows   下面以一台在同一局域网的 Windows 10 机器为例。在「启用或关闭 Windows 功能」中添加 NFS 客户端支持。             Windows 功能 =&gt; NFS 服务 =&gt; NFS 客户端        此客户端会在系统中安装 mount 等工具。             Windows 版本 mount 的使用帮助        如果我们需要挂载上面那个服务器的共享，可以输入以下命令：   mount \\\\服务器名称\\共享路径 设备名（盘符）             大概是成功挂载了        只不过……好像哪里不太对劲？             中文的文件名变成了乱码        Windows 中官方的 NFS 支持提供的 mount 不支持 UTF-8 编码，导致了乱码的产生。如果需要 Windows 支持，考虑以下一些方法：      使用 fuse-convmvfs 修改服务端文件的编码，详见此 Super User 上的回答。   找一个别的 Windows 的 NFS 客户端。   如果正在使用新版的 Windows 10，在区域设置中启用 Beta 版本的 UTF-8 支持。注意这可能会导致一部分软件出现乱码。   如果要取消挂载，使用 umount 即可。   macOS   相比于 Windows 的挂载体验来说，macOS 由于是 Unix 系的操作系统，挂载 NFS 就方便一些。直接把 Linux 的命令复制过来就……   $ sudo mount -t nfs4 192.168.124.18:/srv/nfs4/Downloads nfs_mount Password: mount: exec /Library/Filesystems/nfs4.fs/Contents/Resources/mount_nfs4 for /Users/tao/nfs_mount: No such file or directory   诶？稍微调整一下……   $ sudo mount -t nfs 192.168.124.18:/srv/nfs4/Downloads nfs_mount mount_nfs: can't mount /srv/nfs4/Downloads from 192.168.124.18 onto /Users/tao/nfs_mount: Operation not permitted   这是因为 NFS 服务器默认配置要求来源端口小于 1024 以「保障安全」（因为这样的端口只有 root 用户可以开）。当然 macOS 中 mount_nfs 的文档里面也这样吐槽：      resvport: Use a reserved socket port number.     This is useful for mounting servers that require clients to use a reserved port number on the mistaken belief that this makes NFS more secure. (For the rare case where the client has a trusted root account but untrustworthy users and the network cables are in secure areas this does help, but for normal desktop clients this does not apply.)     BSD System Manager’s Manual, mount_nfs    有两个解决方案：      服务器端参数加入 insecure。这样的话 Finder 也可以轻松挂载。   命令行加入 -o resvport 参数。   挂载之后，在 Finder 侧边栏也会显示。编码显示非常正常。MS 出来挨打   在 mirrors 中的实践   在新的存储等设备买来配置好之前，我们的 mirrors 服务由服务器 mirrors2 提供。随着各种镜像逐年增大，我们的 ZFS pool 的空间越来越小，尤其是在同步的时候。这个月已经出现了多次空间吃光的情况，出现时会导致导致同步任务堆积无法完成，系统负载达到 100 以上，I/O 性能急剧下降。   我们对日志分析后发现，bioc 仓库（R 语言的分子生物学软件仓库）访问量很小，但是空间占用巨大（约 1.4 TB）。由于我们前段时间多出一台闲置的服务器（命名为 mirrors3），目前我们将 bioc 放置在了 mirrors3 上，同步任务也由 mirrors3 完成，NFS 到 mirrors2 上继续正常提供服务。这一项工作主要由付佳伟同学完成。多出来的磁盘空间应该可以维持比较长一段时间的稳定工作。   在一部分细节方面，服务器还没有配置完成，在 status 页面的显示也比较奇怪，这是因为此页面读取的是 mirrors2 的数据。我们未来会进行改进，如果你在使用 bioc 仓库时遇到问题，也欢迎通过发送邮件到 lug@ustc.edu.cn 或者在 https://github.com/ustclug/discussions 中提交 issue 进行反馈。     另外，planet 已经有将近一年的时间处于死寂的状态。我写的其实不太好，此次更新主要是希望能够引起大家的注意，收到更多的稿件。另外有一些（未完成的）稿件在我们的草稿箱里，我会去给对应的作者催稿的（   由于 WordPress 的用户权限配置问题，你在注册账号后可能找不到投稿的地方。直接发送邮件到 planet@ustclug.org 跟我们说吧（当然 lug@ustc.edu.cn 也行，我也会处理的）！也欢迎提供你的博客的 RSS 地址，我们可以选择文章转载到这里。                  https://wiki.debian.org/NFSServerSetup &#8617;                  https://wiki.archlinux.org/index.php/NFS#Server &#8617;           ","categories": ["Technology"],
"tags": ["NFS"],
"url": "/planet/2019/08/NFS-intro/",
"teaser": null
},{
"title": "萌新入门手册：如何使用 nc/ncat？",
"excerpt":"本文用于介绍信息安全大赛中不少题目需要使用的 nc/ncat 工具。   nc 是什么？   nc/ncat 是 netcat 的缩写，它可以读写 TCP 与 UDP 端口——或许你看不懂这句话，这没有关系。简单地说，它可以在字符界面下，让你和服务器沟通交流。   一般来说，有很多题目都会要求你使用 nc 连接到他们的服务器，并且进行交互，获得 flag。   如何安装 nc？   nc 命令在 macOS 中是自带的，在 Linux 中一般自带，或是可以使用相应的软件包管理器安装（如在 Debian/Ubuntu 中这个包名叫 netcat）。   当然，如果你在看这篇手册，你的操作系统很有可能是 Windows。它不自带 nc，尽管可以用 WSL 或者虚拟机的方式解决，但是如果你觉得这样太麻烦了，也有另外一些方法。   使用静态链接的 ncat 程序   前往 https://github.com/andrew-d/static-binaries/blob/master/binaries/windows/x86/ncat.exe 下载此程序。我们也在这里提供了一份。下载下来即可。   ncat.zip 下载   注：nc/ncat 事实上是两个不同的程序，但在我们接下来的使用上，基本没有区别。ncat 是由 Nmap 项目开发的“重置版的 Netcat”。   我的杀毒软件报毒！   这是 virustotal 的检测结果：https://www.virustotal.com/gui/file/d0baada87420dd7c2e63d0dd3248749c06b53806d3021863c4fa659608053a8a/detection   如果你不相信此来源，也可以下载 nmap（一个网络探测、扫描工具），它会附带一个 ncat。   如何使用 nc?   Windows   直接双击，你会看到一个窗口一扫而过——这是正常现象。你需要使用「命令提示符」或者「PowerShell」来访问这个程序。   Windows 10 中，你可以使用资源管理器 -&gt; 文件来在你存放 nc 的目录中打开命令提示符或 PowerShell。             在 Windows 资源管理器中打开命令提示符或 PowerShell        或者，你也可以在开始菜单 -&gt; Windows 系统中打开命令提示符，或者在开始菜单 -&gt; Windows PowerShell 中打开 PowerShell，然后使用 cd 命令转移到对应的目录：输入 cd 文件夹名 可以让你转移到对应的文件夹，输入 cd .. 可以让你转移到上面一层目录。使用 dir 命令，可以显示当前目录下所有文件。同时，使用 Tab 键可以帮助你补全名称。   当跳转到你存放 nc 的文件夹后：      如果你使用的是 PowerShell（蓝色背景），输入 ./ncat（根据 nc 对应的名称不同而不同）。   如果你使用的是命令提示符（黑色背景），输入 ncat（根据 nc 对应的名称不同而不同）。   当显示以下内容时，说明你成功运行了它。             成功运行 ncat        Linux &amp; macOS   打开「终端」，输入 nc。   $ nc usage: nc [-46AacCDdEFhklMnOortUuvz] [-K tc] [-b boundif] [-i interval] [-p source_port] [--apple-delegate-pid pid] [--apple-delegate-uuid uuid] \t  [-s source_ip_address] [-w timeout] [-X proxy_version] \t  [-x proxy_address[:port]] [hostname] [port[s]]   出现了类似上面的输出，说明运行成功了。   示例   在我们使用浏览器上网的时候，我们和服务器使用了 HTTP 协议进行连接。关于 HTTP 协议的更多细节，你需要自己上网搜索。一般来说，默认是 80 端口。   我们可以使用 nc，尝试一次与网页服务器的连接，以百度为例。   输入 nc www.baidu.com 80（或者 ncat www.baidu.com 80，或者 ./ncat www.baidu.com 80，请根据以上的介绍自行修改），程序会等待你的输入。   输入 GET / HTTP/1.0。这表示，我们使用 HTTP/1.0 这个协议版本，用 GET 的方式请求根 /。输入两下回车，代表我们的 HTTP 请求完成。如果你的网络畅通，百度的网页服务器会立刻返回大量信息，可以自行搜索，了解它们的含义。现在，你成功（在不使用浏览器的情况下）完成了一次与百度网站的连接！             Success!        如果你成功了，那么你可以开始愉快地完成我们的题目了！   除了使用 nc 直接与服务器交互之外，也可以编程与服务器交互。例如：      在信息安全类的竞赛中一个常用的工具是 Python 的 pwntools，具体使用方法可以自行搜索了解。   nc 也可以使用 -e 参数设定交互脚本，可参考科大信息安全大赛 2018 年「猫咪克星」题目的题解（部分 nc 版本不支持）。   注意事项      以下内容目前对于比赛中需要 token 的题目不适用，需使用编程方法与题目交互。    由于 tty 默认每行的长度最长为 4096，在粘贴过长的输入时内容可能会被截断。遇到这种情况时，可以使用文件重定向解决：将需要输入的内容放置在文件中，然后 cat 你的文件 - | nc 服务器 端口（Windows cmd.exe 中 type 你的文件 CON | ncat 服务器 端口）即可。  ","categories": ["Tech Tutorial"],
"tags": ["hackergame","netcat"],
"url": "/planet/2019/09/how-to-use-nc/",
"teaser": null
},{
"title": "【译稿】树莓派 4 评测与基准测试：与树莓派 3B+ 相比的改进",
"excerpt":"原文地址：https://ibugone.com/blog/2019/09/raspberry-pi-4-review-benchmark/，作者为 @iBug 同学。以下为翻译部分。     前段时间，我终于拿到了自己心念的树莓派 4（4 GB 的型号），之后我就忍不住试了试，看看它在报道中提到的改进与提升究竟是什么样子的。   我自己的树莓派 3B+ 有个外壳，所以这次购买树莓派 4 的同时，我也订了个铝制的外壳，以减轻发热给树莓派带来的压力。与之前的外壳不同的是，它还配备了两个小风扇，能够大幅度提高散热效率。   就让我们来看一看吧。   概览                                                                                                                              新的树莓派 4 装在了类似 3B+ 的包装中，包装正面是树莓派 4 的红底白线的结构图，与本体大小相同。与树莓派 3B 不同的是，3B+ 和 4 都没有用防静电袋包好。当然，这不是什么问题。   它的结构与前几代类似，不过有一些明显的变化。比如说，你肯定会最先注意到那几个 USB 3.0 接口——因为它们是蓝色的。在你观察那几个接口的同时，你很可能也注意到了，有可能是因为千兆网口的升级的缘故，以太网接口换了位置。                                                                                                                              有一些小接口，即供电口和视频输出，也有一些变化。树莓派 4 现在需要一根 Type-C 线供电，并且需求提升到了 5V / 3A。目前尚且不知树莓派 4 是否支持类似于高通快充或者 USB PD 这样的快充技术，但是从用户反馈来看，是没有的。旧款上标准大小的 HDMI 也被 micro-HDMI 口替换——而且变成了两个：它们都支持 4K 60fps 输出，而且可以同时输出！尽管我打算把树莓派当无头（无显示的）服务器来用，用树莓派配桌面环境的人可能会喜欢这个特性。   内存条也从树莓派的背面移到了正面，现在在 SoC 旁边。SoC 长得和 3B+ 的一样，但是内部却完全不同。Wi-Fi 屏蔽罩和天线没有变化，另外在千兆网口的前面又多出了一个额外的芯片。   参数   新的树莓派 4 带来了大量激动人心的更新，包括了：      博通 BCM2711 SoC, 四核 1.5 GHz Cortex-A72 CPU   有 1 GB, 2GB 和 4 GB RAM 四种版本（4 GB 就是我手中的这款）   博通 VideoCore VI GPU   真正的千兆以太网口   蓝牙 5.0   原生 USB 3.0 支持，包含了 2 个 Type-A 的接口   双 HDMI 口，支持同时 4K 60fps 输出   更快的 microSD 卡插槽   在之后的基准测试中，你可以看到这些更新参数意味着什么。以下是一张对比表：                          树莓派 3B       树莓派 3B+       树莓派 4                       CPU       四核 1.20 GHz Cortex-A53       四核 1.40 GHz Cortex-A53       四核 1.50 GHz Cortex-A72                 内存       1 GB DDR2       1 GB DDR2       1 / 2 / 4 GB DDR4                 GPU       VideoCore IV       VideoCore IV       VideoCore VI                 以太网       100 Mbps       300 Mbps 有效       1 Gbps                 Wi-Fi       2.4 GHz       2.4 GHz / 5 GHz       2.4 GHz / 5 GHz                 蓝牙       4.0       4.2       5.0                 USB       4 个 USB 2.0       4 个 USB 2.0       2 个 USB 2.0 和 2 个 USB 3.0                 官方价格       35 美元       35 美元       35 / 45 / 55 美元 （根据内存选择不同而不同）           在我买到 3B+ 之后，我就把 3B 卖（给了译者），所以那个树莓派 3B 就没法参与接下来的评测了。（译者注：那个 3B 现在被我放在家里吃灰……对不起……）   我的设置                                                  正如你看到的那样，两个树莓派都是无头的服务器，只连接了电源和以太网。你可能在疑惑，为什么它们看起来这么诡异，这是因为我所在的实验室有很多标称 5V / 6A 的电源供应线，所以我就拿了一个来通过 GPIO 给这两个树莓派供电。这两个树莓派峰值标称 5V / 2.5A 和 5V / 3A，所以一根供电线就够了。       警告     除非你有稳定的供电，请不要使用 GPIO 给树莓派供电。手机充电器不能作为电源供应，你永远都不应该用手机充电器通过 GPIO 供电给树莓派。     基准测试   两个树莓派被分配了静态 IP，所有的操作都通过 SSH 完成。操作系统是最新版的 Raspbian Buster Lite。   SysBench CPU 测试   SysBench 是一个可以快速获取系统性能的测试套件。这里我使用 SysBench 来测试 CPU 与内存。   sysbench --test=cpu run sysbench --test=cpu --num-threads=4 run sysbench --test=cpu --num-threads=8 run             SysBench CPU 性能，单位为秒，越低越好        如表中显示的那样，在 CPU 性能方面，树莓派 4 相比 3B+ 而言有巨大提升，在所有情况中都少花了 19.3% 的时间。   SysBench 内存测试   内存测试有点复杂，并且我发现了一些意料之外的结果。   sysbench --test=memory --memory-block-size=1K --memory-total-size=2G --memory-oper=read run sysbench --test=memory --memory-block-size=1K --memory-total-size=2G --memory-oper=write run sysbench --test=memory --memory-block-size=1K --memory-total-size=2G --memory-oper=read --num-threads=4 run sysbench --test=memory --memory-block-size=1K --memory-total-size=2G --memory-oper=write --num-threads=4 run sysbench --test=memory --memory-block-size=1M --memory-total-size=2G --memory-oper=write --num-threads=4 run             SysBench 内存性能，单位为每秒指令数，越高越好        新的 DDR4 内存竟然比老古董 DDR2 内存慢，而且在多线程情况下差距进一步拉大了！唯一一点合理的是，当单个块大小到 1 MiB 的时候，树莓派 4 要小幅好于 3B+。   一件有意思的事情是，我没有包含“1 MiB Read MT”（1 MiB 单块，读取，多线程）这一列。SysBench 在两块树莓派上都给我返回了超过 200 GB/s 的结果，有时候结果还高达 500 GB/s。这显然太滑稽了，所以我直接忽略了那个结果。   FIO microSD 卡速度测试   此测试结果依赖于 microSD 卡本身，所以我拿出了我拥有的最快的 SD 卡：Lexar 667x 128 GB microSD 卡，外观类似下面这张图：        我使用 fio 作为磁盘（microSD 卡）I/O 性能测试工具。因为我更熟悉 Crystal DiskMark，我调整了 fio 的参数，以与其一致。   fio --loops=5 --size=500m --filename=fiotest.tmp --stonewall --ioengine=libaio --direct=1 \\   --name=SeqRead --bs=1m --rw=read \\   --name=SeqWrite --bs=1m --rw=write \\   --name=512Kread --bs=512k --rw=randread \\   --name=512Kwrite --bs=512k --rw=randwrite \\   --name=4KQD32read --bs=4k --iodepth=32 --rw=randread \\   --name=4KQD32write --bs=4k --iodepth=32 --rw=randwrite \\   --name=4Kread --bs=4k --rw=randread \\   --name=4Kwrite --bs=4k --rw=randwrite             MicroSD 性能，单位为 MB/s，越高越好        从结果来看，树莓派 4 的性能有巨大提升，在许多测试中都比 3B+ 快出 50%。这可能是树莓派 4 最有用的更新，因为性能的瓶颈几乎都在缓慢的磁盘 I/O 上。   p7zip 基准测试   7-zip 有个自带的基准测试工具，当然 p7zip（7-zip 的 POSIX 移植）也有。我使用这个工具来测试树莓派的压缩与解压性能。   7zr b -mmt1 7zr b             p7zip 基准测试，越高越好        如此帮助文档所言，压缩更依赖于内存的吞吐量与延迟，这可能是两块树莓派间在压缩测试中差距增大的原因。总之，树莓派 4 在 p7zip 测试中有 1/3 的性能提升。   OpenSSL 速度测试   OpenSSL 是目前最流行的密码学软件库，它也包含了一个内置的速度测试。结果是在所有块大小中最快的那个——在 4 个测试中大小都是 16,384 字节。   openssl speed -evp aes-256-cbc openssl speed -evp aes-256-gcm openssl speed -evp sha1 openssl speed -evp sha256             OpenSSL 基准测试，单位为 MB/s，越高越好        网络速度测试   树莓派 4 将 300 Mbps 以太网升级到了真正的千兆网口，如果你打算用它来当离线下载器或者 NAS 的话，这是极好的。这里我跑了两个测试，看看网络究竟如何。   CURL 文件下载测试   这项测试非常简单：使用 cURL 从局域网机器下载文件，查看速度。             cURL 下载速度，单位为 MB/s，越高越好        结果不如预想那么好：树莓派 4 没能跑出千兆的速度，而我旁边的 x86 Linux 盒子就做到了。   NGINX 性能测试   另一个常见的场景是：使用 NGINX 提供网页服务（对不起，这里没有 Apache 的位置）。我在两块树莓派上都安装了 NGINX，设置了 access_log off，并在我的 x86 盒子上使用 Siege 4.0.4 对树莓派服务器进行基准测试。   siege -c 10 -r 1000 [host] siege -c 25 -r 400 [host]             NGINX 性能，单位为请求数每秒，越高越好        在 CPU 性能与网络速度的双重提升下，新的树莓派 4 速度接近 3B+ 的两倍。如果你想用树莓派搭个网站的话，这是个好消息。   应用程序性能   我选择了两个我最熟悉的编程语言环境：Python 和 Ruby（我对 Node 不熟）来进行测试。   Python 测试使用了此 Stack Overflow 回答中的那个蠢极了的脚本，运行时间作为结果。   def test():     \"\"\"Stupid test function\"\"\"     lst = []     for i in range(100):         lst.append(i)  if __name__ == '__main__':     import timeit     print(timeit.timeit(\"test()\", setup=\"from __main__ import test\"))   Ruby 测试就简单很多：使用 Jekyll 构建我的站点，查看消耗的时间。             应用程序性能，单位为秒，越低越好        Ruby 测试比 Python 测试更加均衡，因为它主要测试的是纯计算性能，结果 Ruby 测试中性能差距就要小一些。   不过等等，这不代表树莓派 4 对大型的 Python 或者 Ruby 项目来说是个好的选择。相同的测试在我的 x86 盒子（i7-8850H, 32 GB DDR4, NVMe SSD）上快了 10 倍，其仅使用 5 秒运行 Python 脚本，4 秒构建我的 Jekyll 站点。毕竟，你不能期望一个只卖 55 美元的板子能够有毁天灭地的性能，不是吗？   USB I/O 性能   我拿出了我的 USB 3.1 SSD（由 LiteOn L9M 512 GB 和一个包含了 VL716 SATA 转 USB 芯片的硬盘盒组装而成）。但是，我一把 SSD 插上树莓派，它就没电了。之后我发现这是因为供电不足（GPIO 针脚无法提供足够的电力），所以一天之后，我从 MicroUSB / Type-C 接口重新供电。这一次，3B+ 很顺利，但是树莓派 4 在测试时再一次因为电力问题出错。最后，我只能同时从 Type-C 和 GPIO 给树莓派供电，以便在不断电的情况下完成 SSD 测试。   这次的供电问题真的很严重，但先不去管它。让我们看看结果。   fio --loops=5 --size=1g --filename=fiotest.tmp --stonewall --ioengine=libaio \\   --direct=1 --name=SeqRead --bs=1m --rw=read --name=SeqWrite --bs=1m --rw=write             USB 速度，单位为 MB/s，越高越好        结果很棒！升级后的 USB 3.0 接口，即使没有跑到最高速，也比前代树莓派高出很多。但在享受高速 USB 之前，再让我强调一次：请特别关注你的 USB 外设，特别是那些有点儿耗电的设备，像机械硬盘和 SSD。如果电力得以保证，利用那两个高速 USB 接口对于 NAS 或者其他存储扩展来说好处多多。   总结   在体验过 3B 到 3B+ 的小小提升后，新的树莓派 4 对于大多数树莓派爱好者来说，都是一场盛宴。价格不变，即使你已经有个 3B+，树莓派 4 也可以说是必买的。尽管在供电和散热上有缺点，如果你不插太多外设，不在树莓派上放太多重型任务的话，也没什么关系。  ","categories": ["Technology","Translation"],
"tags": ["树莓派"],
"url": "/planet/2019/09/raspberry-4/",
"teaser": null
},{
"title": "使用 Beancount 进行记账并自动记录一卡通消费",
"excerpt":"本文首发于 https://charlesliu7.github.io/blackboard/2019/07/24/beancount/   偶尔看到了复式记账这个概念，对精细记账的我而言很受用，选择 Beancount 这样的开源工具的原因莫过于账本数据完全由自己掌握，而不是被各大 APP 所保管。本文从一次个人实践的角度来说明一下复式记账的使用。   本篇文章是一个从零开始的个人实践记录，涵盖 文件组织 -&gt; 基本账本书写 -&gt; 爬取一卡通数据并自动记录，供同样使用 Beancount 的同学做参考，但此实践并不一定完全合乎其他人的使用习惯，如果有其它记录策略也是可以的。本文内容基于读者对复式记账和 Beancount 语法有一定了解的情况下撰写的，关于复式记账的概念和一些诸多基本功能介绍，可以参考阅读以下文章：      文本记账综述、复式记账开源工具比较   Beancount 复式记账（一）：为什么   开始！   安装使用   Beancount 是一个 Python 实现的开源工具，在本地即可运行，首先从 PyPI 获取：   pip install beancount fava   其中 beancount 是核心包，包含核心的命令行工具；fava 是网页可视化工具。 这里有一个fava 示例账本 ，对应的 Beancount 源代码可以在 Bitbucket 上下载。 本文的示例账本以及可视化可以在该仓库查看。   克隆该仓库，在命令行中使用 fava main.beancount。   $ fava main.beancount Running Fava on http://localhost:5000   打开浏览器即可看到可视化账本。   文件结构   Beancount 支持 include 语法来拓展账簿，个人采用按时间划分文件，辅之特殊事件（比如旅游）单独记录的方法，目录结构如下：   . ├── 2018 │   └── ... ├── 2019 │   └── 01.beancount │   └── 02.beancount │   └── 03.beancount │   └── 04.beancount ; 注释用分号 │   └── xx.event.beancount ; 单独针对某一特别事件的账本，比如旅游 │   └── 05.beancount │   └── 06.beancount │   └── 07.beancount ├── accounts.beancount ; 记录初始账户信息 ├── main.beancount ; 主文件   账本书写   账户信息设置   首先要定义账户，即文件 accounts.beancount，Beancount 系统中预定义了五个分类：           Assets 资产：本人按照账户类型:国家:金融机构名字:具体账户的策略划分，时间是开户时间，比如：       2017-01-01 open Assets:CN:Bank:BoC:C1234 CNY ; 学校银行卡 2017-01-01 open Assets:CN:Card:USTC CNY ; 一卡通 2017-01-01 open Assets:CN:Web:AliPay CNY ; 支付宝 2017-01-01 open Assets:CN:Web:WeChatPay CNY ; 微信支付           有一类针对 AA 付款或者个人向自己借款的账户，需要专门记录。       2017-01-01 open Assets:Receivables:X ; 对 X 的应收款项                Liabilities 负债：本人主要是信用卡和向他人借款的账户，比如：       2017-01-01 open Liabilities:Payable:X ; 对 X 的债务 2017-01-01 open Liabilities:CreditCard:CN:BoC:C1111 CNY ; 信用卡 2017-01-01 open Liabilities:CreditCard:CN:Huabei CNY ; 花呗                Equity 权益（净资产）：目前只有一个用于平衡开户的时候账户资金的权益。       1990-01-01 open Equity:Opening-Balances                Expenses 支出：支出就非常的多样化，可以根据自己需求分门别类，比如：       2017-01-01 open Expenses:Clothing ; 包括上衣，裤子和装饰，袜子，围巾，帽子 2017-01-01 open Expenses:Shoes ; 鞋 2017-01-01 open Expenses:Food:Dinner 2017-01-01 open Expenses:Food:Lunch 2017-01-01 open Expenses:Food:Breakfast 2017-01-01 open Expenses:Food:Fruits 2017-01-01 open Expenses:Food:Nightingale ; 校门口夜宵 2017-01-01 open Expenses:Food:Drinks 2017-01-01 open Expenses:Food:Snack ; 杂食、零食           等等……            Income 收入：收入也可以根据自己的实际收入来源来建立账户，比如：       2017-01-01 open Income:Salary:XXX 2017-01-01 open Income:Salary:Others 2017-01-01 open Income:Others           主文件设置   然后设置主文件 main.beancount 内容，主文件任务是设置全局变量，然后去涵盖各个子账本：   option \"title\" \"取个霸气的名字吧\" ; 账簿名称 option \"operating_currency\" \"CNY\" ; 账簿主货币 option \"operating_currency\" \"USD\" ; 可以添加多个主货币  include \"accounts.beancount\" ; 包含账户信息  ; 每个月的账本 include \"2020/06.beancount\" include \"2020/07.beancount\"   账户初始余额设置   在开始记账前，要设置每个账户的余额信息，采用以下方法来给每个账户设置余额/借记账单:   2019-01-01 pad Assets:Bank:CN:BoC:C1111 Equity:Opening-Balances ; 从 Opening-Balances 中划取 XX 帐到银行卡中 2019-01-02 balance Assets:Bank:CN:BoC:C1111    +xxx.xx CNY ; 银行卡余额为 xxx.xx   该语句的含义是无论 Assets:Bank:CN:BoC:C1111 之前余额多少，在 2019 年 1 月 2 日开始之前都调整到 xxx.xx CNY，差额从 Equity:Opening-Balances 来。注意两行之间差一天的时间，balance 断言界定为当天开始；一般储蓄卡余额为正，信用卡余额为负。   记账           基本记账，记账语法为：       YYYY-mm-dd * [\"Payee\"] \"Narration\"   posting 1   posting 2   posting 3   ...           比如：       2019-01-01 * \"Walmart\" \"在超市买两件衣服和晚餐\"   Expenses:Clothing 20 USD   Expenses:Clothing 10 USD   Expenses:Food:Dinner 10 USD   Liabilities:CreditCard:US:Discover -40 USD                多货币转换使用 @@ 作为货币转换即可，货币 Beancount 会进行汇率计算，比如：       2019-01-01 * \"日本航空\" \"纽约-东京\"   Expenses:Transport:Airline 1000 USD @@ 110000 JPY   Liabilities:CreditCard:JP:Rakuten -110000 JPY                账户结息：账户的利息肯定难以每日都记录，本人采用 pad+balance 断言，每隔一段时间结算一下。            分期付款：这是个常见的购买方式，需要单独设置开一个 Liabilities Account，手续费记利息支出，每个月账单出现的时候转移一下。 Beancount 提供了一个插件 plugin \"beancount.plugins.forecast 专门用来处理分期、订阅情况，可以用于每月费用的自动生成。       核账   本人选择每个月还款日核实一下账本，在 Fava 左侧 Balance Sheet 或者 Holdings 里可以看到各个账户当前的状况，如果和实际的账户金额有出入的话就需要点进对应账户查看每笔交易的情况，看看是否漏记或者错记。   用 Importer 自动记录一卡通消费   综述   Importer 个人理解的作用是将整理好的账单文本转化为 Beancount 记录的形式，即格式化 (表格, JSON 等) 账单 -&gt; Importer -&gt; Beancount 记录，Importer 在其中起到一个消费记录格式转化作用。   Beancount 作者对 Importer 有详细的文档叙述，即 Importing External Data in Beancount。Beancount 官方也有基于机器学习的智能 importer beancount/smart_importer。   而本人的需求是：      利用校园一卡通门户系统获取每日的一卡通使用记录，并生成 CSV 记录。   基于 CSV 的账单生成 beancount 文件。   能够自行定制规则来实现对不同消费的分类。   将当日的一卡通消费生成为 CSV   爬取一卡通数据的代码为 crawler.py ，其作用为爬取当日的一卡通消费记录，并自定义规则区分早、午、晚餐，生成符合 Beancount 格式的 CSV。（代码可以直接运行）   import requests from datetime import datetime from bs4 import BeautifulSoup import json import codecs import csv  name = 'XXX'  # 姓名 stu_no = 'PBXXXXXXXX'  # 学号 pwd = 'user_pwd'  # 统一身份认证密码  if __name__ == '__main__':     # 利用统一身份认证登陆校园一卡通门户系统     casurl = 'https://passport.ustc.edu.cn/login?service=http%3A%2F%2Fecard.ustc.edu.cn%2Fcaslogin'     caspost = {'username': stu_no, 'password': pwd}  # 统一身份认证     msg = ''     s = requests.session()     try:         r = s.post(casurl, caspost)     except Exception as e:         msg = '{0} - INFO: USTC ecard CAS登陆失败 {1}'.format(datetime.now().strftime('%Y-%m-%d %H:%M:%S'), e)     remaining = 0     if not name in r.text:         msg = '{0} - INFO: USTC ecard CAS登陆失败 NOOOOOOOO!!!!!!!!'.format(datetime.now().strftime('%Y-%m-%d %H:%M:%S'))         print(msg)     else:         msg = '{0} - INFO: USTC ecard CAS登陆成功'.format(datetime.now().strftime('%Y-%m-%d %H:%M:%S'))         print(msg)         paylist = s.get('https://ecard.ustc.edu.cn/paylist')         b = BeautifulSoup(paylist.text, features=\"lxml\")         token = b.findAll('input')[-1].get_attribute_list('value')[0]         data = s.post(url='https://ecard.ustc.edu.cn/paylist/ajax_get_paylist', data={'date': '', 'page': ''}, headers={'origin': 'https://ecard.ustc.edu.cn', 'referer': 'https://ecard.ustc.edu.cn/paylist', 'sec-fetch-mode': 'cors', 'sec-fetch-site': 'same-origin', 'x-csrf-token': token, 'x-requested-with': 'XMLHttpRequest'})         b = BeautifulSoup(data.text, features=\"lxml\")         table = b.find('table')         th_index = []         for th in table.findAll('th'):             th_index.append(th.getText())         year, month, day = datetime.now().year, datetime.now().month, datetime.now().day         # 根据自己定义的规则判定早餐、午餐、晚餐         payinfo = {'breakfast': {'loc': '', 'type': '科大餐饮', 'value': 0.0, }, 'lunch': {'loc': '', 'type': '科大餐饮', 'value': 0.0, }, 'dinner': {'loc': '', 'type': '科大餐饮', 'value': 0.0, }, 'transferin': {'loc': '一卡通充值', 'type': '', 'value': 0.0, } }         flag = True         for tr in table.findAll('tr'):             line = []             for td in tr.findAll('td'):                 line.append(td.getText())             if line and flag:                 remaining = float(line[3])                 flag = False             if not line:                 pass             elif line[0] == '圈存机充值' and int(line[1]) == 0:                 payinfo['transferin']['value'] = float(line[4])             elif line[0] == '消费':                 linetime = datetime.strptime(line[5], '%Y-%m-%d %H:%M:%S')                 if linetime &gt; datetime(year, month, day, 6) and linetime &lt; datetime(year, month, day, 10): # 判定为早餐                     if line[6] in payinfo['breakfast']['loc']:                         pass                     else:                         payinfo['breakfast']['loc'] += (line[6] + ' ')                     payinfo['breakfast']['value'] += float(line[4])                 elif linetime &gt; datetime(year, month, day, 10) and linetime &lt; datetime(year, month, day, 14): # 判定为午餐                     if line[6] in payinfo['lunch']['loc']:                         pass                     else:                         payinfo['lunch']['loc'] += (line[6] + ' ')                     payinfo['lunch']['value'] += float(line[4])                 elif linetime &gt; datetime(year, month, day, 16) and linetime &lt; datetime(year, month, day, 20): # 判定为晚餐                     if line[6] in payinfo['dinner']['loc']:                         pass                     else:                         payinfo['dinner']['loc'] += (line[6] + ' ')                     payinfo['dinner']['value'] += float(line[4])                 elif linetime &lt; datetime(year, month, day, 0):                     break                 else:                     mtmp = '{0} - INFO: 未知消费 {1}'.format(datetime.now().strftime('%Y-%m-%d %H:%M:%S'), line)                     print(mtmp)             else:                 mtmp = '{0} - INFO: 异常消费 {1}'.format(datetime.now().strftime('%Y-%m-%d %H:%M:%S'), line)                 print(mtmp)         mtmp = '{0} - INFO: 卡内余额 {1}'.format(             datetime.now().strftime('%Y-%m-%d %H:%M:%S'), remaining)         print(mtmp)          # CSV Part         today = datetime.now().strftime('%Y-%m-%d')         headers = ['记账日期', '收款人', '交易摘要', '人民币金额', '类别']         csvinfo = []         if payinfo['transferin']['value'] &gt; 0:             csvinfo.append({headers[0]: today, headers[1]: payinfo['transferin']['type'], headers[2]: payinfo['transferin']                             ['loc'], headers[3]: \"%.2f\" % -payinfo['transferin']['value'], headers[4]: 'Transferin'})         if payinfo['breakfast']['value'] &gt; 0:             csvinfo.append({headers[0]: today, headers[1]: payinfo['breakfast']['type'], headers[2]: payinfo['breakfast']                             ['loc'], headers[3]: \"%.2f\" % payinfo['breakfast']['value'], headers[4]: 'Breakfast'})         if payinfo['lunch']['value'] &gt; 0:             csvinfo.append({headers[0]: today, headers[1]: payinfo['lunch']['type'], headers[2]: payinfo['lunch']['loc'], headers[3]: \"%.2f\" % payinfo['lunch']['value'], headers[4]: 'Lunch'})         if payinfo['dinner']['value'] &gt; 0:             csvinfo.append({headers[0]: today, headers[1]: payinfo['dinner']['type'], headers[2]: payinfo['dinner']                             ['loc'], headers[3]: \"%.2f\" % payinfo['dinner']['value'], headers[4]: 'Dinner'})         with open(today+'.csv', 'w') as f:             f_csv = csv.DictWriter(f, headers)             f_csv.writeheader()             f_csv.writerows(csvinfo)   代码执行完毕后会生成 20XX-XX-XX.csv，例如 2020-07-02.csv：                  记账日期       收款人       交易摘要       人民币金额       类别                       2020-07-02       科大餐饮       一卡通充值       -200.00       Transferin                 2020-07-02       科大餐饮       西区芳华园餐厅       5.00       Breakfast                 2020-07-02       科大餐饮       西区芳华园餐厅       10.00       Lunch                 2020-07-02       科大餐饮       西区芳华园餐厅       10.00       Dinner           准备 Importer Config   Beancount Importer Config 文件为 importers/ustc_card_importer.py。   #!/usr/bin/env python import os import sys import beancount.ingest.extract from beancount.ingest.importers import csv  beancount.ingest.extract.HEADER = ''  def dumb_USTCecard_categorizer(txn):     # At this time the txn has only one posting     try:         posting1 = txn.postings[0]     except IndexError:         return txn      # Guess the account(s) of the other posting(s)     if 'breakfast' in txn.narration.lower():         account = 'Expenses:Food:Breakfast'     elif 'lunch' in txn.narration.lower():         account = 'Expenses:Food:Lunch'     elif 'dinner' in txn.narration.lower():         account = 'Expenses:Food:Dinner'     elif 'transferin' in txn.narration.lower():         account = 'Assets:CN:Bank:BoC:C1234'     else:         return txn     # Make the other posting(s)     posting2 = posting1._replace(         account=account,         units=-posting1.units     )     # Insert / Append the posting into the transaction     if posting1.units &lt; posting2.units:         txn.postings.append(posting2)     else:         txn.postings.insert(0, posting2)     return txn  CONFIG = [     # USTC canteen     csv.Importer(         {             csv.Col.DATE: '记账日期',             csv.Col.PAYEE: '收款人',             csv.Col.NARRATION1: '交易摘要',             csv.Col.AMOUNT_DEBIT: '人民币金额',             csv.Col.NARRATION2: '类别'         },         account='Assets:CN:Card:USTC',         currency='CNY',         categorizer=dumb_USTCecard_categorizer,     ), ]   语法说明参见 Beancount 系列二： Importer 设置。   执行命令生成 beancount 账单。   bean-extract ustc_card_importer.py 2020-07-02.csv   得到账单：   **** /path/to/2020-07-02.csv  2020-07-02 * \"科大餐饮\" \"一卡通充值; Transferin\"     Assets:CN:Card:USTC        200.00 CNY     Assets:CN:Bank:BoC:C1234  -200.00 CNY  2020-07-02 * \"科大餐饮\" \"西区芳华园餐厅; Breakfast\"     Assets:CN:Card:USTC      -5.00 CNY     Expenses:Food:Breakfast   5.00 CNY  2020-07-02 * \"科大餐饮\" \"西区芳华园餐厅; Lunch\"     Assets:CN:Card:USTC  -10.00 CNY     Expenses:Food:Lunch   10.00 CNY  2020-07-02 * \"科大餐饮\" \"西区芳华园餐厅; Dinner\"     Assets:CN:Card:USTC   -10.00 CNY     Expenses:Food:Dinner   10.00 CNY   校园卡消费可以直接使用该 importer。支付宝账单、信用卡账单等也可以通过导出 CSV 账单的方式利用自己编写的 importer 导入。   自动化   上述过程需要执行多个命令和脚本，利用 crontab 在每日睡前 (23:30) 执行一遍代码即可自动化记录消费。   $ python crawler.py&gt;&gt;log.log $ cd importers $ python ustc_card_importer_pipeline.py # 注意这里需要修改要记录的账本文件   Done!   Fava      Fava 可视化网页中提供了编辑功能，对于多文件的编辑，默认打开的是主文件，要想修改编辑器默认打开的文件，需将 2019-07-11 custom \"fava-option\" \"default-file\" 这个设置放在想要设定的文件里。   Fava 系统中也提供了添加记录的功能，但添加的记录默认写入了主文件里，根据Fava insert-entry options, default-file could also set the insertion file 作者似乎不 care 添加在哪个文件里这个问题，但依然可以利用 insert-entry 关键字变相设置一下，比如将 2019-01-01 custom \"fava-option\" \"insert-entry\" \".*\" 断言写在 2019/01.bean 文件的末尾，所有在 2019-01-01 之后的记录，通过 Fava 添加记录的话，该记录会 write 在这个断言之前。   Fava 是不带有密码功能的，根据 Make fava password-protected 作者认为这不应该是 Fava 应该做的工作；利用 Apache 或者 Nginx 的认证功能可以满足这个需求。        可视化工具 Fava 也支持 Importer，可以通过设置：       2017-01-01 custom \"fava-option\" \"import-config\" \"./importers/path/to/importer.py\" 2017-01-01 custom \"fava-option\" \"import-dirs\" \"./importers/path/to/csv_tmp/\"           在 Fava 界面侧栏看到 Importer，并手动导入数据。注 ：Importer 在 Fava 中使用的时候 metadata 会被去除。            Fava 还支持自定义 side bar link，即：       2099-01-01 custom \"fava-sidebar-link\" \"This Week\" \"/jump?time=day-6+-+day\" 2099-01-01 custom \"fava-sidebar-link\" \"This Month\" \"/jump?time=month\" 2099-01-01 custom \"fava-sidebar-link\" \"3 Month\" \"/jump?time=month-1+-+month%2B1\" 2099-01-01 custom \"fava-sidebar-link\" \"Year-To-Date\" \"/jump?time=year+-+month\" 2099-01-01 custom \"fava-sidebar-link\" \"All dates\" \"/jump?time=\"          ","categories": ["USTC"],
"tags": ["Beancount","eCard"],
"url": "/planet/2020/08/keeping-account-with-beancount/",
"teaser": null
},{
"title": "在 Linux 内核中测试程序性能",
"excerpt":"本学期，我担任了李诚老师编译原理课程的助教。在课程实验中，我们基于 LLVM 构建了一套编译系统，其中一个实验需要编写后端优化算法。为了评估学生们的优化代码，我们需要比较优化前后的代码（在这里是 LLVM IR）的性能。我们通过统计程序运行的时间来比较代码的性能，但是用户程序会受到内核调度。因为不是连续执行程序，所以受到调度造成的延迟会导致统计到的时间出现噪音，这些噪音可能会让测试结果不准确甚至影响到了同学们的分数。最开始，我想到是不是可以统计指令数来评估性能，打算用 perf stat 进行测试。然而，我们提供的实验环境基于虚拟机，VirtualBox 和 WSL 都没有实现相关的虚拟寄存器，要让同学们方便地使用该指令会比较困难，只得作罢。这时，我突然想到，内核线程可以不受到调度，那么使用内核线程是不是可以更精确的测量时间呢？于是我便开始了尝试。   注：由于原本目的是用于 LLVM IR，所以使用了 clang 来编译内核，没有这种需求可以完全无视 clang。   编写内核模块   超简单的内核模块编写方法   为了创建内核线程，我们可以构建一个内核模块，由它来执行相关的函数。构建一个基础的内核模块非常简单，这里我们 参考 The Linux Kernel Module Programming Guide：   /*  *  hello_mod.c - The simplest kernel module.  */ #include &lt;linux/module.h&gt;\t/* Needed by all modules */ #include &lt;linux/kernel.h&gt;\t/* Needed for KERN_INFO */  int init_module(void) { \tprintk(KERN_INFO \"Hello world.\\n\");  \t/* \t * A non 0 return means init_module failed; module can't be loaded. \t */ \treturn 0; }  void cleanup_module(void) { \tprintk(KERN_INFO \"Goodbye world.\\n\"); }   然后再加上一个简单的 Makefile：   # obj-m 告诉构建系统以模块编译，编译目标是 hello.ko obj-m += hello.o hello-objs := hello_mod.o  all: \tmake -C /lib/modules/$(shell uname -r)/build M=$(PWD) modules  clean: \tmake -C /lib/modules/$(shell uname -r)/build M=$(PWD) clean   这样，一个超简单的内核模块就完成啦！   为了编译内核模块，我们需要有头文件，在 Ubuntu 上可以安装 linux-headers-&lt;version&gt; 来实现。又或者你像我一样需要用到 clang ，那就下载 Linux 源码重新编译安装（PS：如果全量编译搭配 VSCode 补全体验很好）。在这之后，运行 sudo make CC=/path/to/clang 就可以编译这个模块了。编译完成后，会发现目录下多出来一个叫 hello.ko 的文件，它就是我们编译得到的内核模块。   在这个模块中，init_module 会在模块被载入时调用，而 cleanup_module 会被模块被卸载时被调用。通过 insmod hello.ko，可以载入它，而 rmmod hello 可以卸载这个模块。printk会将日志打印到内核的日志中，调用 dmesg 可以看到模块打印的欢迎和告别信息。   Tic-Toc …   虽然已经编写了一个模块，但是它啥都干不来，我们还得实现计时功能。在编写用户态程序时，语言库里通常有获取当前时间的函数，内核也一样。我们可以通过ktime.h 中的 ktime_get 来获取时间，大概的逻辑如下：   ktime_t start, end; u64 dur_ns; start = ktime_get(); foo(); // 被测试的函数 end = ktime_get(); dur_ns = ktime_to_ns(ktime_sub(end, start)); printk(KERN_INFO \"foo runtime: %lluns\", dur_ns);   看得出来，内核里的函数接口也很平易近人，简单几行就把我们最核心的算法实现完了。   怎么使用它？   现在，我们已经知道了如何统计时间，还得设计一个接口来让人触发相关的功能。虽然让模块在初始化时运行也不是不行，但是扩展性就变得太糟糕了。我决定用 procfs 来设计一个接口。Procfs 来源于 UNIX 哲学中一切皆文件的思想，它把系统运行时的一些信息用文件目录的形式展示出来，这样可以通过简单的文件操作（比如 cat、管道等）来访问和控制系统相关的参数，你可以通过 /proc/ 目录访问里面的内容。   在初始化的时候，我们通过 proc_mkdir 和 proc_create 可以像普通的文件系统一样在 /proc/ 目录下创建目录和文件：   // 在 /proc/ 下创建一个目录 if ((root = proc_mkdir(proc_dirname, NULL)) == NULL)     return -EEXIST; // 在 /proc/&lt;proc_dirname&gt;/ 目录下创建一个文件，并让该文件使用 bench_fops if (proc_create(filename, 0444, root, &amp;bench_fops) == NULL)     return -ENOMEM;   这里的 bench_fops 是一个类型为 struct file_operations 的结构体。它能为这个文件注册功能，比如 open、read、write 等。在内核中设计一个文件系统也需要实现类似的操作，万幸的是， procfs 下不需要实现 POSIX 语义。在这里，我希望只要有 write 被调用时，就会运行我的测试程序，这样我只要在 shell 中用 echo 和管道重定向就能调用它了：   // 所有参数都用不到，我们只希望触发一次测试 ssize_t run_bench(struct file *filp, const char __user *buf,                   size_t len, loff_t *ppos) {     // 测试相关的函数     foo();     // 返回长度和参数一样代表写入成功     return len; }  // 这是 C99 加入的结构体指定初始化，其它成员默认为空。 // 这意味着该文件只支持写 static const struct file_operations bench_fops = { \t.owner\t\t= THIS_MODULE, \t.write\t\t= run_bench }   模块功能已经完成了，最后得给模块取个好听的名字。我把英文中表示时间流逝的 tic-toc （tick-tock） 和表示内核的 kernel 合在一起，就变成了 tiktok。   链接函数   我本以为编写了寥寥数行 tiktok，将 LLVM IR 编译到目标文件再链接到模块上便可以了。然而经过测试，这样做会导致进程一直无法返回。经过反汇编比较了同一段代码在内核模块里编译的结果和外部产生的结果后，我才理解是因为编译选项不同导致了内存布局的差别，这使得默认参数编译的代码无法在内核中使用。由于内核编译选项繁杂，根据不同架构也会产生不同的选项，我们必须把代码放置进内核的构建系统内来让它产生内核想要的汇编（现在的内核中禁用了浮点数，所以浮点计算就无法测试了）。对于普通的 c 文件，只需要在 Makefile 中加上几句，比如：   hello-objs := hello_mod.o another_file.o   但是 LLVM IR 还需要一些技巧来骗过编译系统才行。我把自制编译器产生的 IR 文件改成了 .c 文件，并修改了 Makefile：   hello-objs := hello_mod.o another_file.o CFLAGS_another_file.o := -O0 -x ir   内核编译系统会在产生 another_file.o 时将这里的 -O0 -x ir 传给编译器，这让编译器知道接下来要读的语言是 LLVM IR，并且关掉大部分优化（这样才能体现出自制编译器中的优化效果）。由于 LLVM IR 编译时会忽略一些选项，所以我让编译器在产生中间代码时就加上了属性来确保编译正确。   虽然知道了怎么链接函数，但是内核是无法链接库函数的，而 IO 函数也无法直接在内核中使用。对此，我们可以修改相关的函数，在 tiktok 实现相似的功能。比如， printf 可以转换成 printk，而 exit 可以换成内核中的 do_exit。malloc 和 free 比较复杂，内核中的内存可没有进程那样退出就自动释放这么好的待遇。所以，在内核中必须得手动维护每一次分配和释放，避免出现事故导致 panic 或者内存泄漏（当然我很懒，课程不需要我就都没实现）。   一个小测试   既然实现完了，我们进行一个测试来检验 tiktok 的功能：   #define OUT_LOOP 100 int main(void){     int i;     int a;     int j;      a = 2;     j = 0;     while (j &lt; OUT_LOOP){         i = 0;         while(i &lt; 1000000) {             a = a * i + 1;             i = i + 1;         }         j = j + 1;     }     return a; }   上面是一段进行一些无意义计算的代码，我们修改 OUT_LOOPS 的大小（100、99、98）来比较不同方法的灵敏度。除了普通的 time 测量，我还加入了一组使用 taskset(1) 的对照组。 taskset 控制了程序的亲核性，这使得程序总能被调度到同一个核上，减少了跨核导致的缓存失效开销。为了减少随机误差，每种配置我都运行进行了 100 次函数得到虚列。实验数据可以在这里查看。要反映灵敏度，我们无法直接拿不同方法的结果进行比较，而是要在同一个方法内看看能否显著区分出不同循环次数带来运行时间差距（约为 1%~%2）。短暂尝试了复习概率论和数理统计后，我谷歌到了 K-S 检验 （Kolmogorov-Smirnov test），对于两组输入数据它可以检验它们是否同分布。这里我们假设实际运行时间是固有的，而调度等开销造成的是一个均匀同分布的随机误差。如果测量工具对两种配置得到的两组数据无法拒绝同分布假设，我们可以认为它无法准确得检测出程序性能的差异（统计全忘光了，我不知道我在说啥，如果有误欢迎指正）。我使用了 scipy.stat.kstest 来进行了 K-S 检验，结果如下表 （p 值小于 0.05 拒绝同分布假设）：                  p 值       98-99       99-100       98-100       98-98       99-99       100-100                       normal_time       $2.11*10^{-1}$       $5.83*10^{-1}$       $3.68*10^{-1}$       $3.6*10^{-2}$       $5.83*10^{-1}$       $1.29*10^{-3}$                 taskset_time       $1.56*10^{-2}$       $2.11*10^{-1}$       $3.21*10^{-5}$       $8.15*10^{-1}$       $8.15*10^{-1}$       $2.4*10^{-2}$                 tiktok       $3.73*10^{-36}$       $6.31*10^{-19}$       $2.6*10^{-38}$       $4.11*10^{-43}$       $1.41*10^{-28}$       $2.24*10^{-4}$           gg，完全没有用，连同一个配置都分不清楚。虽然占据了一个核，但是虚拟机本身也在被调度，这个误差并不满足我们的假设。但是，还不能放弃，还可以抢救一下，我把 tiktok 放裸机上测试了一下，得到的结果如下：                  p 值       98-99       99-100       98-100       98-98       99-99       100-100                       normal_time       $4.04*10^{-35}$       $2.82*10^{-1}$       $3.05*10^{-31}$       $8.15*10^{-1}$       $5.83*10^{-1}$       $1.54*10^{-1}$                 taskset_time       $1.42*10^{-51}$       $3.64*10^{-2}$       $4.39*10^{-55}$       $5.39*10^{-1}$       $9.08*10^{-1}$       $2.11*10^{-1}$                 tiktok       $2.20*10^{-59}$       $4.39*10^{-55}$       $2.20*10^{-59}$       $2.11*10^{-1}$       $7.02*10^{-1}$       $2.11*10^{-1}$           在裸机上，tiktok 的优势就体现了出来，它比 taskset 要更加灵敏一点。然而裸机上使用 perf stat就可以看到更加精确的指令数结果…   小结   虽然 tiktok 被证明没有太多实际价值，但是研究的过程中我还是学到了挺多 Linux 内核编译系统的知识。我想分享一下这个过程，是因为我觉得这很有趣。如果你对 tiktok 感兴趣，它在我的 Github 上，它比本文介绍的要稍微复杂一丢丢。如果你想要了解更多关于 Linux 内核的内容，网络上有许多很好的资料。至于编译课程，我估计细小的差距是没法在虚拟机里准确测量了，还是要尽量避开这种测试样例（Windows 上应该也有工具，但是不太方便）。   ","categories": ["Technology"],
"tags": ["Benchmark","Kernel","LLVM"],
"url": "/planet/2020/12/tic-toc-in-kernel/",
"teaser": null
},{
"title": "用 Python 处理大物实验数据",
"excerpt":"身为某世界一流退学的学生，大物实验自然是逃不过。本人有幸选择了大物实验最多的专业方向，从一级做到六级，直到上学期刚刚结束。大物实验里数据处理是占了很多时间的，那么怎么才能「优雅」地完成这一工作呢？   开始   大一的时候讲座推荐的软件是 Origin，画图、拟合等虽然方便，但完全鼠标操作，并且只有 Windows 上能运行，Wine 上有时会遇到个别功能不好用，很影响体验（当时我的电脑配置不好，玩不起虚拟机）。思来想去，还是觉得 Python 比较自然，于是故事就这样开始了。   在一级、二级大物中，需求基本是：散点画图（有时是对数）、线性拟合、组合的画图，以及不确定度计算和一般的数值计算。输入输出方面，要手工输入有时候多达几页的手写数据，画出来的图打印上交、计算出的结果手写进实验报告。   Python 做这些事情其实都不困难。画图用 Matplotlib 非常方便，也可以直接保存图片。数据计算自然是 NumPy。线性拟合的话，最初选择了 SciPy。输入输出还是比较基本，从文件读入。   于是，第一个实验「自由落体」的数据和处理就是这样：   #光电门间距 H cm #数量级 e -2 90.0\t90.0\t90.0\t80.0\t80.0\t80.0\t70.0\t70.0\t70.0\t60.0\t60.0\t60.0\t50.0\t50.0\t50.0\t40.0\t40.0\t40.0\t30.0\t30.0\t30.0\t20.0\t20.0\t20.0 #时间差 t ms e -3 331.6\t331.5\t331.8\t307.9\t307.9\t307.9\t282.9\t282.8\t282.9\t255.8\t255.7\t255.7\t226.9\t227.0\t226.9\t195.2\t195.2\t195.2\t159.9\t159.9\t159.8\t119.2\t119.1\t119.2   #!/usr/bin/env python3 # -*- coding: utf-8 -*- import numpy as np import matplotlib.pyplot as plt from scipy import stats import math #avoid font problem plt.rcParams['font.sans-serif'] = ['SimHei'] plt.rcParams['axes.unicode_minus'] = False #read data data = [] #order of magnitude oom = 0 fin = open('./data.txt', 'r') for i in fin.readlines():     if i[0] == '#':         #line start with # is comment         pass     elif i[0] == 'e':         oom = int(i.split()[1])     else:         data.append(np.array([float(x) * pow(10, oom) for x in i.split()]))         oom = 0 # print(data) ### main processing ### l = len(data[0]) x = data[1] y0 = data[0] data.append(y0 / x) y1 = data[2] slope, intercept, r_value, p_value, std_err = stats.linregress(x, y1) # z = np.polyfit(x, y1, 1) s_slope = slope * math.sqrt((r_value ** -2 - 1) / (l - 2)) s_intercept = s_slope * math.sqrt(np.mean(x ** 2)) print('linear regression:' ) print('slope:', slope) print('intercept:', intercept) print('r-value:', r_value) print('p-value:', p_value) print('std-err:', std_err) print('r-squared:', r_value ** 2) print('斜率标准差:', s_slope) print('截距标准差:', s_intercept) print('算得重力加速度:', 2 * slope) #plot plt.scatter(x, y1, marker='*', color='black', label='原始数据') # plt.plot(x, y1, '--', color='green', label='光滑曲线') plt.plot(x, intercept + slope * x, 'r', label='拟合直线') plt.xlabel('时间 t/s') plt.ylabel('平均速度 H/t / m/s') plt.legend(loc=4) plt.title('小球下落平均速度与时间关系图') plt.savefig('pic.png') plt.show()      只是画了张图就这么麻烦，很明显，除了练习了 Python 之外，和 Origin 相比生产力负提升。   之后的问题就是简化这些过程了。   两年之后   经过一年多的开发，我将一些常用的画图和数据处理操作打包成库，并添加了方便的文件输入和自动生成 docx 文件的功能。同时将 Python 包 physicsexp 发布到了 PyPI（和 AUR 一样，在 PyPI 发布包的门槛几乎没有）。   这里以三级大物 β 射线吸收为例。现在，读入文件只需要这样：   fin = open('./data.txt', 'r', encoding='utf-8') pos = readoneline(fin) N = readoneline(fin) Al_num = readoneline(fin) Cnt = readoneline(fin) fin.close()   数据做图也只要一行代码，一张图上多个曲线也只是一个参数的事，比如这是一张有三条线的图：   simple_plot(Momentum, Emeasure, show=0, issetrange=0, dot='+', lab='测量动能') simple_plot(Momentum, Eclassic, show=0, issetrange=0, dot='*', lab='经典动能') simple_plot(Momentum, Erela, dot='o', save='1.png', issetrange=0, xlab='$pc/MeV$', ylab='$E/MeV$', title='电子动能随动量变化曲线', lab='相对论动能')   画图并线性拟合也是非常常见的操作，于是也加入了库：   slope, intercept = simple_linear_plot(Al_Real, CntLn, xlab='质量厚度$g/cm^{-2}$', ylab='选区计数率对数(射线强度)', title='半对数曲线曲线', save='3.png') print(-slope) print(math.log(1e4) / (-slope)) print((math.log(Cnt[0]) - 4 * math.log(10) - intercept) / slope)   最后，一行代码将所有的数据和图片生成直接可以打印的 docx 文件，包含名字和日期：   gendocx('gen.docx', '1.png', '2.png', '3.png', 'slope, intercept: %f %f' % (slope, intercept))   文件如图所示，可以直接拿去打印了：      下面是整体代码：   #!/usr/bin/env python3 # -*- coding: utf-8 -*-  from physicsexp.mainfunc import * from physicsexp.gendocx import *  # read data fin = open('./data.txt', 'r', encoding='utf-8') pos = readoneline(fin) N = readoneline(fin) Al_num = readoneline(fin) Cnt = readoneline(fin) fin.close()  # data process  # calculated calibration values in class a = 2.373e-3 b = -.0161 dEk = .20  c0 = 299792458. MeV = 1e6 * electron  Emeasure = a * N + b + dEk x0 = .10 R = (pos - x0) / 2 B = 640.01e-4 Momentum = 300 * B * R Eclassic = ((Momentum * MeV)**2 / (2 * me * c0**2)) / MeV Erela = np.array([math.sqrt((i * MeV)**2 + (me * c0**2)**2) - me * c0**2 for i in Momentum]) / MeV print('pos\\t', pos) print('R\\t', R*100) print('pc\\t', Momentum) print('N\\t', N) print('Eclas\\t', Eclassic) print('Erela\\t', Erela) print('Emes\\t', Emeasure)  simple_plot(Momentum, Emeasure, show=0, issetrange=0, dot='+', lab='测量动能') simple_plot(Momentum, Eclassic, show=0, issetrange=0, dot='*', lab='经典动能') simple_plot(Momentum, Erela, dot='o', save='1.png', issetrange=0,             xlab='$pc/MeV$', ylab='$E/MeV$', title='电子动能随动量变化曲线', lab='相对论动能')  Len = 150 Cnt = Cnt / Len simple_plot(Al_num, Cnt, xlab='铝片数', ylab='选区计数率(射线强度)',             title='$\\\\beta$射线强度随铝片数衰减曲线', save='2.png') CntLn = np.log(Cnt) # d = 50 mg / cm^2 d = 50 Al_Real = Al_num * d slope, intercept = simple_linear_plot(Al_Real, CntLn, xlab='质量厚度$g/cm^{-2}$', ylab='选区计数率对数(射线强度)',                                       title='半对数曲线曲线', save='3.png') print(-slope) print(math.log(1e4) / (-slope)) print((math.log(Cnt[0]) - 4 * math.log(10) - intercept) / slope)  gendocx('gen.docx', '1.png', '2.png', '3.png', 'slope, intercept: %f %f' % (slope, intercept))   整个代码不含空行和注释共 46 行，而上面的自由落体代码 45 行。可见包装程度还是不错的。先计算然后画这三张图，写上面的代码和 Origin 相比哪个更快呢？还是看个人习惯，反正我是比较习惯代码。至少，这说明了大物实验需要的数据处理还是有很多相似点的，以至于打包一些函数可以提高一些生产力。   当然，这只是一个例子，对于个别实验，不管怎么处理都是要多花写时间的（直流辉光等离子体，说的就是你）。   你可能会问，为什么没有误差分析的功能。这确实是一个问题：计算 A 类和 B 类不确定度等不同实验差别很大，水平有限，我能做的除了将常数打表提供最基础的功能外，好像就没什么了。并且，开发得差不多时已经到二级中期了，算不确定度也不常见了（所以，别被一级吓怕了），所以这部分也没怎么测试过，属于 TODO。   迟到的 Jupyter Notebook   以上还是标准的 Python，但五级大物时，我尝试了仅一次就发现明显 Jupyter Notebook 更适合做类似的工作——尽管它不能用 Vim 编辑代码！这下子，数据直接输入在 Notebook 里就好了，画图也是所见即所得，不用等一张一张弹出来了。而进行临时的运算也不必影响正常流程。如图：      既然都到了 Jupyter ，如果多人合作的话，JupyterHub 是非常不错的选择，可以多个人在一台服务器上使用 Jupyter Notebook 。我之前配置的是每个用户一个隔离的 Docker 容器，里面的 Python 已经装好了包，可以直接使用，同时挂载了一个共享空间可以分享写好的 Notebook 。其实 JupyterHub 有用 Github 帐号登录之类的权限管理功能，但当时我们是几个认识的人合作，就没有管这些。   具体的代码在我的 GitHub 上，如果有人在写大物实验报告的过程中无聊了想找个地方摸鱼浪费点时间，不妨来看看。   总结   如果您想尝试用 Python 处理大物实验数据，我可以比较负责地说对于 95% 以上的实验是完全没有问题的。使用 NumPy 和 SciPy 计算， Matplotlib 做图，配以 docx 生成、Jupyter Notebook 或 JupyterHub 团队合作，可以比较轻松（但不意味着节省时间）地完成所有需要的操作，并可以通过包装库提高效率。   之前也有学长学姐尝试过类似的大物实验自动化项目，但因为暂时无法全部找到并对比，这里就不说了。大一的时候确实是想搞一套自动化程度很高的东西，但水平实在有限，并且不同的实验处理过程不太一样，一己之力完成每一个实验专属的程序也不太现实，所以结果就是自己挖了个坑并跳进去出不来：有时想想，或许还是左手卡西欧 991 右手座标纸来得快一些呢！  ","categories": ["USTC"],
"tags": ["大物实验","Python"],
"url": "/planet/2021/01/physexp-using-python/",
"teaser": null
},{
"title": "菜鸡写给菜鸡的 NetHack 入门教程",
"excerpt":"  教程说明   本教程只介绍最基本的操作和游戏刚刚开始阶段的策略，帮助新手活过第一层。引用内容为补充或 Fun facts，可以忽略。图中游戏“截图”均为字符界面的直接复制——虽然没有了颜色或加粗效果，但还是觉得这样更合适一些。   关于   NetHack 是一款历史悠久的 Roguelike 游戏，基于龙与地下城规则，也有着 Roguelike 典型特征：随机生成地图，永久死亡，难度和复杂度非常高。同时，游戏中也融合了各种文化和领域的元素，并且有多种有趣的提示信息和死亡方式。      总有一二十年才通关的老玩家说 NetHack 不难——或许和某些其他 Roguelike 相比确实如此，但这和你有什么关系呢？    此游戏默认只有字符界面，以下为一个游戏画面，可以感受一下：   This kobold corpse tastes terrible!--More--                                                         --------                       ----------                       |......-                       |........|`######################-......|                       |........|     -----------       |&lt;.....|                       |........|     |.........|  #####.....{.|                       |........-#####|.........-###    --------                       |........|    #..........|                       --------|-     -------.---                              ##                               ##                               #                              #                      --------.--                      |$........|                      |.........|     ------------    #..........|     |.....@.d..|    #|..........     |.....^.....#####|....&gt;....|     ------------     -----------  Petergu the Stripling          St:15 Dx:14 Co:18 In:9 Wi:7 Ch:10 Lawful Dlvl:1 $:11 HP:7(16) Pw:1(2) AC:6 Xp:1      贴图模式也是有的，但是不如字符模式经典    安装和配置   如果你使用 Linux 等操作系统，那么 NetHack 多半可以直接从软件源中安装：包名通常为 nethack 或 nethack-console。如果使用 Windows，可以在官方网站下载。建议使用默认的英文版。   为了更好地游戏体验，在 Linux 上推荐将以下内容添加至 ~/.nethackrc 配置文件（这也是 Ubuntu 中自带的配置）。   # # System-wide NetHack configuration file for tty-based NetHack. #  OPTIONS=windowtype:tty,toptenwin,hilite_pet OPTIONS=fixinv,safe_pet,sortpack,tombstone,color OPTIONS=verbose,news,fruit:potato OPTIONS=dogname:Slinky OPTIONS=catname:Rex OPTIONS=pickup_types:$ OPTIONS=nomail  # Enable this if you want to see your inventory sorted in alphabetical # order by item instead of by index letter: # OPTIONS=sortloot:full # or if you just want containers sorted: # OPTIONS=sortloot:loot  # # Some sane menucolor defaults #  OPTIONS=menucolors MENUCOLOR=\" blessed \"=green MENUCOLOR=\" holy \"=green MENUCOLOR=\" uncursed \"=yellow MENUCOLOR=\" cursed \"=red MENUCOLOR=\" unholy \"=red MENUCOLOR=\" cursed .* (being worn)\"=orange&amp;underline   开局   运行 NetHack 后将看到以下提示：   NetHack, Copyright 1985-2020          By Stichting Mathematisch Centrum and M. Stephenson.          Version 3.6.6 Unix, built Mar 18 18:21:43 2020.          See license for details.   Shall I pick character's race, role, gender and alignment for you? [ynaq]   你可以按 n 然后自己选择人物的种族（人类，矮人，精灵，地精，兽人）、角色（考古学家、骑士、游客等 13 种）、性别（男、女）和阵营（守序、中立、混乱），或者按 y 让系统随机选一个。对于新手，女武神（Valkyrie）、野蛮人（Barbarian）和武士（Samurai）是开局较为容易的角色，虽然我觉得巫师（Wizard）的游戏体验比较有趣。      性别和阵营可以在游戏中因道具改变       每个角色的每个阵营对应一个不同的神。其中僧侣（Monk）的神是中国神话传说中的”人物”：山海经、赤松子和黄帝    选好之后根据提示按 y 开始。出现 --More-- 时说明提示未显示完，按空格到下一句话。      被怪打一下后出现 --More--，下一句话基本是 You die...    Hello petergu, welcome to NetHack!  You are a neutral male human Wizard. --More--       -----   |..@|   |.f(|   |x..|   |...|   |?..+   -----          Petergu the Evoker             St:9 Dx:8 Co:16 In:17 Wi:14 Ch:11 Neutral Dlvl:1 $:0 HP:12(12) Pw:7(7) AC:9 Xp:1   图中，@ 是你，身边白底（复制出来看不到了）的 f 是你的宠物猫，x 是一只怪（grid bug），+ 是关着的门。各种字符代表什么需要慢慢记忆，或者按 / 然后根据提示再按 /，移动光标查看地图上的信息，结束按 ESC。      无论任何时候都要仔细阅读提示。这和学习 Linux 命令行是一样的。    底栏是各种状态。新手主要要关注的就是 HP，即生命值；AC，Armor Class，代表防御，越低越好；以及可能出现在底栏的其他临时状态，比如失明（Blind）。其他属性的含义可在 Wiki 上查询。      HP 降为 0 只是最无聊的死亡方式    按 i 可以打开装备栏查看自己的物品。空格返回。    Weapons  a - a blessed +1 quarterstaff (weapon in hands)  Armor  b - an uncursed +0 cloak of magic resistance (being worn)  Scrolls  i - an uncursed scroll of magic mapping  j - an uncursed scroll of enchant weapon  k - an uncursed scroll of remove curse  Spellbooks  l - a blessed spellbook of force bolt  m - an uncursed spellbook of create monster  Potions  f - an uncursed potion of gain ability  g - an uncursed potion of monster detection  h - an uncursed potion of healing  Rings  d - an uncursed ring of fire resistance  e - an uncursed ring of invisibility  Wands  c - a wand of magic missile (0:4)  Tools  n - a magic marker (0:55)  o - an uncursed blindfold  (end)   按 Ctrl-X 可以查看自身可以查看的属性。空格翻页和返回。      更多的属性不能自我感觉到，只有特殊情况下才会显示出来     Petergu the Wizard's attributes:   Background:   You are an Evoker, a level 1 male human Wizard.   You are neutral, on a mission for Thoth   who is opposed by Ptah (lawful) and Anhur (chaotic).   You are in the Dungeons of Doom, on level 1.   You entered the dungeon 9 turns ago.   There is a full moon in effect.   You have 0 experience points.   Basics:   You have all 12 hit points.   You have all 7 energy points (spell power).   Your armor class is 9.   Your wallet is empty.   Autopickup is on for '$' plus thrown.   Current Characteristics:   Your strength is 9.   Your dexterity is 8.   Your constitution is 16.   Your intelligence is 17.  (1 of 2)   “静态”操作就这些：因为 NetHack 是回合制游戏，你可以随时查看这些信息并在进行动作前充分思考。   那么接下来的任务就是活下去了。毕竟，游戏的目的是在地牢深处找到炎多的护符（Amulet of Yendor）并将其献给自己的神，而不是原地不动。   游戏开始   首先是移动。推荐的移动方式是和 Vim 操作类似的 8 个方向的 hjklyubn，当然新手用四个方向键也未尝不可。      事实上，用方向键移动 as good as dead。按下一个移动键不松手也是常见的死亡原因。     可以用大写的 HJKLYUBN 向一个方向长距离移动    比如说，按下箭头或 j 移动到门边上。移动途中，x 被猫杀死了。      Rex misses the grid bug. Rex bites the grid bug.     Rex bites the grid bug. The grid bug is killed!       按 Ctrl-P 可以查看之前的消息。       前期，宠物比你战斗力强也是常有的事     -----  |..&lt;|  |..(|  |..f|  |...|  |..@+  -----   开门才能出去。按 ol 开右侧（l 移动方向）的门。之后就可以向右探险了。沿着过道（#）走了一段，发现没有路了。   ----- |..&lt;| |..(| |...| |...| |...-# -----#      ###        #        #        ###f           @   这也是常见操作：需要搜索以下才能找到路。按 s 搜索，或者更常用的，按 10s 搜索 10 次。如果没有路就再来 10 次。发现了隐藏的门，于是继续开门走进屋子。   You find a hidden door.        -----   |..&lt;|   |..(|   |...|   |...|   |...-#   -----#        ###          #          #          ###f             @+   屋子里有一个 [ ，走到物品上方并按 , 捡起。p - a splint mail.。这是一件盔甲，按 w 穿戴，再按 ？ 选择可穿戴的物品，p 选择新捡到的盔甲。You cannot wear armor over a cloak.，先把外套脱下。按 T，看提示已经脱掉了，再穿盔甲，然后再次 W 穿上外套。这是可以看见 AC 降为 3，盔甲不错。      我们的运气不错。如果发现 AC 上升，多半是盔甲被诅咒（cursed），并且被诅咒的兵器和物品无法脱下。                                                 ----------------                                             #@d.............|   -----                                     f|...............           ....   |..&lt;|                                  #### ..............|   |..(|                                  ####+ .............+   |...|                                  ##    --------- ----   |...|                                  ##   |...-#                                 ##   -----#     ---------                   ##        ###   |.......|      -----+----  ###          #   |.......|      |.........###          #   |.......|      |.......{|####          ####|........######-........|             #-.......|      |........|              |.......|      |..&gt;.....|              ---------      |........|                             ----------  Petergu the Evoker             St:9 Dx:8 Co:16 In:17 Wi:14 Ch:11 Neutral Dlvl:1 $:0 HP:10(12) Pw:7(7) AC:3 Xp:1   继续探险，开门看见一只豺狼。直接按向右移动的键（l）攻击它。几步之后，狼被打死，你也只剩 8 HP 了。      当然，见到怪不掂量一下自己的能力就直接攻击并不是好的策略。       比如如果正面击打一个冰冻之眼（Frozen eye），你会被冻住若干回合，然后被旁边路过的小怪打死。       可以按 . 原地休息，这会缓慢回复失去的 HP。    You kill the jackal!  You hear water falling on coins.                                                 ----------------                                             f@%.............|   -----                                     #|...............           ....   |..&lt;|                                  #### ..............|   |..(|                                  ####+ .............+   |...|                                  ##    --------- ----   |...|                                  ##   |...-#                                 ##   -----#     ---------                   ##        ###   |.......|      -----+----  ###          #   |.......|      |.........###          #   |.......|      |.......{|####          ####|........######-........|             #-.......|      |........|              |.......|      |..&gt;.....|              ---------      |........|                             ----------  Petergu the Evoker             St:9 Dx:8 Co:16 In:17 Wi:14 Ch:11 Neutral Dlvl:1 $:0 HP:8(12) Pw:7(7) AC:3 Xp:1   可以看到提示狼被打死。同时你听到一些声音。      You hear water falling on coins. 的意思是本层有喷泉（中间屋子里的 {）    地上的 % 是狼的尸体。杀死怪物后你多半希望吃掉尸体，否则没有食物会饿死。移动到 % 上方并按 e，选择 y 吃掉。      You see here a jackal corpse.     There is a jackal corpse here; eat it? [ynq] (n) y     This jackal corpse tastes okay. You finish eating the jackal corpse.       当然，不是什么都能吃。有些怪的尸体会让你中毒。如果因此呕吐，你会变得更饿。然而有些尸体可以让你获得某些能力（比如抵抗中毒、抵抗寒冷等）。如果触摸鸡头蛇怪（cockatrace）的尸体，会变成石头。    这时，可以看到我们吃饱了，变得 Satiated。      这时继续大量吃东西可能会被噎死。    同时发现，有一扇锁着的门。我们目前没有撬锁工具，只能踢开。按 Ctrl-D 然后方向 h 踢门几次。   This door is locked.                                                 ----------------                                             #-..............|            -----   -----                                     #|.f.............           .....|   |..&lt;|                                  ####|..............|   |..(|                                  ####+@.............+   |...|                                  ##  ----------- ----   |...|                                  ##   |...-#                                 ##   -----#     ---------                   ##        ###   |.......|      -----+----  ###          #   |.......|      |.........###          #   |.......|      |.......{|####          ####|........######-........|             #-.......|      |........|              |.......|      |..&gt;.....|              ---------      |........|                             ----------  Petergu the Evoker             St:9 Dx:8 Co:16 In:17 Wi:14 Ch:11 Neutral Dlvl:1 $:0 HP:9(12) Pw:7(7) AC:3 Xp:1   我们踢门多次门才打开，中途来了两只狼，第一只被猫一击咬死，第二只也被猫一击咬死。      This door is locked.     WHAMMM!!! Rex misses the jackal.     WHAMMM!!! Rex bites the jackal. The jackal is killed!     WHAMMM!!!     WHAMMM!!!     WHAMMM!!!     As you kick the door, it crashes open! The jackal bites!     Rex misses the jackal.     You miss the jackal. The jackal bites! Rex bites the jackal.     The jackal is killed!       注意到图右边部分显示的房间了吗？因为从隔壁房间的门口“路过”，视野所限只能看到屋内的一部分。字符界面不代表没有光照的处理。    一层探险结束后，捡到了一些其他护身符和戒指等。因为捡东西过多，处于 Burdened 状态。走到 &gt; 的位置，按 &gt; 下行到下一层地牢。      负重是非常不好的，但本人就是不想扔东西。       You fall down the stairs.       下楼的时候宠物如果在你身边一格以内，会和你一起下去。否则会被留在原地，并逐渐野化    这时候，背包里已经有一些不知道是什么的装备了。      r - a sapphire ring     t - a pyramidal amulet    鉴定物品（Identification）是 NetHack 中重要而困难的。最基础的方法就是亲自体验：P - ? - t 戴上护身符。好像没什么变化，仍然不知道是什么。按 R 移除。戒指也一样，什么也没鉴定成。只能作罢。      鉴定物品的高级技巧有很多，比如在商店观察卖出价格。       NetHack 中每种戒指、护身符和卷轴有不同的外观。每一局游戏中外观和功能的对应保持不变，但不同局游戏的这种对应是随机的。这一点并不是 trivial 的，因为，比如说，戒指的材质（金属、石头等）不一样，从而决定了每一局中玩家能通过变身（polymorph）并吃掉戒指获得何种永久属性。    继续同样的探险。看到商店，但我们没有钱，只好离开。      \"Hello, petergu! Welcome to Akhalataki's used armor dealership!\"       攻击商店老板是非常不明智的行为。但是，如果店内有死亡魔杖（Wand of death），可以用其将老板杀死并获得所有的物品。如果有许愿魔杖（Wand of wishing），可以许愿得到死亡魔杖。这二者的基础价格都是 1200，很容易被认出。       如果你是游客（Tourist），并且穿着夏威夷 T 恤（Hawaiian shirt），会被商店老板加价“宰客”。       宠物可以捡起商店中的物品并在店门外放下—— shoplifting。     You hear someone cursing shoplifters.             #         ##         #         # --------|-- |.......@.| |[[[[[[f@[| |[[[[[)[[)| |))[[.[[[[| -----------   捡到并戴上一枚红宝石戒指后，发现这是被诅咒的——摘不下来了。然而还不知道它是干什么的，但多半不是什么好东西。      E - a cursed ruby ring (on right hand)    You see here a blindfold.  You faint from lack of food.--More--                                         ------                                        |....|                                       #......###                            ------######|....|  ##     ------       ----------------     |....-######|....|   ###   |....|       |..............-     |....|#     |....|     ####....F|       .......@..F....|     |....|      |....|         |....-##       |......f.......|     |..^..      --)---         ------ ###  ------------       ---.------------     -|-.--        #                     ###..{........|          ###                #            #####                    |..........|            ####             #                ##                   |........&gt;.|              -.----      ---.-      ----------.--                 ------------              |....|      |...|      ............|              |....|      |...|      |...........|              |....|      |...|      |.&lt;.........+              |.....######-...|      |...........|              ------      -----      -------------    Petergu the Evoker             St:8 Dx:8 Co:16 In:17 Wi:14 Ch:11 Neutral Dlvl:3 $:28 HP:15(15) Pw:23(23) AC:1 Xp:2 Fainted Burdened Deaf   不久之后，因饥饿晕倒。戴上的戒指多半是 Ring of hunger。按 e 吃一个鸡蛋，回过神来。正好背包里有解除诅咒的卷轴，读一个：按 r - ? - k。      As you read the scroll, it disappears.--More--     You feel like someone is helping you. Rex misses the lichen.--More--    然后，戒指就可以摘下来了。   又饿了，吃个鸡蛋结果变质了。      Blecch! Rotten food! The world spins and goes dark.    又走了一阵，没有吃的了（因为尸体都让猫吃了），已经晕倒，怎么办？只有神能救我们了。      Wizard Needs Food, Badly!    #pray      You begin praying to Thoth. You are surrounded by a shimmering light.--More--     You finish your prayer. You feel that Thoth is well-pleased.--More--     Your stomach feels content.    祈祷是非常强大的——看，这就饱了。但是如果频繁祈祷，神会对我们生气。      原地祈祷三次，就会被雷劈死。                                                       --------                             ---------------######........#            --------         |..@&gt;.........|#     |......|#     -----            |......|         |.............|#    #-..B...|#     |...|            |...:..|         ---|-----------#    #|......|#     |...|            |......|            #   ##   ####    #|.......##    |...|            |......|         ##*##########       #.......| #####....|            |......|        ##  #    #####     ###-------- #    |...|            -----|--       ##   #        #     # #         #    -|---                 #         #  ###        ##    ##          #     #                 #        ##  #           #    #           #     #                 #        #---.------     #    #           #     #                 #        #|........|    -|----#           ##    ##                 #       ##|........|    |..|&gt;|#            ####--|---------                ##     ### |........|    |....|#               #...........|            ----.-     #   |&lt;.......|    |....-#                |..........|            |.....######   |........|    ------                 |..........|            |...{| ######  .........|                           ------------            ------         ----------  Petergu the Evoker             St:9 Dx:8 Co:16 In:17 Wi:14 Ch:11 Neutral Dlvl:4 $:62 HP:15(15) Pw:23(23) AC:1 Xp:2 Burdened   发现，本层有两个下楼梯。这是因为有一个是通往支线任务地精矿洞（Gnomish Mines）的。这个支线较难，如果不是女武神等前期强角色基本不要擅自进入。支线地图是这种风格，周围都是地精 G。稍微进去一下，立刻被围攻。幸亏猫比较强打死几只怪。还剩 7 HP 逃了出来。当然，矿洞里装备也很多，我们换了双鞋子，现在 AC 是 0，而代价是沉重的盔甲和行动不便。      b - an uncursed +0 cloak of magic resistance (being worn)     p - a +0 splint mail (being worn)     B - a +0 iron skull cap (being worn)     I - a +0 pair of hard shoes (being worn)       ---    |..--  ---....- -  |.......|.   .........-    -.......|     -......|      -..f..--      --.....|       -..G..|    |....|...| ---    | ----.......|        -.@......|       |.........|       |.......---       ..*.G.....      ------------   下一层看到一个箱子。可以 #loot 抢劫。但箱子上锁了，所以可以踢几脚把锁打开。      这么做的代价是箱内的药水和易碎的魔杖会损坏。       THUD! You break open the lock!    You see here a large box.                                                              -----                   -----------     #########################....|                   |.........|    ###########        #      |...|                   |.........|    #------      ------       .....                   |.........|    #.....| #####...&lt;.|       |...|                 #`|..f..&gt;...|    #|.....##    |...)|       --.--                  #-...@.....+     |....|      |...)|         #                  #-----------    #-.----      |....|         #                  #####        ##  ##          |....|###      #                    # ################        #---.--##############                               #              `############ --.-+-|----                    .                               ###     ..........|                   |.                                       |.........|                   |.                                       |...... ..|                   |.                                       |.........|                   ---                                      |.........|                                                            -----------   Petergu the Conjurer           St:9 Dx:8 Co:16 In:17 Wi:14 Ch:11 Neutral Dlvl:5 $:75 HP:25(25) Pw:31(31) AC:0 Xp:3 Burdened   然而箱子是空的。      你也可以往箱子里放一些东西。    下一层看到了一些类似宫殿的东西。中间有先知，可以花 50 块钱向它咨询（#chat）。   You see here a statue of a plains centaur.                                                      -------              ------------           ###############-....*|              |..........|        ####              |.....|              ...........| ############        #####-.^....              |.....&lt;....|##     #-----|-------#    -------              -|----------#       |C.........C.#               ############       |.....C.....|#                                  |...-----...|                                  |...|.{.|...|                                  |..@|{.{|C..|                                  |.....{.|...|                                  |..f-----...|                                  |.....C.....|                                  |C.........C|                                  -------------     Petergu the Conjurer           St:9 Dx:8 Co:16 In:17 Wi:14 Ch:11 Neutral Dlvl:6 $:75 HP:25(25) Pw:31(31) AC:0 Xp:3 Burdened   下一层，遇到一只巨大的蝙蝠（Giant bat），被咬到残血后我们逃跑，但是它追了过来，狭路相逢。   The giant bat bites!--More--                                            -----                       -----                                           |...|                #######-...|                                          #|....#################      |...|                                          #-...|#                      |...|                                          #|...|                       -...|                                          #|...|                       |.&gt;.|                                          #-----                       ---.-                                          ##                              #                                          #                               *                                         ###                              #                                          # #                             #                                          ###                             #                                            #                          -|-|-                                            #                          |...|                                            #                          |...|                                           +######B@######`            ...&lt;|                                          .|#                          -----                                          .-#                                          --#  Petergu the Conjurer           St:9 Dx:8 Co:16 In:17 Wi:14 Ch:11 Neutral Dlvl:7 $:88 HP:5(29) Pw:43(43) AC:0 Xp:4 Burdened      You die...--More--     Do you want your possessions identified? [ynq] (n)     于是毙命此地。   死后游戏会问你要不要看看你的东西到底是什么。你可以看一眼。    L - 3 uncursed scrolls of blank paper  R - an uncursed scroll of fire  Spellbooks  l - a blessed spellbook of force bolt  m - an uncursed spellbook of create monster  x - an uncursed spellbook of slow monster  Potions  f - an uncursed potion of gain ability  g - an uncursed potion of monster detection  h - an uncursed potion of healing  G - an uncursed potion of sickness  O - an uncursed potion of water  S - a blessed potion of sleeping  Rings  d - an uncursed ring of fire resistance  e - an uncursed ring of invisibility  r - an uncursed ring of cold resistance  E - an uncursed ring of aggravate monster  H - an uncursed ring of sustain ability  Wands  c - a wand of magic missile (0:4)  Tools  n - a magic marker (0:55)  (2 of 3)   通常，如果看了，就会发现背包有至少一件能避免死亡的物品（比如残血之后喝个药之类的，或者这个 magic missile 看起来很 promising）。然而生命只有一次，这就是 Roguelike。                           ----------                       /          \\                      /    REST    \\                     /      IN      \\                    /     PEACE      \\                   /                  \\                   |     petergu      |                   |      88 Au       |                   |   killed by a    |                   |    giant bat     |                   |                  |                   |                  |                   |       2021       |                  *|     *  *  *      | *         _________)/\\\\_//(\\/(/\\)/\\//\\/|_)_______   Goodbye petergu the Wizard...  You died in The Dungeons of Doom on dungeon level 7 with 704 points, and 88 pieces of gold, after 3310 moves. You were level 4 with a maximum of 29 hit points when you died.   尾声   通过本菜鸡的一局典型游戏流程，希望你已经了解了 NetHack 的基本操作，并能够在地下城中跌跌撞撞地存活一段有限大的时间。仍然有非常多重要的机制和操作本教程中没有提及（甚至 BUC 都没有说），这就要各位自己寻找了。对于一般玩家，要胜任这种游戏，作弊、剧透甚至是阅读源代码都是有必要而并不可耻的行为。   参考资料      https://nethackwiki.com   https://www.zhihu.com/question/40177337   https://www.melankolia.net/nethack/nethack.guide.html   https://nethack.org/   https://github.com/regymm/nethackassistant   https://alt.org/nethack/  ","categories": ["Tutorial"],
"tags": ["游戏"],
"url": "/planet/2021/09/nethack-gitgud/",
"teaser": null
},{
"title": "提问的智慧",
"excerpt":"How To Ask Questions The Smart Way   Copyright © 2001,2006,2014 Eric S. Raymond, Rick Moen   本指南英文版版权为 Eric S. Raymond, Rick Moen 所有。   原文网址：http://www.catb.org/~esr/faqs/smart-questions.html   中文翻译仓库网址：https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way。以下内容来自简体中文版。   Copyleft 2001 by D.H.Grand(nOBODY/Ginux), 2010 by Gasolin, 2015 by Ryan Wu   本中文指南是基于原文 3.10 版以及 2010 年由 Gasolin 所翻译版本的最新翻译；   协助指出翻译问题，请发 issue，或直接发 pull request 给我。   本文另有繁體中文版。   原文版本历史   声明   许多项目在他们的使用协助/说明网页中链接了本指南，这么做很好，我们也鼓励大家都这么做。但如果你是负责管理这个项目网页的人，请在超链接附近的显著位置上注明：   本指南不提供此项目的实际支持服务！   我们已经深刻领教到少了上述声明所带来的痛苦。因为少了这点声明，我们不停地被一些白痴纠缠。这些白痴认为既然我们发布了这本指南，那么我们就有责任解决世上所有的技术问题。   如果你因寻求某些帮助而阅读本指南，并在离开时还觉得可以从本文作者这里得到直接帮助，那你就是我们之前说的那些白痴之一。别问我们问题，我们只会忽略你。我们在这本指南中想教你如何从那些真正懂得你所遇到的软件或硬件问题的人处取得协助，而 99% 的情况下那不会是我们。除非你确定本指南的作者之一刚好是你所遇到的问题领域的专家，否则请不要打扰我们，这样大家都会开心一点。   简介   在黑客的世界里，当你拋出一个技术问题时，最终是否能得到有用的回答，往往取决于你所提问和追问的方式。本指南将教你如何正确的提问以获得你满意的答案。   现在开源（Open Source）软件已经相当盛行，您通常可以从其他更有经验的用户那里获得与黑客一样好的答案，这是件好事；和黑客相比，用户们往往对那些新手常遇到的问题更宽容一些。尽管如此，以我们在此推荐的方式对待这些有经验的用户通常也是从他们那里获得有用答案的最有效方式。   首先你应该明白，黑客们喜爱有挑战性的问题，或者能激发他们思维的好问题。如果我们并非如此，那我们也不会成为你想询问的对象。如果你给了我们一个值得反复咀嚼玩味的好问题，我们自会对你感激不尽。好问题是激励，是厚礼。好问题可以提高我们的理解力，而且通常会暴露我们以前从没意识到或者思考过的问题。对黑客而言，“好问题！”是诚挚的大力称赞。   尽管如此，黑客们有着蔑视或傲慢面对简单问题的坏名声，这有时让我们看起来对新手、无知者似乎较有敌意，但其实不是那样的。   我们不讳言我们对那些不愿思考、或者在发问前不做他们该做的事的人的蔑视。那些人是时间杀手 —— 他们只想索取，从不付出，消耗我们可用在更有趣的问题或更值得回答的人身上的时间。我们称这样的人为 失败者（撸瑟） （由于历史原因，我们有时把它拼作 lusers）。   我们意识到许多人只是想使用我们写的软件，他们对学习技术细节没有兴趣。对大多数人而言，电脑只是种工具，是种达到目的的手段而已。他们有自己的生活并且有更要紧的事要做。我们了解这点，也从不指望每个人都对这些让我们着迷的技术问题感兴趣。尽管如此，我们回答问题的风格是指向那些真正对此有兴趣并愿意主动参与解决问题的人，这一点不会变，也不该变。如果连这都变了，我们就是在降低做自己最擅长的事情上的效率。   我们（在很大程度上）是自愿的，从繁忙的生活中抽出时间来解答疑惑，而且时常被提问淹没。所以我们无情地滤掉一些话题，特别是拋弃那些看起来像失败者的家伙，以便更高效地利用时间来回答赢家（winner）的问题。   如果你厌恶我们的态度，高高在上，或过于傲慢，不妨也设身处地想想。我们并没有要求你向我们屈服 —— 事实上，我们大多数人非常乐意与你平等地交流，只要你付出小小努力来满足基本要求，我们就会欢迎你加入我们的文化。但让我们帮助那些不愿意帮助自己的人是没有效率的。无知没有关系，但装白痴就是不行。   所以，你不必在技术上很在行才能吸引我们的注意，但你必须表现出能引导你变得在行的特质 —— 机敏、有想法、善于观察、乐于主动参与解决问题。如果你做不到这些使你与众不同的事情，我们建议你花点钱找家商业公司签个技术支持服务合同，而不是要求黑客个人无偿地帮助你。   如果你决定向我们求助，当然你也不希望被视为失败者，更不愿成为失败者中的一员。能立刻得到快速并有效答案的最好方法，就是像赢家那样提问 —— 聪明、自信、有解决问题的思路，只是偶尔在特定的问题上需要获得一点帮助。   （欢迎对本指南提出改进意见。你可以 email 你的建议至 esr@thyrsus.com 或 respond-auto@linuxmafia.com。然而请注意，本文并非网络礼节的通用指南，而我们通常会拒绝无助于在技术论坛得到有用答案的建议）。   在提问之前   在你准备要通过电子邮件、新闻群组或者聊天室提出技术问题前，请先做到以下事情：      尝试在你准备提问的论坛的旧文章中搜索答案。   尝试上网搜索以找到答案。   尝试阅读手册以找到答案。   尝试阅读常见问题文件（FAQ）以找到答案。   尝试自己检查或试验以找到答案。   向你身边的强者朋友打听以找到答案。   如果你是程序开发者，请尝试阅读源代码以找到答案。   当你提出问题的时候，请先表明你已经做了上述的努力；这将有助于树立你并不是一个不劳而获且浪费别人的时间的提问者。如果你能一并表达在做了上述努力的过程中所学到的东西会更好，因为我们更乐于回答那些表现出能从答案中学习的人的问题。   运用某些策略，比如先用 Google 搜索你所遇到的各种错误信息（搜索 Google 论坛和网页），这样很可能直接就找到了能解决问题的文件或邮件列表线索。即使没有结果，在邮件列表或新闻组寻求帮助时加上一句 我在 Google 中搜过下列句子但没有找到什么有用的东西 也是件好事，即使它只是表明了搜索引擎不能提供哪些帮助。这么做（加上搜索过的字串）也让遇到相似问题的其他人能被搜索引擎引导到你的提问来。   别着急，不要指望几秒钟的 Google 搜索就能解决一个复杂的问题。在向专家求助之前，再阅读一下常见问题文件（FAQ）、放轻松、坐舒服一些，再花点时间思考一下这个问题。相信我们，他们能从你的提问看出你做了多少阅读与思考，如果你是有备而来，将更有可能得到解答。不要将所有问题一股脑拋出，只因你的第一次搜索没有找到答案（或者找到太多答案）。   准备好你的问题，再将问题仔细的思考过一遍，因为草率的发问只能得到草率的回答，或者根本得不到任何答案。越是能表现出在寻求帮助前你为解决问题所付出的努力，你越有可能得到实质性的帮助。   小心别问错了问题。如果你的问题基于错误的假设，某个普通黑客（J. Random Hacker）多半会一边在心里想着蠢问题…，一边用无意义的字面解释来答复你，希望着你会从问题的回答（而非你想得到的答案）中汲取教训。   绝不要自以为够格得到答案，你没有；你并没有。毕竟你没有为这种服务支付任何报酬。你将会是自己去挣到一个答案，靠提出有内涵的、有趣的、有思维激励作用的问题 —— 一个有潜力能贡献社区经验的问题，而不仅仅是被动的从他人处索取知识。   另一方面，表明你愿意在找答案的过程中做点什么是一个非常好的开端。谁能给点提示？、我的这个例子里缺了什么？以及我应该检查什么地方比请把我需要的确切的过程贴出来更容易得到答复。因为你表现出只要有人能指个正确方向，你就有完成它的能力和决心。   当你提问时   慎选提问的论坛   小心选择你要提问的场合。如果你做了下述的事情，你很可能被忽略掉或者被看作失败者：      在与主题不合的论坛上贴出你的问题。   在探讨进阶技术问题的论坛张贴非常初级的问题；反之亦然。   在太多的不同新闻群组上重复转贴同样的问题（cross-post）。   向既非熟人也没有义务解决你问题的人发送私人电邮。   黑客会剔除掉那些搞错场合的问题，以保护他们沟通的渠道不被无关的东西淹没。你不会想让这种事发生在自己身上的。   因此，第一步是找到对的论坛。再说一次，Google 和其它搜索引擎还是你的朋友，用它们来找到与你遭遇到困难的软硬件问题最相关的网站。通常那儿都有常见问题（FAQ）、邮件列表及相关说明文件的链接。如果你的努力（包括阅读 FAQ）都没有结果，网站上也许还有报告 Bug（Bug-reporting）的流程或链接，如果是这样，链过去看看。   向陌生的人或论坛发送邮件最可能是风险最大的事情。举例来说，别假设一个提供丰富内容的网页的作者会想充当你的免费顾问。不要对你的问题是否会受到欢迎做太乐观的估计 —— 如果你不确定，那就向别处发送，或者压根别发。   在选择论坛、新闻群组或邮件列表时，别太相信名字，先看看 FAQ 或者许可书以弄清楚你的问题是否切题。发文前先翻翻已有的话题，这样可以让你感受一下那里的文化。事实上，事先在新闻组或邮件列表的历史记录中搜索与你问题相关的关键词是个极好的主意，也许这样就找到答案了。即使没有，也能帮助你归纳出更好的问题。   别像机关枪似的一次“扫射”所有的帮助渠道，这就像大喊大叫一样会使人不快。要一个一个地来。   搞清楚你的主题！最典型的错误之一是在某种致力于跨平台可移植的语言、套件或工具的论坛中提关于 Unix 或 Windows 操作系统程序界面的问题。如果你不明白为什么这是大错，最好在搞清楚这之间差异之前什么也别问。   一般来说，在仔细挑选的公共论坛中提问，会比在私有论坛中提同样的问题更容易得到有用的回答。有几个理由可以支持这点，一是看潜在的回复者有多少，二是看观众有多少。黑客较愿意回答那些能帮助到许多人的问题。   可以理解的是，老练的黑客和一些热门软件的作者正在接受过多的错发信息。就像那根最后压垮骆驼背的稻草一样，你的加入也有可能使情况走向极端 —— 已经好几次了，一些热门软件的作者由于涌入其私人邮箱的大量不堪忍受的无用邮件而不再提供支持。   Stack Overflow   搜索，然后在 Stack Exchange 问。   近年来，Stack Exchange 社区已经成为回答技术及其他问题的主要渠道，尤其是那些开放源码的项目。   因为 Google 索引是即时的，在看 Stack Exchange 之前先在 Google 搜索。有很高的几率某人已经问了一个类似的问题，而且 Stack Exchange 网站们往往会是搜索结果中最前面几个。如果你在 Google 上没有找到任何答案，你再到特定相关主题的网站去找。用标签（Tag）搜索能让你更缩小你的搜索结果。   Stack Exchange 已经成长到超过一百个网站，以下是最常用的几个站：      Super User 是问一些通用的电脑问题，如果你的问题跟代码或是写程序无关，只是一些网络连线之类的，请到这里。   Stack Overflow 是问写程序有关的问题。   Server Fault 是问服务器和网管相关的问题。   网站和 IRC 论坛   本地的用户群组（user group），或者你所用的 Linux 发行版本也许正在宣传他们的网页论坛或 IRC 频道，并提供新手帮助（在一些非英语国家，新手论坛很可能还是邮件列表），这些都是开始提问的好地方，特别是当你觉得遇到的也许只是相对简单或者很普通的问题时。有广告赞助的 IRC 频道是公开欢迎提问的地方，通常可以即时得到回应。   事实上，如果程序出的问题只发生在特定 Linux 发行版提供的版本（这很常见），最好先去该发行版的论坛或邮件列表中提问，再到程序本身的论坛或邮件列表提问。（否则）该项目的黑客可能仅仅回复“使用我们的版本”。   在任何论坛发文以前，先确认一下有没有搜索功能。如果有，就试着搜索一下问题的几个关键词，也许这会有帮助。如果在此之前你已做过通用的网页搜索（你也该这样做），还是再搜索一下论坛，搜索引擎有可能没来得及索引此论坛的全部内容。   通过论坛或 IRC 频道来提供用户支持服务有增长的趋势，电子邮件则大多为项目开发者间的交流而保留。所以最好先在论坛或 IRC 中寻求与该项目相关的协助。   在使用 IRC 的时候，首先最好不要发布很长的问题描述，有些人称之为频道洪水。最好通过一句话的问题描述来开始聊天。   第二步，使用项目邮件列表   当某个项目提供开发者邮件列表时，要向列表而不是其中的个别成员提问，即使你确信他能最好地回答你的问题。查一查项目的文件和首页，找到项目的邮件列表并使用它。有几个很好的理由支持我们采用这种办法：      任何好到需要向个别开发者提出的问题，也将对整个项目群组有益。反之，如果你认为自己的问题对整个项目群组来说太愚蠢，那这也不能成为骚扰个别开发者的理由。   向列表提问可以分散开发者的负担，个别开发者（尤其是项目领导人）也许太忙以至于没法回答你的问题。   大多数邮件列表都会被存档，那些被存档的内容将被搜索引擎索引。如果你向列表提问并得到解答，将来其他人可以通过网页搜索找到你的问题和答案，也就不用再次发问了。   如果某些问题经常被问到，开发者可以利用此信息来改进说明文件或软件本身，以使其更清楚。如果只是私下提问，就没有人能看到最常见问题的完整场景。   如果一个项目既有“用户”也有“开发者”（或“黑客”）邮件列表或论坛，而你又不会动到那些源代码，那么就向“用户”列表或论坛提问。不要假设自己会在开发者列表中受到欢迎，那些人多半会将你的提问视为干扰他们开发的噪音。   然而，如果你确信你的问题很特别，而且在“用户”列表或论坛中几天都没有回复，可以试试前往“开发者”列表或论坛发问。建议你在张贴前最好先暗地里观察几天以了解那里的行事方式（事实上这是参与任何私有或半私有列表的好主意）   如果你找不到一个项目的邮件列表，而只能查到项目维护者的电子邮件地址，尽管向他发信。即使是在这种情况下，也别假设（项目）邮件列表不存在。在你的电子邮件中，请陈述你已经试过但没有找到合适的邮件列表，也提及你不反对将自己的邮件转发给他人（许多人认为，即使没什么秘密，私人电子邮件也不应该被公开。通过允许将你的电子邮件转发他人，你给了相应人员处置你邮件的选择）。   使用有意义且描述明确的标题   在邮件列表、新闻群组或论坛中，大约 50 字以内的标题是抓住资深专家注意力的好机会。别用喋喋不休的帮帮忙、跪求、急（更别说救命啊！！！！这样让人反感的话，用这种标题会被条件反射式地忽略）来浪费这个机会。不要妄想用你的痛苦程度来打动我们，而应该是在这点空间中使用极简单扼要的描述方式来提出问题。   一个好标题范例是目标 —— 差异式的描述，许多技术支持组织就是这样做的。在目标部分指出是哪一个或哪一组东西有问题，在差异部分则描述与期望的行为不一致的地方。      蠢问题：救命啊！我的笔记本电脑不能正常显示了！       聪明问题：X.org 6.8.1 的鼠标光标会变形，某牌显卡 MV1005 芯片组。       更聪明问题：X.org 6.8.1 的鼠标光标，在某牌显卡 MV1005 芯片组环境下 - 会变形。    编写目标 —— 差异 式描述的过程有助于你组织对问题的细致思考。是什么被影响了？ 仅仅是鼠标光标或者还有其它图形？只在 X.org 的 X 版中出现？或只是出现在 6.8.1 版中？ 是针对某牌显卡芯片组？或者只是其中的 MV1005 型号？ 一个黑客只需瞄一眼就能够立即明白你的环境和你遇到的问题。   总而言之，请想像一下你正在一个只显示标题的存档讨论串（Thread）索引中查寻。让你的标题更好地反映问题，可使下一个搜索类似问题的人能够关注这个讨论串，而不用再次提问相同的问题。   如果你想在回复中提出问题，记得要修改内容标题，以表明你是在问一个问题， 一个看起来像 Re: 测试 或者 Re: 新 bug 的标题很难引起足够重视。另外，在不影响连贯性之下，适当引用并删减前文的内容，能给新来的读者留下线索。   对于讨论串，不要直接点击回复来开始一个全新的讨论串，这将限制你的观众。因为有些邮件阅读程序，比如 mutt ，允许用户按讨论串排序并通过折叠讨论串来隐藏消息，这样做的人永远看不到你发的消息。   仅仅改变标题还不够。mutt 和其它一些邮件阅读程序还会检查邮件标题以外的其它信息，以便为其指定讨论串。所以宁可发一个全新的邮件。   在网页论坛上，好的提问方式稍有不同，因为讨论串与特定的信息紧密结合，并且通常在讨论串外就看不到里面的内容，故通过回复提问，而非改变标题是可接受的。不是所有论坛都允许在回复中出现分离的标题，而且这样做了基本上没有人会去看。不过，通过回复提问，这本身就是暧昧的做法，因为它们只会被正在查看该标题的人读到。所以，除非你只想在该讨论串当前活跃的人群中提问，不然还是另起炉灶比较好。   使问题容易回复   以请将你的回复发送到……来结束你的问题多半会使你得不到回答。如果你觉得花几秒钟在邮件客户端设置一下回复地址都麻烦，我们也觉得花几秒钟思考你的问题更麻烦。如果你的邮件程序不支持这样做，换个好点的；如果是操作系统不支持这种邮件程序，也换个好点的。   在论坛，要求通过电子邮件回复是非常无礼的，除非你认为回复的信息可能比较敏感（有人会为了某些未知的原因，只让你而不是整个论坛知道答案）。如果你只是想在有人回复讨论串时得到电子邮件提醒，可以要求网页论坛发送给你。几乎所有论坛都支持诸如追踪此讨论串、有回复时发送邮件提醒等功能。   使用清晰、正确、精准且合乎语法的语句   我们从经验中发现，粗心的提问者通常也会粗心地写程序与思考（我敢打包票）。回答粗心大意者的问题很不值得，我们宁愿把时间耗在别处。   正确的拼写、标点符号和大小写是很重要的。一般来说，如果你觉得这样做很麻烦，不想在乎这些，那我们也觉得麻烦，不想在乎你的提问。花点额外的精力斟酌一下字句，用不着太僵硬与正式 —— 事实上，黑客文化很看重能准确地使用非正式、俚语和幽默的语句。但它必须很准确，而且有迹象表明你是在思考和关注问题。   正确地拼写、使用标点和大小写，不要将its混淆为it's，loose搞成lose或者将discrete弄成discreet。不要全部用大写，这会被视为无礼的大声嚷嚷（全部小写也好不到哪去，因为不易阅读。Alan Cox 也许可以这样做，但你不行）。   更白话的说，如果你写得像是个半文盲[译注：小白]，那多半得不到理睬。也不要使用即时通信中的简写或火星文，如将的简化为d会使你看起来像一个为了少打几个键而省字的小白。更糟的是，如果像个小孩似地鬼画符那绝对是在找死，可以肯定没人会理你（或者最多是给你一大堆指责与挖苦）。   如果在使用非母语的论坛提问，你可以犯点拼写和语法上的小错，但决不能在思考上马虎（没错，我们通常能弄清两者的分别）。同时，除非你知道回复者使用的语言，否则请使用英语书写。繁忙的黑客一般会直接删除用他们看不懂的语言写的消息。在网络上英语是通用语言，用英语书写可以将你的问题在尚未被阅读就被直接删除的可能性降到最低。   如果英文是你的外语（Second language），提示潜在回复者你有潜在的语言困难是很好的： [译注：以下附上原文以供使用]      English is not my native language; please excuse typing errors.       英文不是我的母语，请原谅我的错字或语法。      If you speak $LANGUAGE, please email/PM me; I may need assistance translating my question.       如果你说某语言，请向我发电邮/私信；   我需要有人协助我翻译我的问题。      I am familiar with the technical terms, but some slang expressions and idioms are difficult for me.       我对技术名词很熟悉，但对于俗语或是特别用法不甚了解。      I’ve posted my question in $LANGUAGE and English. I’ll be glad to translate responses, if you only use one or the other.       我把我的问题用某语言和英文写出来。   如果你只用其中的一种语言回答，我会乐意将回复翻译成为你使用的语言。   使用易于读取且标准的文件格式发送问题   如果你人为地将问题搞得难以阅读，它多半会被忽略，人们更愿读易懂的问题，所以：      使用纯文字而不是 HTML (关闭 HTML 并不难）。   使用 MIME 附件通常是可以的，前提是真正有内容（譬如附带的源代码或 patch），而不仅仅是邮件程序生成的模板（譬如只是信件内容的拷贝）。   不要发送一段文字只是一行句子但自动换行后会变成多行的邮件（这使得回复部分内容非常困难）。设想你的读者是在 80 个字符宽的终端机上阅读邮件，最好设置你的换行分割点小于 80 字。   但是，对一些特殊的文件不要设置固定宽度（譬如日志文件拷贝或会话记录）。数据应该原样包含，让回复者有信心他们看到的是和你看到的一样的东西。   在英语论坛中，不要使用Quoted-Printable MIME 编码发送消息。这种编码对于张贴非 ASCII 语言可能是必须的，但很多邮件程序并不支持这种编码。当它们处理换行时，那些文本中四处散布的=20符号既难看也分散注意力，甚至有可能破坏内容的语意。   绝对，永远不要指望黑客们阅读使用封闭格式编写的文档，像微软公司的 Word 或 Excel 文件等。大多数黑客对此的反应就像有人将还在冒热气的猪粪倒在你家门口时你的反应一样。即便他们能够处理，他们也很厌恶这么做。   如果你从使用 Windows 的电脑发送电子邮件，关闭微软愚蠢的智能引号功能 （从[选项] &gt; [校订] &gt; [自动校正选项]，勾选掉智能引号单选框），以免在你的邮件中到处散布垃圾字符。   在论坛，勿滥用表情符号和HTML功能（当它们提供时）。一两个表情符号通常没有问题，但花哨的彩色文本倾向于使人认为你是个无能之辈。过滥地使用表情符号、色彩和字体会使你看来像个傻笑的小姑娘。这通常不是个好主意，除非你只是对性而不是对答案感兴趣。   如果你使用图形用户界面的邮件程序（如微软公司的 Outlook 或者其它类似的），注意它们的默认设置不一定满足这些要求。大多数这类程序有基于选单的查看源代码命令，用它来检查发送文件夹中的邮件，以确保发送的是纯文本文件同时没有一些奇怪的字符。   精确地描述问题并言之有物      仔细、清楚地描述你的问题或 Bug 的症状。   描述问题发生的环境（机器配置、操作系统、应用程序、以及相关的信息），提供经销商的发行版和版本号（如：Fedora Core 4、Slackware 9.1等）。   描述在提问前你是怎样去研究和理解这个问题的。   描述在提问前为确定问题而采取的诊断步骤。   描述最近做过什么可能相关的硬件或软件变更。   尽可能地提供一个可以重现这个问题的可控环境的方法。   尽量去揣测一个黑客会怎样反问你，在你提问之前预先将黑客们可能提出的问题回答一遍。   以上几点中，当你报告的是你认为可能在代码中的问题时，给黑客一个可以重现你的问题的环境尤其重要。当你这么做时，你得到有效的回答的机会和速度都会大大的提升。   Simon Tatham 写过一篇名为《如何有效的报告 Bug》的出色文章。强力推荐你也读一读。   话不在多而在精   你需要提供精确有内容的信息。这并不是要求你简单的把成堆的出错代码或者资料完全转录到你的提问中。如果你有庞大而复杂的测试样例能重现程序挂掉的情境，尽量将它剪裁得越小越好。   这样做的用处至少有三点。 第一，表现出你为简化问题付出了努力，这可以使你得到回答的机会增加； 第二，简化问题使你更有可能得到有用的答案； 第三，在精炼你的 bug 报告的过程中，你很可能就自己找到了解决方法或权宜之计。   别动辄声称找到 Bug   当你在使用软件中遇到问题，除非你非常、非常的有根据，不要动辄声称找到了 Bug。提示：除非你能提供解决问题的源代码补丁，或者提供回归测试来表明前一版本中行为不正确，否则你都多半不够完全确信。这同样适用在网页和文件，如果你（声称）发现了文件的Bug，你应该能提供相应位置的修正或替代文件。   请记得，还有其他许多用户没遇到你发现的问题，否则你在阅读文件或搜索网页时就应该发现了（你在抱怨前已经做了这些，是吧？）。这也意味着很有可能是你弄错了而不是软件本身有问题。   编写软件的人总是非常辛苦地使它尽可能完美。如果你声称找到了 Bug，也就是在质疑他们的能力，即使你是对的，也有可能会冒犯到其中某部分人。当你在标题中嚷嚷着有Bug时，这尤其严重。   提问时，即使你私下非常确信已经发现一个真正的 Bug，最好写得像是你做错了什么。如果真的有 Bug，你会在回复中看到这点。这样做的话，如果真有 Bug，维护者就会向你道歉，这总比你惹恼别人然后欠别人一个道歉要好一点。   低声下气不能代替你的功课   有些人明白他们不该粗鲁或傲慢的提问并要求得到答复，但他们选择另一个极端 —— 低声下气：我知道我只是个可悲的新手，一个撸瑟，但...。这既使人困扰，也没有用，尤其是伴随着与实际问题含糊不清的描述时更令人反感。   别用原始灵长类动物的把戏来浪费你我的时间。取而代之的是，尽可能清楚地描述背景条件和你的问题情况。这比低声下气更好地定位了你的位置。   有时网页论坛会设有专为新手提问的版面，如果你真的认为遇到了初学者的问题，到那去就是了，但一样别那么低声下气。   描述问题症状而非你的猜测   告诉黑客们你认为问题是怎样造成的并没什么帮助。（如果你的推断如此有效，还用向别人求助吗？），因此要确信你原原本本告诉了他们问题的症状，而不是你的解释和理论；让黑客们来推测和诊断。如果你认为陈述自己的猜测很重要，清楚地说明这只是你的猜测，并描述为什么它们不起作用。   蠢问题      我在编译内核时接连遇到 SIG11 错误， 我怀疑某条飞线搭在主板的走线上了，这种情况应该怎样检查最好？    聪明问题      我的组装电脑是 FIC-PA2007 主机板搭载 AMD K6/233 CPU（威盛 Apollo VP2 芯片组）， 256MB Corsair PC133 SDRAM 内存，在编译内核时，从开机 20 分钟以后就频频产生 SIG11 错误， 但是在头 20 分钟内从没发生过相同的问题。重新启动也没有用，但是关机一晚上就又能工作 20 分钟。 所有内存都换过了，没有效果。相关部分的标准编译记录如下…。    由于以上这点似乎让许多人觉得难以配合，这里有句话可以提醒你：所有的诊断专家都来自密苏里州。 美国国务院的官方座右铭则是：让我看看（出自国会议员 Willard D. Vandiver 在 1899 年时的讲话：我来自一个出产玉米，棉花，牛蒡和民主党人的国家，滔滔雄辩既不能说服我，也不会让我满意。我来自密苏里州，你必须让我看看。） 针对诊断者而言，这并不是一种怀疑，而只是一种真实而有用的需求，以便让他们看到的是与你看到的原始证据尽可能一致的东西，而不是你的猜测与归纳的结论。所以，大方的展示给我们看吧！   按发生时间先后列出问题症状   问题发生前的一系列操作，往往就是对找出问题最有帮助的线索。因此，你的说明里应该包含你的操作步骤，以及机器和软件的反应，直到问题发生。在命令行处理的情况下，提供一段操作记录（例如运行脚本工具所生成的），并引用相关的若干行（如 20 行）记录会非常有帮助。   如果挂掉的程序有诊断选项（如 -v 的详述开关），试着选择这些能在记录中增加调试信息的选项。记住，多不等于好。试着选取适当的调试级别以便提供有用的信息而不是让读者淹没在垃圾中。   如果你的说明很长（如超过四个段落），在开头简述问题，接下来再按时间顺序详述会有所帮助。这样黑客们在读你的记录时就知道该注意哪些内容了。   描述目标而不是过程   如果你想弄清楚如何做某事（而不是报告一个 Bug），在开头就描述你的目标，然后才陈述重现你所卡住的特定步骤。   经常寻求技术帮助的人在心中有个更高层次的目标，而他们在自以为能达到目标的特定道路上被卡住了，然后跑来问该怎么走，但没有意识到这条路本身就有问题。结果要费很大的劲才能搞定。   蠢问题      我怎样才能从某绘图程序的颜色选择器中取得十六进制的 RGB 值？    聪明问题      我正试着用替换一幅图片的色码（color table）成自己选定的色码，我现在知道的唯一方法是编辑每个色码区块（table slot）， 但却无法从某绘图程序的颜色选择器取得十六进制的 RGB 值。    第二种提问法比较聪明，你可能得到像是建议采用另一个更合适的工具的回复。   别要求使用私人电邮回复   黑客们认为问题的解决过程应该公开、透明，此过程中如果更有经验的人注意到不完整或者不当之处，最初的回复才能够、也应该被纠正。同时，作为提供帮助者可以得到一些奖励，奖励就是他的能力和学识被其他同行看到。   当你要求私下回复时，这个过程和奖励都被中止。别这样做，让回复者来决定是否私下回答 —— 如果他真这么做了，通常是因为他认为问题编写太差或者太肤浅，以至于不可能使其他人产生兴趣。   这条规则存在一条有限的例外，如果你确信提问可能会引来大量雷同的回复时，那么这个神奇的提问句会是向我发电邮，我将为论坛归纳这些回复。试着将邮件列表或新闻群组从洪水般的雷同回复中解救出来是非常有礼貌的 —— 但你必须信守诺言。   清楚明确的表达你的问题以及需求   漫无边际的提问是近乎无休无止的时间黑洞。最有可能给你有用答案的人通常也正是最忙的人（他们忙是因为要亲自完成大部分工作）。这样的人对无节制的时间黑洞相当厌恶，所以他们也倾向于厌恶那些漫无边际的提问。   如果你明确表述需要回答者做什么（如提供指点、发送一段代码、检查你的补丁、或是其他等等），就最有可能得到有用的答案。因为这会定出一个时间和精力的上限，便于回答者能集中精力来帮你。这么做很棒。   要理解专家们所处的世界，请把专业技能想像为充裕的资源，而回复的时间则是稀缺的资源。你要求他们奉献的时间越少，你越有可能从真正专业而且很忙的专家那里得到解答。   所以，界定一下你的问题，使专家花在辨识你的问题和回答所需要付出的时间减到最少，这技巧对你有用答案相当有帮助 —— 但这技巧通常和简化问题有所区别。因此，问我想更好地理解 X，可否指点一下哪有好一点说明？通常比问你能解释一下 X 吗？更好。如果你的代码不能运作，通常请别人看看哪里有问题，比要求别人替你改正要明智得多。   询问有关代码的问题时   别要求他人帮你调试有问题的代码，不提示一下应该从何入手。张贴几百行的代码，然后说一声：它不能工作会让你完全被忽略。只贴几十行代码，然后说一句：在第七行以后，我期待它显示 &lt;x&gt;，但实际出现的是 &lt;y&gt;比较有可能让你得到回应。   最有效描述程序问题的方法是提供最精简的 Bug 展示测试用例（bug-demonstrating test case）。什么是最精简的测试用例？那是问题的缩影；一小个程序片段能刚好展示出程序的异常行为，而不包含其他令人分散注意力的内容。怎么制作最精简的测试用例？如果你知道哪一行或哪一段代码会造成异常的行为，复制下来并加入足够重现这个状况的代码（例如，足以让这段代码能被编译/直译/被应用程序处理）。如果你无法将问题缩减到一个特定区块，就复制一份代码并移除不影响产生问题行为的部分。总之，测试用例越小越好（查看话不在多而在精一节）。   一般而言，要得到一段相当精简的测试用例并不太容易，但永远先尝试这样做的是种好习惯。这种方式可以帮助你了解如何自行解决这个问题 —— 而且即使你的尝试不成功，黑客们也会看到你在尝试取得答案的过程中付出了努力，这可以让他们更愿意与你合作。   如果你只是想让别人帮忙审查（Review）一下代码，在信的开头就要说出来，并且一定要提到你认为哪一部分特别需要关注以及为什么。   别把自己家庭作业的问题贴上来   黑客们很擅长分辨哪些问题是家庭作业式的问题；因为我们中的大多数都曾自己解决这类问题。同样，这些问题得由你来搞定，你会从中学到东西。你可以要求给点提示，但别要求得到完整的解决方案。   如果你怀疑自己碰到了一个家庭作业式的问题，但仍然无法解决，试试在用户群组，论坛或（最后一招）在项目的用户邮件列表或论坛中提问。尽管黑客们会看出来，但一些有经验的用户也许仍会给你一些提示。   去掉无意义的提问句   避免用无意义的话结束提问，例如有人能帮我吗？或者这有答案吗？。   首先：如果你对问题的描述不是很好，这样问更是画蛇添足。   其次：由于这样问是画蛇添足，黑客们会很厌烦你 —— 而且通常会用逻辑上正确，但毫无意义的回答来表示他们的蔑视， 例如：没错，有人能帮你或者不，没答案。   一般来说，避免用 是或否、对或错、有或没有类型的问句，除非你想得到是或否类型的回答。   即使你很急也不要在标题写紧急   这是你的问题，不是我们的。宣称紧急极有可能事与愿违：大多数黑客会直接删除无礼和自私地企图即时引起关注的问题。更严重的是，紧急这个字（或是其他企图引起关注的标题）通常会被垃圾信过滤器过滤掉 —— 你希望能看到你问题的人可能永远也看不到。   有半个例外的情况是，如果你是在一些很高调，会使黑客们兴奋的地方，也许值得这样去做。在这种情况下，如果你有时间压力，也很有礼貌地提到这点，人们也许会有兴趣回答快一点。   当然，这风险很大，因为黑客们兴奋的点多半与你的不同。譬如从 NASA 国际空间站（International Space Station）发这样的标题没有问题，但用自我感觉良好的慈善行为或政治原因发肯定不行。事实上，张贴诸如紧急：帮我救救这个毛茸茸的小海豹！肯定让你被黑客忽略或惹恼他们，即使他们认为毛茸茸的小海豹很重要。   如果你觉得这点很不可思议，最好再把这份指南剩下的内容多读几遍，直到你弄懂了再发文。   礼多人不怪，而且有时还很有帮助   彬彬有礼，多用请和谢谢您的关注，或谢谢你的关照。让大家都知道你对他们花时间免费提供帮助心存感激。   坦白说，这一点并没有比使用清晰、正确、精准且合乎语法和避免使用专用格式重要（也不能取而代之）。黑客们一般宁可读有点唐突但技术上鲜明的 Bug 报告，而不是那种有礼但含糊的报告。（如果这点让你不解，记住我们是按问题能教给我们什么来评价问题的价值的）   然而，如果你有一串的问题待解决，客气一点肯定会增加你得到有用回应的机会。   （我们注意到，自从本指南发布后，从资深黑客那里得到的唯一严重缺陷反馈，就是对预先道谢这一条。一些黑客觉得先谢了意味着事后就不用再感谢任何人的暗示。我们的建议是要么先说先谢了，然后事后再对回复者表示感谢，或者换种方式表达感激，譬如用谢谢你的关注或谢谢你的关照。）   问题解决后，加个简短的补充说明   问题解决后，向所有帮助过你的人发个说明，让他们知道问题是怎样解决的，并再一次向他们表示感谢。如果问题在新闻组或者邮件列表中引起了广泛关注，应该在那里贴一个说明比较恰当。   最理想的方式是向最初提问的话题回复此消息，并在标题中包含已修正，已解决或其它同等含义的明显标记。在人来人往的邮件列表里，一个看见讨论串问题 X和问题 X - 已解决的潜在回复者就明白不用再浪费时间了（除非他个人觉得问题 X的有趣），因此可以利用此时间去解决其它问题。   补充说明不必很长或是很深入；简单的一句你好，原来是网线出了问题！谢谢大家 – Bill比什么也不说要来的好。事实上，除非结论真的很有技术含量，否则简短可爱的小结比长篇大论更好。说明问题是怎样解决的，但大可不必将解决问题的过程复述一遍。   对于有深度的问题，张贴调试记录的摘要是有帮助的。描述问题的最终状态，说明是什么解决了问题，在此之后才指明可以避免的盲点。避免盲点的部分应放在正确的解决方案和其它总结材料之后，而不要将此信息搞成侦探推理小说。列出那些帮助过你的名字，会让你交到更多朋友。   除了有礼貌和有内涵以外，这种类型的补充也有助于他人在邮件列表/新闻群组/论坛中搜索到真正解决你问题的方案，让他们也从中受益。   至少，这种补充有助于让每位参与协助的人因问题的解决而从中得到满足感。如果你自己不是技术专家或者黑客，那就相信我们，这种感觉对于那些你向他们求助的大师或者专家而言，是非常重要的。问题悬而未决会让人灰心；黑客们渴望看到问题被解决。好人有好报，满足他们的渴望，你会在下次提问时尝到甜头。   思考一下怎样才能避免他人将来也遇到类似的问题，自问写一份文件或加个常见问题（FAQ）会不会有帮助。如果是的话就将它们发给维护者。   在黑客中，这种良好的后继行动实际上比传统的礼节更为重要，也是你如何透过善待他人而赢得声誉的方式，这是非常有价值的资产。   如何解读答案      RTFM 和 STFW：如何知道你已完全搞砸了   有一个古老而神圣的传统：如果你收到RTFM（Read The Fucking Manual）的回应，回答者认为你应该去读他妈的手册。当然，基本上他是对的，你应该去读一读。   RTFM 有一个年轻的亲戚。如果你收到STFW（Search The Fucking Web）的回应，回答者认为你应该到他妈的网上搜索。那人多半也是对的，去搜索一下吧。（更温和一点的说法是 Google 是你的朋友！）   在论坛，你也可能被要求去爬爬论坛的旧文。事实上，有人甚至可能热心地为你提供以前解决此问题的讨论串。但不要依赖这种关照，提问前应该先搜索一下旧文。   通常，用这两句之一回答你的人会给你一份包含你需要内容的手册或者一个网址，而且他们打这些字的时候也正在读着。这些答复意味着回答者认为      你需要的信息非常容易获得；   你自己去搜索这些信息比灌给你，能让你学到更多。   你不应该因此不爽；依照黑客的标准，他已经表示了对你一定程度的关注，而没有对你的要求视而不见。你应该对他祖母般的慈祥表示感谢。   如果还是搞不懂   如果你看不懂回应，别立刻要求对方解释。像你以前试着自己解决问题时那样（利用手册，FAQ，网络，身边的高手），先试着去搞懂他的回应。如果你真的需要对方解释，记得表现出你已经从中学到了点什么。   比方说，如果我回答你：看来似乎是 zentry 卡住了；你应该先清除它。，然后，这是一个很糟的后续问题回应：zentry 是什么？ 好的问法应该是这样：哦~~~我看过说明了但是只有 -z 和 -p 两个参数中提到了 zentries，而且还都没有清楚的解释如何清除它。你是指这两个中的哪一个吗？还是我看漏了什么？   处理无礼的回应   很多黑客圈子中看似无礼的行为并不是存心冒犯。相反，它是直截了当，一针见血式的交流风格，这种风格更注重解决问题，而不是使人感觉舒服而却模模糊糊。   如果你觉得被冒犯了，试着平静地反应。如果有人真的做了出格的事，邮件列表、新闻群组或论坛中的前辈多半会招呼他。如果这没有发生而你却发火了，那么你发火对象的言语可能在黑客社区中看起来是正常的，而你将被视为有错的一方，这将伤害到你获取信息或帮助的机会。   另一方面，你偶尔真的会碰到无礼和无聊的言行。与上述相反，对真正的冒犯者狠狠地打击，用犀利的语言将其驳得体无完肤都是可以接受的。然而，在行事之前一定要非常非常的有根据。纠正无礼的言论与开始一场毫无意义的口水战仅一线之隔，黑客们自己莽撞地越线的情况并不鲜见。如果你是新手或外人，避开这种莽撞的机会并不高。如果你想得到的是信息而不是消磨时光，这时最好不要把手放在键盘上以免冒险。   （有些人断言很多黑客都有轻度的自闭症或亚斯伯格综合症，缺少用于润滑人类社会正常交往所需的神经。这既可能是真也可能是假的。如果你自己不是黑客，兴许你认为我们脑袋有问题还能帮助你应付我们的古怪行为。只管这么干好了，我们不在乎。我们喜欢我们现在这个样子，并且通常对病患标记都有站得住脚的怀疑。）   Jeff Bigler 的观察总结和这个相关也值得一读 (tact filters)。   在下一节，我们会谈到另一个问题，当你行为不当时所会受到的冒犯。   如何避免扮演失败者   在黑客社区的论坛中，你以本指南所描述的或类似的方式，可能会有那么几次搞砸了。而你会在公开场合中被告知你是如何搞砸的，也许攻击的言语中还会带点夹七夹八的颜色。   这种事发生以后，你能做的最糟糕的事莫过于哀嚎你的遭遇、宣称被口头攻击、要求道歉、高声尖叫、憋闷气、威胁诉诸法律、向其雇主报怨、不去关马桶盖等等。相反地，你该这么做：   熬过去，这很正常。事实上，它是有益健康且合理的。   社区的标准不会自行维持，它们是通过参与者积极而公开地执行来维持的。不要哭嚎所有的批评都应该通过私下的邮件传送，它不是这样运作的。当有人评论你的一个说法有误或者提出不同看法时，坚持声称受到个人攻击也毫无益处，这些都是失败者的态度。   也有其它的黑客论坛，受过高礼节要求的误导，禁止参与者张贴任何对别人帖子挑毛病的消息，并声称如果你不想帮助用户就闭嘴。 结果造成有想法的参与者纷纷离开，这么做只会使它们沦为毫无意义的唠叨与无用的技术论坛。   夸张的讲法是：你要的是“友善”（以上述方式）还是有用？两个里面挑一个。   记着：当黑客说你搞砸了，并且（无论多么刺耳）告诉你别再这样做时，他正在为关心你和他的社区而行动。对他而言，不理你并将你从他的生活中滤掉更简单。如果你无法做到感谢，至少要表现得有点尊严，别大声哀嚎，也别因为自己是个有戏剧性超级敏感的灵魂和自以为有资格的新来者，就指望别人像对待脆弱的洋娃娃那样对你。   有时候，即使你没有搞砸（或者只是在他的想像中你搞砸了），有些人也会无缘无故地攻击你本人。在这种情况下，抱怨倒是真的会把问题搞砸。   这些来找麻烦的人要么是毫无办法但自以为是专家的不中用家伙，要么就是测试你是否真会搞砸的心理专家。其它读者要么不理睬，要么用自己的方式对付他们。这些来找麻烦的人在给他们自己找麻烦，这点你不用操心。   也别让自己卷入口水战，最好不要理睬大多数的口水战 —— 当然，这是在你检验它们只是口水战，并且未指出你有搞砸的地方，同时也没有巧妙地将问题真正的答案藏于其后（这也是有可能的）。   不该问的问题   以下是几个经典蠢问题，以及黑客没回答时心中所想的：   问题：我能在哪找到 X 程序或 X 资源？   问题：我怎样用 X 做 Y？   问题：如何设定我的 shell 提示？   问题：我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 文件转换为 TeX 格式吗？   问题：我的程序/设定/SQL 语句没有用   问题：我的 Windows 电脑有问题，你能帮我吗？   问题：我的程序不会动了，我认为系统工具 X 有问题   问题：我在安装 Linux（或者 X ）时有问题，你能帮我吗？   问题：我怎么才能破解 root 帐号/窃取 OP 特权/读别人的邮件呢？           问题：我能在哪找到 X 程序或 X 资源？    回答：就在我找到它的地方啊，白痴 —— 搜索引擎的那一头。天哪！难道还有人不会用 Google 吗？         问题：我怎样用 X 做 Y？    回答：如果你想解决的是 Y ，提问时别给出可能并不恰当的方法。这种问题说明提问者不但对 X 完全无知，也对 Y 要解决的问题糊涂，还被特定形势禁锢了思维。最好忽略这种人，等他们把问题搞清楚了再说。         问题：如何设定我的 shell 提示？？    回答：如果你有足够的智慧提这个问题，你也该有足够的智慧去 RTFM，然后自己去找出来。         问题：我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 文件转换为 TeX 格式吗？    回答：试试看就知道了。如果你试过，你就知道了答案，就不用浪费我的时间了。         问题：我的{程序/设定/SQL 语句}没有用    回答：这不算是问题吧，我对要我问你二十个问题才找得出你真正问题的问题没兴趣 —— 我有更有意思的事要做呢。在看到这类问题的时候，我的反应通常不外如下三种      你还有什么要补充的吗？   真糟糕，希望你能搞定。   这关我屁事？         问题：我的 Windows 电脑有问题，你能帮我吗？    回答：能啊，扔掉微软的垃圾，换个像 Linux 或 BSD 的开源操作系统吧。   注意：如果程序有官方版 Windows 或者与 Windows 有互动（如 Samba），你可以问与 Windows 相关的问题，只是别对问题是由 Windows 操作系统而不是程序本身造成的回复感到惊讶， 因为 Windows 一般来说实在太烂，这种说法通常都是对的。         问题：我的程序不会动了，我认为系统工具 X 有问题    回答：你完全有可能是第一个注意到被成千上万用户反复使用的系统调用与函数库文件有明显缺陷的人，更有可能的是你完全没有根据。不同凡响的说法需要不同凡响的证据，当你这样声称时，你必须有清楚而详尽的缺陷说明文件作后盾。         问题：我在安装 Linux（或者 X ）时有问题，你能帮我吗？    回答：不能，我只有亲自在你的电脑上动手才能找到毛病。还是去找你当地的 Linux 使用群组者寻求实际的指导吧（你能在这儿找到用户群组的清单）。   注意：如果安装问题与某 Linux 的发行版有关，在它的邮件列表、论坛或本地用户群组中提问也许是恰当的。此时，应描述问题的准确细节。在此之前，先用 Linux 和所有被怀疑的硬件作关键词仔细搜索。         问题：我怎么才能破解 root 帐号/窃取 OP 特权/读别人的邮件呢？    回答：想要这样做，说明了你是个卑鄙小人；想找个黑客帮你，说明你是个白痴！   好问题与蠢问题   最后，我将透过举一些例子，来说明怎样聪明的提问；同一个问题的两种问法被放在一起，一种是愚蠢的，另一种才是明智的。   蠢问题：      我可以在哪儿找到关于 Foonly Flurbamatic 的资料？    这种问法无非想得到 STFW 这样的回答。   聪明问题：      我用 Google 搜索过 “Foonly Flurbamatic 2600”，但是没找到有用的结果。谁知道上哪儿去找对这种设备编程的资料？    这个问题已经 STFW 过了，看起来他真的遇到了麻烦。   蠢问题：      我从 foo 项目找来的源码没法编译。它怎么这么烂？    他觉得都是别人的错，这个傲慢自大的提问者。   聪明问题：      foo 项目代码在 Nulix 6.2 版下无法编译通过。我读过了 FAQ，但里面没有提到跟 Nulix 有关的问题。这是我编译过程的记录，我有什么做的不对的地方吗？    提问者已经指明了环境，也读过了 FAQ，还列出了错误，并且他没有把问题的责任推到别人头上，他的问题值得被关注。   蠢问题：      我的主机板有问题了，谁来帮我？    某黑客对这类问题的回答通常是：好的，还要帮你拍拍背和换尿布吗？，然后按下删除键。   聪明问题：      我在 S2464 主机板上试过了 X 、 Y 和 Z ，但没什么作用，我又试了 A 、 B 和 C 。请注意当我尝试 C 时的奇怪现象。显然 florbish 正在 grommicking，但结果出人意料。通常在 Athlon MP 主机板上引起 grommicking 的原因是什么？有谁知道接下来我该做些什么测试才能找出问题？    这个家伙，从另一个角度来看，值得去回答他。他表现出了解决问题的能力，而不是坐等天上掉答案。   在最后一个问题中，注意告诉我答案和给我启示，指出我还应该做什么诊断工作之间微妙而又重要的区别。   事实上，后一个问题源自于 2001 年 8 月在 Linux 内核邮件列表（lkml）上的一个真实的提问。我（Eric）就是那个提出问题的人。我在 Tyan S2464 主板上观察到了这种无法解释的锁定现象，列表成员们提供了解决这一问题的重要信息。   通过我的提问方法，我给了别人可以咀嚼玩味的东西；我设法让人们很容易参与并且被吸引进来。我显示了自己具备和他们同等的能力，并邀请他们与我共同探讨。通过告诉他们我所走过的弯路，以避免他们再浪费时间，我也表明了对他们宝贵时间的尊重。   事后，当我向每个人表示感谢，并且赞赏这次良好的讨论经历的时候，一个 Linux 内核邮件列表的成员表示，他觉得我的问题得到解决并非由于我是这个列表中的名人，而是因为我用了正确的方式来提问。   黑客从某种角度来说是拥有丰富知识但缺乏人情味的家伙；我相信他是对的，如果我像个乞讨者那样提问，不论我是谁，一定会惹恼某些人或者被他们忽视。他建议我记下这件事，这直接导致了本指南的出现。   如果得不到回答   如果仍得不到回答，请不要以为我们觉得无法帮助你。有时只是看到你问题的人不知道答案罢了。没有回应不代表你被忽视，虽然不可否认这种差别很难区分。   总的来说，简单的重复张贴问题是个很糟的点子。这将被视为无意义的喧闹。有点耐心，知道你问题答案的人可能生活在不同的时区，可能正在睡觉，也有可能你的问题一开始就没有组织好。   你可以通过其他渠道获得帮助，这些渠道通常更适合初学者的需要。   有许多网上的以及本地的用户群组，由热情的软件爱好者（即使他们可能从没亲自写过任何软件）组成。通常人们组建这样的团体来互相帮助并帮助新手。   另外，你可以向很多商业公司寻求帮助，不论公司大还是小。别为要付费才能获得帮助而感到沮丧！毕竟，假使你的汽车发动机汽缸密封圈爆掉了 —— 完全可能如此 —— 你还得把它送到修车铺，并且为维修付费。就算软件没花费你一分钱，你也不能强求技术支持总是免费的。   对像是 Linux 这种大众化的软件，每个开发者至少会对应到上万名用户。根本不可能由一个人来处理来自上万名用户的求助电话。要知道，即使你要为这些协助付费，和你所购买的同类软件相比，你所付出的也是微不足道的（通常封闭源代码软件的技术支持费用比开源软件的要高得多，且内容也没那么丰富）。   如何更好地回答问题   态度和善一点。 问题带来的压力常使人显得无礼或愚蠢，其实并不是这样。   对初犯者私下回复。 对那些坦诚犯错之人没有必要当众羞辱，一个真正的新手也许连怎么搜索或在哪找常见问题都不知道。   如果你不确定，一定要说出来！ 一个听起来权威的错误回复比没有还要糟，别因为听起来像个专家很好玩，就给别人乱指路。要谦虚和诚实，给提问者与同行都树个好榜样。   如果帮不了忙，也别妨碍他。 不要在实际步骤上开玩笑，那样也许会毁了提问者的设置 —— 有些可怜的呆瓜会把它当成真的指令。   试探性的反问以引出更多的细节。 如果你做得好，提问者可以学到点东西 —— 你也可以。试试将蠢问题转变成好问题，别忘了我们都曾是新手。   尽管对那些懒虫抱怨一声 RTFM 是正当的，但能给出文档的链接（即使只是建议个 Google 搜索关键词）会更好。   如果你决定回答，就请给出好的答案。 当别人正在用错误的工具或方法时别建议笨拙的权宜之计（workaround），应推荐更好的工具，重新界定问题。   正面地回答问题！ 如果这个提问者已经很深入的研究而且也表明已经试过 X 、 Y 、 Z 、 A 、 B 、 C 但没得到结果，回答 试试看 A 或是 B 或者 试试 X 、 Y 、 Z 、 A 、 B 、 C 并附上一个链接一点用都没有。   帮助你的社区从问题中学习。 当回复一个好问题时，问问自己如何修改相关文件或常见问题文件以免再次解答同样的问题？，接着再向文件维护者发一份补丁。   如果你在研究一番后才作出了回答，展现你的技巧而不是直接端出结果。毕竟授人以鱼不如授人以渔。   相关资源   如果你需要个人电脑、Unix 系统和网络如何运作的基础知识，参阅 Unix 系统和网络基本原理。   当你发布软件或补丁时，试着按软件发布实践操作。   鸣谢   Evelyn Mitchel 贡献了一些愚蠢问题例子并启发了编写如何更好地回答问题这一节， Mikhail Ramendik 贡献了一些特别有价值的建议和改进。  ","categories": [],
"tags": [],
"url": "/wiki/doc/smart-questions/",
"teaser": null
},{
"title": "校园网常见问题与快速自查指南",
"excerpt":"本文由 Linux 用户协会维护，部分内容尚不完整。如果有疑问，欢迎联系我们讨论或反馈。   网络通   网络通是什么？   如果你通过有线网络（如宿舍和实验室墙上的网口）或 ustcnet 无线网络接入校园网，并且你想要通过 IPv4 访问校外资源，那么你需要通过网络通进行认证。   以下使用场景无需网络通：      访问校内资源（如教务系统、各类学校门户网站、USTC 开源软件镜像站等）            大部分校内资源使用的域名都以 .ustc.edu.cn 结尾；类似地，使用 .ustc.edu.cn 域名的资源也大多数是校内资源。       对应校园网的 IP 地址范围可以参考这里。           通过 IPv6 访问校内和校外资源（IPv6 的出校权限是完全开放的）   连接 eduroam（注意：eduroam 需要一个开启了出校权限的网络通账号，但可以没有国际权限）   特别地，以下情况与网络通无关：      连接有线网络或无线网络后无法获得 IP 地址，或者仅有 169.254 开头的 IP 地址：请参考本文后面的章节排查问题。   如果你还没有申请网络通，请前往这里开通服务。   连接无线热点/有线网络后无法打开网络通页面           是否分配到了正确的 IP 地址？       如果发现你的 IP 地址开头为 169.254，说明你没有正确通过 DHCP 服务获取 IP 地址，请等待一段时间重新尝试或者使用其他方式连接。如果还是连不上，则可能需要联系网络信息中心解决。       有条件的同学可以考虑抓包看流量是否有异常，例如是否有奇怪的 DHCP 或 ARP 流量等。            DNS 设置是否正确？       在网络通未登录的情况下，机器无法访问校外网络。因此，如果你将 DNS 设置为了校外的 DNS，则系统在解析 wlt.ustc.edu.cn 域名时就会出错。       解决方法任选其一：              删除自定义的 DNS 设置；       将 DNS 设置为 202.38.64.1；       直接访问 202.38.64.59；       不推荐的做法：在 hosts 文件中将 wlt.ustc.edu.cn 域名绑定到 202.38.64.59。           （对于新电脑）一些现代浏览器会自动打开「启用基于 HTTPS 的 DNS」（DoH）功能，和上面的原因一样，会造成网络通域名解析出错，且默认提供商（Cloudflare）在大陆体验不佳，建议关闭该功能。各浏览器设置路径如下：              Chrome：设置 - 安全 - 使用安全 DNS       Firefox：常规 - 网络设置 - 启用基于 HTTPS 的 DNS       Edge：隐私、搜索和服务 - 安全性 - 使用安全的 DNS 指定如何查找网站的网络地址           连接网络通 1 出口（教育网出口）后发现有奇怪的 IP 连接自己电脑的端口   教育网出口无 NAT，直接获得公网 IP。该出口仅会阻止一些敏感端口被校外访问（如 80, 443, 3389 等）。使用此出口时，请避免将不希望校外访问的服务 bind 到 0.0.0.0。部分软件配置中的「允许局域网计算机访问」在此情况下实际上是允许互联网所有计算机访问，这通常是不符合预期的。   自 2021 年 11 月起，学校网络信息中心对校外网络访问校内 IP 策略做了调整，校外 IP 不能对宿舍网络、无线网络 ustcnet 及 eduroam 的 IP 发起主动的 TCP 连接。   如何连接 eduroam   https://ustcnet.ustc.edu.cn/2016/0405/c33584a592061/page.htm   科大邮箱   使用 Thunderbird 连接科大邮箱   由于 Thunderbird 某次版本升级后默认配置与邮箱服务器不兼容，因此除常规配置外，还需要修改以下配置：Edit -&gt; Settings，在 “General” 中拖到最下面选择 “Config Editor…“。在新弹出的高级配置的标签中输入 utf8，将 mail.server.default.allow_utf8_accept 的值从 true 改成 false。这个设置不会影响其他邮箱的使用。   如何咨询/反馈问题？   可以向网络信息中心 (https://ustcnet.ustc.edu.cn/) 邮件反馈问题，或者在 BBS 的「网络信息中心」板块反馈，或者在报修系统 (https://baoxiu.ustc.edu.cn/) 报修。   （尽管 BBS 已经成为时代的眼泪，但是在向校方部门反馈问题的方面还是有效的）   在反馈时务必注意：      请先查看 BBS 网络信息中心板块，确认是否有故障公告，或者其他人报告了你的问题。        尽可能提供详细的信息，例如：              出现问题时的症状是什么？如果是偶发的问题，出现的频率如何？                    避免使用类似于「网络炸了」等表意不明而没有信息量的描述。                       你所使用的设备情况、连接校园网的位置与连接方式、你的同学是否出现了你遇到的情况。       如果有能力，请提供技术信息，例如系统的网络设置情况、抓包情况等。           充足的信息可以同时节省你和帮你解决问题的人的时间，这很重要。如果只是说「连不上网怎么办啊」，那么想帮你解决问题的人会感到很困惑的。   参考   若上述指南并没有解决你的问题，可以查看网络信息中心用户服务部 FAQ 寻求帮助。  ","categories": [],
"tags": [],
"url": "/wiki/doc/ustcnet-faq/",
"teaser": null
},{
"title": "引导技术浅析",
"excerpt":"计算机从来不是聪明的“电脑”，它只是在硬件设计者和程序员的设计下按部就班地运行。   当计算机启动的时候它就需要这样的指示：“我现在该干嘛”。它不会主动地启动一个用户想要的系统，而是需要有个家伙，我们称之为 loader 来告诉它完成这件事情，这个过程就叫 boot（引导）。   计算机需要从存有程序数据的媒介里获取这个 loader，这个时候它开始访问 CMOS 芯片里的指定的媒介，从中寻找 loader。对于不同的媒介，可以在各自的某段地址里找到最初的引导代码，这段地址就称为引导区。引导区的代码载入之后，计算机就有了文件访问等更强大的功能，便开始进行下一步的引导。   通常引导区的引导代码里指定了下一步的引导文件的位置和名称，于是计算机便据此载入引导文件，引导文件载入后的计算机更加强大，能够接收用户输入，并能交互地回显用户操作。   接下来计算机开始寻找操作系统的内核，开始正式的系统启动过程。这时就不在我们讨论范围内了。   载入了 loader 的计算机通常是如上所说地引导操作系统内核，然而也可以再更换性地载入另一个 loader，将计算机的上下文环境变为另一个 loader。很多时候我们会需要这种强大的功能满足我们的需求。   grub，全称为 GRand Unified Bootloader，就是一个功能十分强大的 loader，它提供了多种引导方式，同时有很好的交互界面，能够方便设置各种引导环境和参数。   GRUB4DOS 快速入门   为什么是 grub4dos   grub4dos 可以看作是 grub 的衍生版本，又从 syslinux 里吸取了一些东西。 grub4dos 的优势大致如下：           精简，非常适合 U 盘使用，其程序文件只有一个，外加一个用于配置的 menu.lst；            引导扇区里的引导代码对主程序的寻找是自动的，也就是说当你安装好引导扇区里的引导代码后可以任意改变引导程序的位置（只要还是在根目录）；            支持 ntfs，且与 Windows 的 loader 可以完美地互相引导。鉴于现行的 PC 基本上都是 Windows PC，经常有需要用的地方；            方便的使用光盘/软盘镜像            国内研究较多，各种系统论坛都有相关的讨论和文档。       grub4dos 也有一些缺点：           可扩充性差，只支持固定的几种文件系统：fat32, ntfs, ext2/ext3/ext4；            兼容性下降，某些机型可能引导不起来。这也是功能增加的必然结果。       安装 grub4dos   可以从 grub4dos 的主页http://download.gna.org/grub4dos/获取 grub4dos，解压后获取后面操作需要的文件。   grub4dos 仅由两部分组成：处于任意一个可访问分区根目录的 grldr 主程序文件，用来引导扇区的引导代码。另外还有一个可选的配置文件 menu.lst。   首先是安装引导代码：      Windows：可使用 grubinst_gui，可从http://download.gna.org/grubutil/下载。              Linux:       bootlace.com /dev/sdx（sdx 为你的盘符）       接下来就是拷贝文件了，大家都会，一切搞定，就这么简单。   如果你用的是自己的主机，已经装了别的系统，有自己的 loader，你也可以用系统的 loader 来引导 grub4dos。这一步取代了引导代码的安装。           grub 引导            grub2 引导            XP（ntldr）引导            Windows 7（bootmgr）引导       使用 grub4dos   学习 grub4dos 最好的方法就是看人家的 menu.lst，menu.lst 里的每条 title 实际上就是一系列的 grub 引导命令。   下面贴一下我移动硬盘里的 grub4dos 的 menu.lst：   # GRUB boot loader configuration. #  # By default, boot the first entry. default 0  # Boot automatically after 20 secs. timeout 20  # Change the colors. color yellow/brown light-green/black  title WinPE root\t\t(hd0,0) chainloader /ldrxpe  title Win7 PE root\t\t(hd0,0) chainloader /bootmgr  # map软盘的内存镜像 title 1KEY GHOST root\t\t(hd0,0) map --mem /ghos/ghost.img (fd0) map --hook rootnoverify (fd0) chainloader (fd0)+1  # 沿用syslinux的方式 title 1KEY GHOST(2nd way) root\t\t(hd0,0) kernel /ghos/memdisk c=11520 h=4 s=36 floppy initrd /ghos/ghost.img  # 只有kernel和initrd和Live系统 title SliTaz GNU/Linux kernel /slitaz/bzimage root=/dev/null vga=771 autologin initrd /slitaz/rootfs.gz  # 会自动挂载别的文件作为根文件系统镜像，Ubuntu还可以指定路径 title Try Ubuntu without installing kernel /ubuntu/vmlinuz boot=casper iso-scan/filename=/ubuntu/ubuntu-10.04.1-desktop-i386.iso ro quiet splash initrd /ubuntu/initrd.lz  # 加载其他menu文件 title BackTrack Linux root\t\t(hd0,2) configurefile /boot/grub/menu.lst   title Boot Local System: root  title Boot From 1st Harddisk Patition map             (hd0) (hd1) map             (hd1) (hd0) rootnoverify    (hd1,0) makeactive chainloader     +1  title Boot XP/2000/2003 map             (hd0) (hd1) map             (hd1) (hd0) find --set-root /ntldr chainloader /ntldr  title Boot Vista/WIN7 map             (hd0) (hd1) map             (hd1) (hd0) find --set-root /bootmgr makeactive chainloader     +1  title Boot bootmgr map             (hd0) (hd1) map             (hd1) (hd0) find --set-root /bootmgr chainloader /bootmgr  ","categories": [],
"tags": [],
"url": "/wiki/greenwarm/",
"teaser": null
},{
"title": "Linux_summary",
"excerpt":"— greenwarm 2010/11/13 14:30   对 GNU 和 Linux 的一些理解   题记 —— Linux 是一份 UNIX 兼容的内核源码   最初计算机都是有重要的工程计算任务的昂贵器械，同时其运算能力也十分有限，上层开发也比较麻烦。于是就有了 UNIX，UNIX 可以看成是计算机硬件上的 Lua，有精简的设计，却同时满足个性化的、复杂的任务处理需求。   后来发生了一些奇妙的事情，作为辅助计算机工作的 UNIX 系统本身开始变得收费和闭源，PC/个人电脑的概念开始出现时，这时出现了两种力量，一种是想将开源的方式继续传承下去，一种是想在廉价的 PC 上使用强大的 UNIX，于是就分别有了 GNU 和 Linux。这时，GNU 的发起人发现了 Linux 的优越性，Linus 本人也是开源爱好者（open source is good），于是二者合而为一，成为了 GNU/Linux。Linux 继承了 UNIX 的一系列优点，却也保留了 UNIX 的传统的设计习惯，如适合分布式架构的图形系统构架，然而对于那些渴望拥有自己 UNIX 设备的人来说，能在自己的 PC 上运行 Linux 无疑是件非常快乐的事。这时的 Linux 可以看成是 free UNIX。   再之后，以用户友好和多媒体应用为基本理念的 PC 出现了，其中包括著名的 Microsoft 和 Apple。一方面 Linux 被大量优秀的工作提升性能，成为了重要的服务器系统，另一方面 Linux 的一帮 geeker 们开始建立 Linux 内核上的以 GNU 软件搭建的图形系统，这时就有著名的 GNOME 和 KDE。   再后来，Microsoft 成为了帝国，同时网络应用在 PC 应用中迅速崛起，很多人开始注意到了 GNU/Linux 可以作为网络终端的其他选择。于是开始有了 Ubuntu。由于 GNU/Linux 良好的可定制性，及大量艺术工作者的加入，使得 Linux 十分养眼，加之 Ubuntu 之流的大力宣传。Linux 开始在桌面领域流行起来，然而由于一些历史的原因，GNU/Linux 的很多设计与桌面应用格格不入，这是一个戴着脚镣跳舞的时代。   再后来，最大的互联网公司 Google 发现未来的应用将安放在统一开放的“云平台”上，终端机的设计可以尽可能简化，终端机的类型也可以多样化，其主要作品有 Android 和 Chrome OS。于是 Linux 开始进入云时代。  ","categories": [],
"tags": [],
"url": "/wiki/greenwarm/linux_summary/",
"teaser": null
},{
"title": "Live Linux 发行版",
"excerpt":"简介   Live 模式的 Linux 在维护、安装、体验等方面有很大的优势，其中有一部分发行版本身更是就以 Live 模式发行的。吾生也晚，很多早期的 live 版本未能见证其壮大、鼎盛。   下面只介绍一些我见过的不错的 live Linux 发行版   Slitaz   非常小巧，30M，同时拥有完善的图形界面和图形程序。同时它也是十分易于定制的   Tiny Core Linux   更加小巧，分有 GUI 和无 GUI 的两个版本，有 GUI 的用的是 flwm，一个极度精炼的 wm。   关键是官网的定制教程非常详细，作者也设计了 bootlocal.sh 等一系列强大的定制框架。   Parted Magic   非常笨重的维护专用，但是依然具有良好的可定制性   Puppy Linux   专为 USB 设计的 live 发行版，预装的软件为现今的多数玩家所不屑，但是 USB 保存机制确是非常强大。   然而似乎没有直接定制镜像的教程。   Debian Linux   有一个定制工具和详细的教程。  ","categories": [],
"tags": [],
"url": "/wiki/greenwarm/livedist/",
"teaser": null
},{
"title": "Linux 的多媒体支持",
"excerpt":"平时爱折腾多媒体方面的东西，对多媒体多少也有一点了解，下面分享一些 Linux 多媒体应用的见解，不足之处欢迎大家指正。   本文的组织如下：前面是对整体情况的一些介绍，后面就是具体的应用了。   多媒体文件结构介绍   音视频流   音视频流是多媒体文件的核心数据。   文件容器   音视频流封装在文件里的方式。   编码   音视频流如果以原始编码的方式存储，将需占用巨大的空间，为此需要编码以达到压缩的目的。   Linux 的多媒体框架   GStreamer   成熟，LGPL，因而被广泛使用。可以使用 gstreamer-ffmpeg，还有 gstreamer-pitfdll 来使用 Windows 的 Direct Show 滤镜（win32codecs）。GNOME 下有著名的前端 Totem。   Xine   另一个多媒体框架，GPL。曾经的亮点是可以 wrapper Windows 的 DirectShow 滤镜（win32codecs）。   Mplayer/Mencoder   完整的多媒体平台。Mplayer 是一个播放器，Mencoder 是一个非常有名的转码器，Windows 下很多转码工具其实都是它的前端。因为 Mplayer 主要是作为一个播放器，所以其对影音源的读取能力很强，包括各种 DVD 和蓝光 DVD。通常，即使你使用 ffmpeg 制作 DVDRip，也需要使用 Mplayer 来先将影音流 dump 出来。   VLC   完整统一的多媒体平台。与 Mplayer 一样同时支持编解码和播放，同时对流媒体支持非常好，甚至用来在线播放 ftp 里的电影都非常稳定，可以作为流媒体服务器。 VLC 提供了一个完整的框架，但是由于年纪轻，文档少，一些功能还有不稳定的因素，因此现在还不是最完美的方案，但我们有理由相信，也许将来 VLC 将成为主流的跨平台播放器。   XMMS2   精炼的音频播放框架。命令行参数十分友好，而且是以后台 daemon 的方式运行，因此是个非常好的命令行音乐播放器。   FFmpeg   通用的转码平台，大牛 Fabrice Bellard 发起的项目，libavcodec 就是其中最重要的一个组件，实际上上边很多播放器强大的解码能力都是由此项目提供的。 ffmpeg 可以支持 copy，可以用来从影片里提取声音，或者切割多媒体文件。由于它是作为一个转码平台，能够输出许多容器格式，因此在提取和切割方面十分强大。   HandBrake   针对视频收藏分享的转码平台，能够使用 x264 和 xvid 两种编码器，并最后封装成强大的 mkv 格式。各平台下都有相应的版本；GUI 和 CLI 接口十分友好，参数设置方便，且可以从 GUI 生成命令行参数。   Linux 的编解码器   神级的解码器 libavcodec   FFmpeg 中最重要的部分，对 i386 和 arm 指令集优化极高，遗憾地是现在对多核的支持还比较早期。   昔日王者的编码器 xvid   当年 DVD Rip 的事实标准格式。据说是 MPEG4 标准的一个实现，很多便携 MP4 都支持这种格式（通常是用 avi 封装）。   前沿编码器 x264   h264 编码器的一个实现，现在几乎所有的高清电影都用这种格式和该编码器编码，将来应该会更加流行；普清视频也有用这种编码器编码，通常称为 half cd，以提供较好的压缩率。 而且 h264 的软硬件解码已十分完善，很多显卡也支持 h264 硬件解码，同时也有可以接受的软件解码库。所以无论从压缩质量还是兼容性来说，都可以使用它来编码你的收藏视频。 ffmpeg 和 mencoder 都有 x264 支持，只要在编译时开启了相应选项，就能直接在其中方便地使用 x264。   解流与混流   mkvtoolnix   MKV 的推动者，最完美的 MKV 解决方案。可以从 GUI 生成命令行参数。   用 Mplayer 看影片   Mplayer 非常强大，不仅对 ffmpeg 的 libavcodec 支持非常好，还能调用各种外部的解码库；缺点是没有好用的 GUI 前端，Gnome Mplayer 还不错，但是还是有些不足的细小地方，但是 Mplayer 的 CLI 是非常强大的。下面介绍~/.mplayer/config 文件的配置。   顺便再提一个很 shit 的问题：如果你用的是 A 卡+fglrx 的驱动，你需要使用 gl 模式的输出，原因如下：   Catalyst’s Xv implementation is broken (visual glitches, no vsync, wrong colors.) Xv with Catalyst is supposed to only have correct colors when you connect your card to a TV   无语了，不得不承认 M$ PC 机本来就不是为 Linux 设计的，在 M$ PC 机诞生之初，在 M$ PC 里装 Linux 是非法的。就好像现在刷路由器和手机一样，只不过现在只是保修没了而已。   设置编解码器和输出设备   vfm=\"ffmpeg\" afm=\"ffmpeg\" vo=xv ao=alsa   设置字幕   fontconfig=yes font='WenQuanYi Micro Hei' # ass-hinting=0 # ass-styles= sub-fuzziness=1 slang=Chinese,chs,zh subfont-text-scale=2 subfont-osd-scale=2 subpos=95 subcp='enca:zh:cp936'   关闭屏幕保护   heartbeat-cmd=\"gnome-screensaver-command -p\"   用 ffmpeg 录屏   ffmpeg -f x11grab -q 2 -r 15   用 HandBrake 转码   HandBrake 本来主要是针对 DVD 收藏的，但由于其使用的解码前端是 libavcodec，而现在 libavcodec 几乎已经支持所有格式，所以 HandBrake 已经可以作为一个通用的转码工具，输出编码是非常适合收藏的 h264 或 xvid。我相机拍下来的影像都是用它来转码的。   HandBrake 的操作是图形界面的，与普通的转码软件差不多，很容易适应，这里就不做赘述了。  ","categories": [],
"tags": [],
"url": "/wiki/greenwarm/multimedia/",
"teaser": null
},{
"title": "认识 Linux 远程桌面控制",
"excerpt":"X window 比 MS windows 先进的地方是, X window 是个基于网络的的图形视窗系统, 本身就具有远程控制的强大功能. 用户在远程系统上登录执行 X 应用程序, 并将 Xclients 执行的结果传回本地主机. 这就是我下面要介绍的 Remote X.   这里我要说的不是 telnet, rsh 之类的远程控制工具, 而是指远程控制桌面应用.   X window 比 MS windows 先进的地方是, X window 是个基于网络的的图形视窗系统, 本身就具有远程控制的强大功能. 用户在远程系统上登录执行 X 应用程序, 并将 Xclients 执行的结果传回本地主机. 这就是我下面要介绍的 Remote X   一、Remote X   假设本地主机 ip 为 172.16.1.1, 远程的主机 ip 为 172.16.1.2   第一步, 在本地主机上的任意一个 xterm 中执行 xhost, 用来允许远程的其它主机可以和本地主机的 X server 联网:   　　xhost + 172.16.1.2   如果不指定任何 ip 地址, 则表示权限完全放开, 这会带来安全问题, 要小心!   第二步, 确认本地主机的 xfs 是运行的. 用 ps 检查一下进程.   第三步, 从本地主机(172.16.1.1)上通过网络登录到远程主机 172.16.1.2 上, 你用 telnet, ssh, rsh 都可以. 设置 DISPLAY 变量.   　　export DISPLAY=172.16.1.1:0   第四步, 现在可以使用远程主机上的 X 应用程序了.   这么样, 很方便吧, 但是你还不能掌控整个桌面环境, 这个工作就交给 vnc 吧! Remote X 在局域网上运行效果很不错, 普通的电话拨号就不用试了, 速度太慢了。   二、vnc   我相信有不少人在 windows 环境用过 pcanywhere, 但你想不想用一个免费的, 可以在 linux, win9x/nt 上都可以使用的 pcanywhere, 这就是 vnc.   vnc 就是 vitual network computing 的缩写, 它支持许多操作平台, 甚至可在浏览器中操作.   我主要介绍 vncviewer 的用法, 以及用 linux 远程控制 linux 或 nt.   vnc client 通过架构在 tcp/ip 上的 vnc 协议与 vnc server 沟通, 通过认证后, 把 X server 的桌面环境, 输入设备, 和 X 资源交给 vncserver 掌控, vnc server 将桌面环境通过 vnc 协议送给 vnc client 端. 让 vnc client 来操纵 vnc server 桌面环境和输入设备.   首先下载到 vnc 的 linux 版本和 windows 版本.   当前的 linux 版本是 vnc-3.3.3r1 x86 linux_2.0.tgz   当前的 windows 版本是 vnc-3.3.3r7 x86 win32.zip   1. 安装 linux 版的 vnc   (1)安装   　　tar zxvf vnc-3.3.3r1_x86_linux_2.0.tgz  　　cd vnc_x86_linux_2.0  　　cp *vnc* /usr/local/bin/  　　mkdir /usr/local/vnc  　　cp -r classes/ /usr/local/vnc/   (2)设置 vnc server 的访问密码   　　vncpasswd   (3)启动 vnc server   　　vncserver   注意运行后显示的信息, 记下所用的端口号, 一般从 1 开始, 因为 0 被 x server 占用了. 现在, 你就能提供 vnc 服务了.vnc client 的用法等会介绍.   2、安装 nt 版的 vnc   1)安装   解开 vnc-3.3.3r7 x86 win32.zip 包后, 会产生 winvnc 和 vncviewer 两个目录.winvnc 目录中是 vnc server 的安装程序, vncviewer 目录中是 vnc client 的安装序. 我只关心 vnc server, 在 winvnc 目录中执行 setup 即可.   2)设置   首先执行 install default registry settings.   run winvnc(app mode)就是执行 vnc server   这时可看到 winvnc 运行的小图标, 用鼠标右键点击图标, 在 properties/incoming connections 中设定密码. 默认配置即可.   现在, 你的 nt 就能提供 vnc 服务了.   3、使用 vncviewer   vnc server 启动成功后, 你就可用 vncviewer 来远程控制桌面了.   vncviewer xxx.xxx.xxx.xxx:display number   例如, vncviewer 172.16.1.2:1   按要求输入密码就可以看到远程的桌面了.   注意:viewers 需要在 16 位色的显示模式下工作，如果您的操作系统中没上 16 位色，那么请您及时的调整您计算机的显示模式。不然 vncviewer 无法正常工作。   4、linux 版 vnc server 的改进.   linux 上的 vnc server 内定的桌面管理环境是 twm, 实在是太简陋了.   修改$HOME/.vnc/xstartup 这个文件.   把所有内容的行前加上#, 再在接尾部份加上:   startkde &amp;   你当然可用你喜好的桌面代替. 我这是用 kde 来代替 twm, 速度会慢少少, 但用起来方便不少.   注意要重新启动 vnc server.   5、通过浏览器使用 vnc   通过浏览器使用 vnc, 要注意端口号的变化.   假设 vnc server 是 172.16.1.2:1 的话, 那么, 可用浏览器访问http://172.16.1.2:5801   端口号=display number + 5800   好了, 心动不如行动, just do it !  ","categories": [],
"tags": [],
"url": "/wiki/greenwarm/remotedesktop/",
"teaser": null
},{
"title": "虚拟化简介",
"excerpt":"虚拟化的含义丰富，应用广泛。目前虚拟化技术主要关注于服务器虚拟化，即在一个宿主计算机上提供多个独立操作系统。 进行虚拟化 就是要将某种形式的东西以另外一种形式呈现出来。对计算机进行虚拟化就是要将计算机以多台计算机或一台完全不同的计算机的形式呈现出来。 虚拟化也可以将多台计算机组合成一台计算机的形式呈现出来。这通常称为服务器聚合或网格计算。   什么是虚拟化   虚拟化的类型   实现虚拟化的方法不止一种。实际上，有几种方法都可以通过不同层次的抽象来实现相同的结果。本节将介绍 Linux 中常用的 4 种虚拟化方法，以及它们相应的优缺点。   1.1.1.1 硬件仿真   毫无疑问，最复杂的虚拟化实现技术就是硬件仿真。在这种方法中，可以在宿主系统上创建一个硬件虚拟机（Virtual Machine）来仿真所想要的硬件。 使用硬件仿真的主要问题是速度会非常慢。由于每条指令都必须在底层硬件上进行仿真，因此速度减慢 100 倍的情况也并不稀奇。若要实现高度保真的仿真，包括周期精度、所仿真的 CPU 管道以及缓存行为，实际速度差距甚至可能会达到 1000 倍之多。 硬件仿真也有自己的优点。例如，您可以运行多个虚拟机，每个虚拟器仿真一个不同的处理器。   1.1.1.2\t完全虚拟化   完全虚拟化（full virtualization），也称为原始虚拟化，是另外一种虚拟化方法。这种模型使用一个虚拟机，它在客户操作系统和原始硬件之间进行协调。“协调”在这里是一个关键，因为 VMM（Virtual Machine Monitor） 在客户操作系统和裸硬件之间提供协调。特定受保护的指令必须被捕获下来并在 hypervisor 中进行处理，因为这些底层硬件并不由操作系统所拥有，而是由操作系统通过 hypervisor 共享。 虽然完全虚拟化的速度比硬件仿真的速度要快，但是其性能要低于裸硬件，因为中间经过了 hypervisor 的协调过程。完全虚拟化的最大优点是操作系统无需任何修改就可以直接运行。惟一的限制是操作系统必须要支持底层硬件。   1.1.1.3\t超虚拟化   超虚拟化（paravirtualization）是另外一种流行的虚拟化技术，它与完全虚拟化有一些类似。这种方法使用了一个 hypervisor 来实现对底层硬件的共享访问，还将与虚拟化有关的代码集成到了操作系统本身中。这种方法不再需要重新编译或捕获特权指令，因为操作系统本身在虚拟化进程中会相互紧密协作。 超虚拟化技术需要为 hypervisor 修改客户操作系统，这是它的一个缺点。但是超虚拟化提供了与未经虚拟化的系统相接近的性能。与完全虚拟化类似，超虚拟化技术可以同时支持多个不同的操作系统。   1.1.1.4\t操作系统级别的虚拟化   最后一种技术是操作系统级的虚拟化，它使用的技术与前面所介绍的有所不同。这种技术在操作系统本身之上实现服务器的虚拟化。这种方法支持单个操作系统，并可以将独立的服务器相互简单地隔离开来。 操作系统级的虚拟化要求对操作系统的内核进行一些修改，但是其优点是可以获得原始性能。   1.1.2 与 Linux 有关的虚拟化项目   1.1.2.1\tBochs（硬件仿真）   Bochs 是一个 x86 计算机仿真器，它在很多平台上（包括 x86、PowerPC、Alpha、SPARC 和 MIPS）都可以移植和运行。使 Bochs 更为有趣的是它不仅可以对处理器进行仿真，还可以对整个计算机进行仿真，包括计算机的外围设备，比如键盘、鼠标、视频图像硬件、网卡（NIC）等。 Bochs 可以配置作为一个老式的 Intel® 386 或其后继处理器使用，例如 486、Pentium、Pentium Pro 或 64 位处理器。它甚至还可以对一些可选的图形指令进行仿真，例如 MMX 和 3DNow。 使用 Bochs 仿真器，您可以运行任何 Linux 上的 Linux 发行版、Linux 上的 Microsoft® Windows® 95/98/NT/2000（以及各种应用程序），甚至 Linux 上的 BSD（Berkeley Software Distribution）操作系统（FreeBSD、OpenBSD 等）。   1.1.2.2\tQEMU（硬件仿真）   QEMU 是另外一个仿真器，它与 Bochs 非常类似，不过也有一些值得一提的区别。QEMU 支持两种操作模式。第一种是 Full System Emulation（完全系统仿真）模式。这种模式与 Bochs 非常类似，它可以对一个具有处理器和外围设备的完整个人计算机（PC）进行仿真。这种模式可以仿真很多处理器架构，例如 x86、x86_64、ARM、SPARC、PowerPC 和 MIPS，其动态转换的速度也比较理想。使用这种模式，您可以在 Linux、Solaris 和 FreeBSD 上仿真 Windows 操作系统（包括 XP）和 Linux。很多其他操作系统的组合也都可以得到支持。 QEMU 还可以支持第二种模式，称为 User Mode Emulation（用户模式仿真）。这种模式只能宿主于 Linux，在这种模式下，可以启动不同体系结构的二进制文件。例如，在 x86 平台上运行的 Linux 系统上可以执行为 MIPS 体系架构编译的二进制文件。   1.1.2.3\tVMware（完全虚拟化）   VMware 是完全虚拟化的一个商业解决方案。在客户操作系统和裸硬件之间有一个 hypervisor 作为抽象层使用。这个抽象层允许任何操作系统在硬件上运行，而不需要了解任何其他客户操作系统。 VMware 也会对可用的 I/O 硬件进行虚拟化，并将一些高性能的设备驱动程序加入到 hypervisor 中。 整个虚拟化后的环境都作为一个文件保存，这意味着整个系统（包括客户操作系统、VM 和虚拟硬件）可以很容易地快速迁移到新宿主机器上进行负载均衡。   1.1.2.4\tXen（超虚拟化）   Xen 是一个来自于 XenSource 的操作系统级超虚拟化的免费开源解决方案。在超虚拟化中，hypervisor 和操作系统会共同协作，虽然操作系统需要进行一些更改，但却可以带来接近于原始系统的性能。 就像 Xen 需要进行协作（对客户操作系统进行修改）一样，只有那些修补过的操作系统才可以通过 Xen 进行虚拟化。Linux 本身就是开源的，所以从 Linux 角度来看，这是一个很合理的折衷，因为最终可以获得比完全虚拟化更好的性能。但是从广泛支持的角度来看（例如对其他非开源操作系统的支持），这显然是一个 缺点。 Windows 可以在 Xen 上作为一个客户操作系统运行，支持 Xen 的其他操作系统包括 Minix、Plan 9、NetBSD、FreeBSD 和 OpenSolaris。   1.1.2.5\tLinux-VServer（操作系统级虚拟化）   Linux-VServer 是一个操作系统级虚拟化解决方案。Linux-VServer 对 Linux 内核进行虚拟化，这样多个用户空间环境 —— 又称为 Virtual Private Server（VPS） —— 就可以单独运行，而不需要互相了解。Linux-VServer 通过修改 Linux 内核实现用户空间的隔离。 要将各个用户空间与其他用户空间隔离开来，就需要从上下文的概念入手。上下文 是给定 VPS 进程使用的一个容器，这样通过诸如 ps 之类的工具就可以了解 VPS 的进程。内核为最初的引导定义了一个缺省的上下文。另外管理端还能查看所有的上下文（所有的执行进程）。正如您可能猜到的那样，内核和内部数据结构也需要进行修改来支持这种虚拟化方法。 Linux-VServer 还使用了一种 chroot 格式来为每个 VPS 隔离 root 目录。虽然 chroot 允许指定新 root 目录，但还是需要其他一些功能（称为 Chroot-Barrier）来限制 VPS 脱离其隔离的 root 目录回到上级目录。给定一个隔离的 root 目录之后，每个 VPS 就可以拥有自己的用户列表和 root 密码。 2.4 和 2.6 版本的 Linux 内核支持 Linux-VServer，它可以运行于很多平台之上，包括 x86、x86-64、SPARC、MIPS、ARM 和 PowerPC。   1.1.2.6      Virtual Box   virtual box 是一个非常好用的虚拟化软件，其使用方法与著名的 vmware 非常相似，virtual box 已经作为拓林思公司的新产品 GTES11 中的一部分提供给用户。   1.1.3 对完全虚拟化和超虚拟化的硬件支持   Intel 正在开发新虚拟化技术，能在 x86（VT-x）和 Itanium®（VT-i）体系架构上支持 hypervisor。VT-x 支持两种格式的操作，一种用于 VMM（root），另外一种用于客户操作系统（非 root）。root 格式完全是特权级的，而非 root 格式是非特权级的（即使对环 0 来说也是如此）。这种体系架构支持定义指令来使 VM（客户操作系统）退出到 VMM 和保存处理器状态。此外还添加了许多其他的功能。 AMD 也开发了硬件辅助虚拟化技术，称为 Pacifica。除了其他一些特性之外，Pacifica 还为在特殊指令执行时保存的客户操作系统维护了一个控制块。VMRUN 指令允许虚拟机（及其相关的客户操作系统）一直运行，直到 VMM 重新获得控制权为止（这也是可配置的）。这种可配置能力允许 CMM 为每个客户操作系统定制特权指令。Pacifica 还可以使用宿主和客户内存管理单元（MMU）表来进行地址转换。 这些新技术也可以应用到此处讨论的很多其他虚拟化技术中，包括 Xen、VMware、User-mode Linux 等。   1.1.4 Linux KVM（内核虚拟机）   Linux 传出的最新消息是将 KVM 合并到 Linux 内核中。KVM 是一种完全虚拟化解决方案，它有一个方面非常独特：它将 Linux 内核转换为一个使用内核模块的 hypervisor。这个模块允许使用其他客户操作系统，然后在宿主 Linux 内核的用户空间中运行。内核中的 KVM 通过 /dev/kvm 字符设备来公开虚拟化后的硬件。客户操作系统使用为 PC 硬件仿真修改过的 QEMU 进程与 KVM 模块接口。 KVM 模块向内核中引入了一个新的执行模块。普通内核支持内核 模式和用户 模式，而 KVM 则引入了一种客户 模式。客户模式用来执行所有非 I/O 客户代码，而普通用户模式支持客户 I/O。 KVM 的引入是 Linux 的一个有趣革新，因为它代表了作为主流 Linux 内核一部分的第一个虚拟化技术。它已经存在于 2.6.20 树中，不过也可以作为 2.6.19 内核的一个内核模块使用。当在支持虚拟化的硬件上运行时，KVM 支持 Linux（32 位和 64 位）和 Windows（32 位，64 位？）客户机。   拓林思产品中对虚拟化的支持   （文章来源的广告   ![^_^](../lib/images/smileys/icon_fun.gif)   ）   XEN   1.2 Xen 简介   Virtual Box   Virtual Box 的使用   KVM   KVM 使用方法  ","categories": [],
"tags": [],
"url": "/wiki/greenwarm/virtualization/",
"teaser": null
},{
"title": "Windows 下的开源及优秀免费软件",
"excerpt":"下面列举了我平时整理的一些开源免费软件，基本上都具有高效、功能丰富、上手快或定制能力强的特点。 还有很多开源软件，如 Free Download Manager、MPlayer 虽然对一些 geek 而言仍不失为一个优秀的软件，但是相对较为小众，这里就不多做介绍了。   开源软件           办公软件：OOo            文档制作：MiKTeX            压缩软件：7zip            思维导图：FreeMind            浏览器：Firefox、Chrome、MyIE            视频播放器：VLC、media player classic+ffdshow            多媒体格式转换：HandBrake、mkv Merge GUI、lame、flac            文本编辑：gVim、notepad++            十六进制编辑：madedit            IDE：Eclipse            快速启动器：Launchy            碎片整理：MyDefrag            系统维护：Grub4Dos            远程登录：Putty            游戏模拟器：PCSX2            词典：Stardict            第三方 shell：BBLean            FTP 软件：Filezilla            局域网传送：IP Messenger            网络分析：Wireshark            密码学习工具：CrypTool            PDF 制作：ghostscript            PDF 阅读：sumatrapdf            光盘刻录：InfraRecorder            虚拟化：VirtualBox            提取脱壳：Universal Extractor       优秀免费软件           办公软件：WPS（国产倾囊大作）            PDF 阅读：Foxit Reader（国产名作）            英文助手：hi 英文助手            PDF 阅读：PDF-Xchange PDF Viewer（优点是预载入策略，交互性能好）            PDF 打印：Bullzip            中文输入：Google 拼音（Lua 扩展）            音乐播放：Foobar2000（可定制性高，音质广受好评）            照片管理：Picasa（交互界面超赞）            图片管理：XnView（类 acdsee）            BT 下载：utorrent            FTP 软件：ftprush（可扩充能力强）            搜索增强：Everything Search            IDE：Microsoft Visual Studio Express 或 Microsoft Visual Studio Professional (for Student)            虚拟光驱：DAEMON Tools Lite       使用中的其他免费软件           世界之窗浏览器（IE 内核）            射手影音播放器（基于 mpc 的准开源软件）            灵格斯词典            total commander（文件式的操作，键盘操作方便，准免费）            flashget 国际版            某些不得不使用的软件       后记   上面很多软件是跨平台的，同时有 Linux 下的版本，但本人在 Linux 平台下习惯使用不同的工作方式，就没详细整理了。   开源软件还有一个很重要的优势就是通常能有 64 位的版本，使得软件的性能能有一定的提高，尤其对于计算密集型的软件；同时 64 位系统+64 位软件的安全性能很高，明显优于 32 位系统或者 64 位系统+32 软件。  ","categories": [],
"tags": [],
"url": "/wiki/greenwarm/win32free/",
"teaser": null
},{
"title": "1.2 Xen 简介",
"excerpt":"Xen 是在剑桥大学作为一个研究项目被开发出来的，它已经在开源社区中得到了极大的推动。Xen 是一款 半虚拟化（paravirtualizing） VMM（虚拟机监视器，Virtual Machine Monitor）， 这表示，为了调用系统管理程序，要有选择地修改操作系统，然而却不需要修改操作系统上运行的应用程序。 虽然 VMWare 等其他虚拟化系统实现了完全的虚拟化（它们不必修改使用中的操作系统），但它们仍需要进行实时的机器代码翻译，这会影响性能。 由于 Xen 需要修改操作系统内核，所以您不能直接让当前的 Linux 内核在 Xen 系统管理程序中运行，除非它已经 移植到了 Xen 架构。不过，如果当前系统可以使用新的已经移植到 Xen 架构的 Linux 内核，那么 您就可以不加修改地运行现有的系统。    图 1-1 简单的 Xen 架构 Xen 是一个开放源代码的 para-virtualizing 虚拟机（VMM）或“管理程序 ”，是为 x86 架构的机器而设计的。Xen 可以在 一套物理硬件上安全的执行多个虚拟机。   1.2.1 硬件支持   目前运行在 x86 架构的 机器上，需要 P6 或更新的处理器（比如 Pentium Pro, Celeron, Pentium II, Pentium III, Pentium IV, Xeon, AMD Athlon, AMD Duron)。支 持多 处理器，并且支持超线程（SMT）。另外对 IA64 和 Power 架构的开发也在进行中。 32 位 Xen 支持最大 4GB 内存。可是 Xen 3.0 为 Intel 处理器物理指令集(PAE)提供支持，这样就能使 x86/32 架构的机器支持到 64GB 的物理内存。Xen 3.0 也能支持 x86/64 平台支持，比如 Intel EM64T 和 AMD Opteron 能支持 1TB 的物理 内存以上。   1.2.2 基于 Xen 的系统架构   基于 Xen 的操作系统，有多个层，最底层和最高特权层是 Xen 程序本身。Xen 可以管理多个客户操作系统，每个操作系统都能在一个安全的虚拟机中实现。在 Xen 的术语中，Domain 由 Xen 控制，以高效的利用 CPU 的物理资源。每 个客户操作系统可以管理它自身的应用。这种管理包括每个程序在规定时间内的响应到执行，是通过 Xen 调度到虚拟机中实现。 当 Xen 启动运行后，第一个虚拟的操作系统，就是 Xen 本身，我们通过 xm list，会发现有一个 Domain 0 的虚拟机。Domain 0 是其它虚拟主机的管理者和控制者，Domain 0 可以构建其它的更多的 Domain ，并管理虚拟设备。它还能执行管理任务，比如虚拟机的体眠、唤醒和迁移其它虚拟机。 一个被称为 xend 的服务器进程通过 domain 0 来管理系统，Xend 负责管理众多的虚拟主机，并且提供进入这些系统的控制台。命令经一个命令行的工具通过一个 HTTP 的接口被传送到 xend。   1.3 安装 Xen   Xen 发行版包括三个主要的部件：Xen 本身，在 Xen 上运行 Linux 和 NetBSD 的接口，及管理基于 Xen 的系统的用户工具。 GTES11 已经包含了 Xen 的相关安装包，在安装 GTES11 操作系统的时候，选择典型安装方式或者完全安装方式即可。 你也可以选择自定义安装方式，然后选择安装虚拟化相关组件。 系统安装成功以后，在 GRUB 的启动菜单上选择带 有 xen 支持的选择，这样就可以启动有 Xen 支持的操作系统了。 用支持 Xen 的内核启动，看起来有点象 Linux 常规引导。第一部份输出的是 Xen 本身的信息，这些信息是关于 Xen 自身和底层的硬件的信息。最后的输出是来自于 XenLinux。 当 XenLinux 引导时，您能查看一些错误的信息。对于这些信息没有必要为他们担心，这是因为您的 XenLinux 和您原来用的没有带有 Xen 支持的那个之间不同配置而引起的。 当引导完成后，您应该可以登录您的操作系统了。   1.4 引导 Xen   引导系统进入 Xen 将要带你进入一个特权的 domain 管理，Domain0。在这时，您可以创建客户 domain，并通过 xm create 命令来引导他们。   1.4.1 从 Domain0 开始引导   创建一个新的 Domain 的首先要准备一个 root 文件系统，这个文件系统 可以是一个物理分区，一个 LVM 或其它的逻辑卷分区，映像文件，或在一个 NFS 服务器上。最简单的是通过操作系统的安装盘把操作系统安装进另一个物理分区。 GTES11 系统中启动支持 Xen 的内核以后，默认启动了 xend 守护进程。你可以通过以下命令进行查看：   /etc/init.d/xend status   如果 xend 没有默认启动，你可以手动启动 xend 守护进程，请输入如下命令：   xend start   1.4.2 引导客户 Domains ( Booting Guest Domains )   1.4.2.1\t创建一个Domain配置文件   在启动一个虚拟的操作系统之前，必须创建 一个引导这个虚拟操作系统的配置文件 。 我们提供了两个示例文件，这能做为您学习 Xen 虚拟操作系统的一个起点。   /etc/xen/xmexample1 是引导一个虚 拟操作系统的配置文件示例。 /etc/xen/xmexample2 是可 以引导多个虚拟操作系统的配置文件；设置xmid的变量的值，这样就可以通过xm 指定vmid对虚拟的操作系统进行管理。   还有其它一些有关 Domain 的配置文件，您可以加以修改应用。   1.4.2.2\t引导客户Domain   xm 工具为管理 Domain 提供很多指令。 用 create 指令来引导新的 Domain。可以基于/etc/xen/xmexample2 创建自己的 Domain 管理配置文件 myvmconf，这样启动一个 Domain 可以通过虚拟机的 ID 来引导。比如 ID 是 1，您应该输入：   xm create -c myvmconf vmid=1   -c 参数是指后面要接配置文件，意思是通过配置文件引导，vmid=1 是在 myvmconf 中的变量，不同的 Domain，vmid 的值也不一样。 然后您应该能看到从新 Domain 的在控制台启动的信息，最后您能登录被虚拟的操作系统。   1.4.2.3\t自动启动/停止Domain   当系统启动的时候，Domain 也随之启动，并生成一个 dom0 守护进程，当 dom0 关闭系统之前，dom0 上运行的 Domain 都要关闭。 可以指定一个 Domain 随系统自动启动，请放配置文件（或建一个 边链接)文件到/etc/xen/auto 目录下。 对于 GTES11 系统，安装 xen 时，会在/etc/init.d 目录下安装 Sys-V 风格初始化脚本。您可以根据需要启用它们。 默认情况下, 在运行级别是 3、4、5 时, 引导时会启动它们。   1.5 Xen 的配置和管理   1.5.1 Xen 的相关文件存放位置   安装有 xen 的操作系统下的/boot 目录中，存放 xen 本身及支持 xen 的内核文件。 内核模块包括虚拟平台支持 xen 的内核 xen0 的模块，及支持虚拟操作系统所用的 xenU 的模块，一般的情况下是在 /lib/modules 下有两个 xen 相关的目录存放。 Xen 的配置文件存放于 /etc/xen 目录。 比如 xend-config.sxp 是用于配置网络的，不过我们不必更改，用其默认的就能完成我们的需要。xmexample1 xmexample2 是两个示例性的配置文件。我们在配置引导被虚拟的操作系统时，这两个文件可供参考。 Xen 的服务器 xend 和 xendomains 启动 脚本，一般是位于/etc/init.d/目录中，也就是/etc/init.d/xend ；/etc/init.d/xend 负责启动 xend 服务器，而/etc/init.d/xendomains 负责第一个虚拟的系统及其它的 Domains，也就是 Domain 0。 Xen 的可执行命令存放于/usr/sbin 目录。   1.5.2 Xen 服务器的启动   Xend 服务器的启动/停止/重启/状态查询，请用下面的命令:   /etc/init.d/xend start\t\t启动xend，如果 xend没有运行 /etc/init.d/xend stop\t\t停止xend，如果xend正在运行 /etc/init.d/xend restart\t\t重启正在运行的 xend，如果xend没有运行，则启动 /etc/init.d/xend status\t\t查看xend状态   1.5.3 Xen 管理工具 xm   列出所有正在运行的虚拟操作系统，请执行以下命令：   /usr/sbin/xm list   通过配置文件来引导被虚拟的操作系统，请执行以下命令：   /usr/sbin/xmcreate -c 虚拟操作系统的启动配置文件   例如我们要启动被虚拟的操作系统 GTES11 ，我们要写一个启动 GTES11 的配置文件，比如是 gtes11vm.cfg。然后就可以通过下面的命令来引导 GTES11 了。   /usr/sbin/xmcreate -c gtes11vm.cfg   从终端或控制台登录正在运行的虚拟操作系统，可以执行以下命令：   /usr/sbin/xm console 正在运行的虚拟操作系统的Name或ID   存储正在运行的虚拟操作系统的状态及唤醒虚拟操作系统，可以执行以下命令：   /usr/sbin/xm save /usr/sbin/xm restore   停止正在运行的虚拟操作系统/激活停止的虚拟操作系统，可以执行以下命令：   /usr/sbin/xm pause /usr/sbin/xm unpause   调整虚拟平台/虚拟操作系统的占用内存，可以执行以下命令：   /usr/sbin/xm mem-set   关闭被虚拟的系统，可以执行以下命令：   /usr/sbin/xm shutdown虚拟操作系统的Name或DomID /usr/sbin/xm destroy   调整虚拟平台及虚拟操作系统的虚拟 CPU 个数，可以执行以下命令：   /usr/sbin/xm vcpu-set   查看虚拟系统运行的状态，可以执行以下命令：   /usr/sbin/xm top /usr/sbin/xentop   1.6 存储和文件管理   虚拟的系统应该有一个存储的地方，也就是文件系统。 被虚拟的系统能安装和运行在一个实际的物理分区上，一个映像文件中，或 NFS 等网络文件系统中。 最常用的，最简单的方法是以物理块设备（一个硬盘或分区）做为虚拟系统的块设备。 也可以用一个映像文件或已经分割的文件系统映像为做为虚拟系统的块设备。 标准的网络存储协议支持的文件系统，比如 NBD，iSCSI，NFS 等，也能做为虚拟系统的存储系统。   1.6.1 以物理硬盘作为虚拟块设备   以实际物理硬盘分区做为虚拟操作系统的文件系统，要经过硬盘分区，创建文件系统流程。 一个简单的配置就是直接把有效的物理分区做为虚拟块设备。在您的 domain 配置文件中，通过用 phy: 来指定。比如类似下面的一行：   disk = ['phy:hda3,sda1,w']   指定物理分区/dev/hda3 虚拟为/dev/sda1，并且被虚拟 的系统所用的文件系统位于/dev/sda1。 块设备作为典型的配置在 Domain 中是只读的，否则 Linux 内核的文件系统由于 Domain 文件系统多次改变而变得混乱（相同的 ext3 分区以 rw 读 写方式挂载两次的解决办法会导致崩溃的危险！）。Xend 通过检查设备没有以 rw 可写读模式被挂载于 Domain0 上，并且检查同一个块设备没有以读写的方式应用于另外一个 Domain 上。   1.6.2 以文件作为虚拟块设备   以映像文件做为虚拟操作系统的文件系统，这种方法是比较常用。也是比较方便和易于操作的，也就是说被虚拟的操作系统是放在了一个文件中。 例如，创建一个 2G 的文件，（文件的块的大小为 1KB）   dd if=/dev/zero of=gtes11vm.img bs=1k seek=2048k count=1   您可以调整上面命令参数的大小来创建您想要的体积大小的映像文件。 在映像文件上创建文件系 统：   mkfs.ext3 gtes11vm.img   (当有提示确认时，请输入’y’) 移植文件系统，比如持目前您正在应用的 Linux 文件系统中拷贝：   mount -o loop gtes11vm.img /mnt cp -ax /{root,dev,var,etc,usr,bin,sbin,lib} /mnt mkdir /mnt/{proc,sys,home,tmp}   然后应该编辑/etc/fstab，/etc/hostname 等。不要忘记是 在被 mount 的文件系统中更改这些，而不是您的 domain 0 的文件系统。比如您应该编辑 /mnt/etc/fstab，而不是/etc/fstab。例如在/mnt/etc/fstab 中添加一行 /dev/sda1。 卸载文件系统   umount /mnt   在配置文件中的设置：   disk = ['file:/full/path/to/gtes11vm.img,sda1,w']   就象虚拟机写入自己的硬盘，所以要设置映像文件所处的位置、虚拟硬盘、可读可写。 Linux 支持最多８个虚拟文件系统，如果想解除这个设置，请用 max loop 的参数来配置，当然您所用的虚拟平台 dom0 内核已经 编译了 CONFIG BLK DEV LOOP 这个选项。您可以在系统启动时，在 boot 选择中设置 max_loop=n。   1.6.3 以 LVM 作为虚拟块设备   您还可以用 LVM 卷作为虚拟机的文件系统。 初始化一个分区到 LVM 卷：   pvcreate /dev/sda10   创建一个卷组名’vg’在物理分区上：   vgcreate vg /dev/sda10   创建一个逻辑卷大小为４Ｇ，名字为’gtesvmdisk1’：   lvcreate -L4096M -n gtesvmdisk1 vg   现在你能在/dev/vg/gtesvmdisk1 中创建一个文件系统，然后挂载它，并且构建虚拟系统：   mkfs -t ext3 /dev/vg/gtesvmdisk1 mount /dev/vg/gtesvmdisk1 /mnt cp -ax / /mnt umount /mnt   现在对您的 VM 做如下配置:   disk = [ 'phy:vg/gtesvmdisk1,sda1,w' ]   LVM 能让您调节逻辑卷的体积，你可以调整适合文件系统的体积大 小以便于有效的利用空闲空间。一些文件系统（比如 ext3）支持在线调 整，请看 LVM 手册，以获取更多的信息。 您也可以通过 copy-on-write(CoW)来创建 LVM 卷的克隆（在 LVM 术语的通称是可写的持续快照）。这个工具在最早出现在 Linux 2.6.8 的内核中，因此他不可能象希望的那样稳定。特别注意的是，大量应用 CoW LVM 硬盘会占用很多 dom0 的内存，并且有错误情况发生，例如超出硬盘空间的不能被处理。希望这个特性在未来有所提升。   1.6.4 以 NFS 做为虚拟系统的文件系统   您还可以用 NFS 服务器提供的文件系统做为虚拟系统的文件系统。 首先我们要通过修改/etc/exports 文件来配置一个可用的 NFS 服务器。 然后配置虚拟机所用的 NFS root。当然要指定 NFS 服务器的 IP 地址，应该确保有如下的参数，在虚拟系统引导的配置文件中：   root = '/dev/nfs' nfs_server = '2.3.4.5'\t\t# NFS 服务器IP地址 nfs_root = '/path/to/root'\t# NFS服务器文件系统路径   1.7 安装 GTES11 虚拟机   1.7.1 使用“virt-install”安装虚拟机   使用“virt-install”来安装 GTES11 虚拟机，请执行以下命令：   /usr/sbin/virt-install   然后会依次出现一些关于将要安装的 GTES11 系统的问题需要回答。 你还可以通过-x ks=options 参数来实现 kickstart 自动安装的各种方式。关于 virt-install 命令的详细用法，可以通过—help 参数来查看。关于 kickstart 安装，请参阅相关文档。 问题 1：What is the name of your virtual machine?         输入要安装的虚拟机名字，例如：gtes11vm   问题 2：How much RAM should be allocated (in megabytes)?         输入要安装的虚拟机所需内存大小，以兆为单位，例如：512   （不小于 256 兆） 问题 3：What would you like to use as the disk (path)?         输入虚拟机的安装路径，例如：/home/test/gtes11   问题４：How large would you like the disk (/home/test/gtes11) to be (in gigabytes)?         输入要安装的虚拟机大小，以G为单位，例如：10   问题５：Would you like to enable graphics support? (yes or no)         要安装的虚拟机需要图形支持吗？例如：yes   问题 6：What is the install location?         输入要安装的虚拟机的源文件路径，GTES11目前支持NFS, FTP和HTTP三种方式。例如：  nfs:my.nfs.server.com:/path/to/test/gtes11vm  ftp://my.ftp.server.com/path/to/test/gtes11vm  http://my.http.server.com/path/to/test/gtes11vm   对以上问题作出相应的回答以后，接下来的 GTES11 虚拟机安装就变得很容易了。如果选择支持图形方式，一个 VNC 窗口就会弹出来，如下图所示。    图 1-2 图形方式下选择安装语言 然后和普通图形安装方式类似，对语言，网络等配置以后，就会出现一个欢迎界面。如下图所示。    1-3 图形方式下欢迎界面 如果没有选择图形方式，就是标准的文本安装 GTES11。如下图所示。    图 1-4 文本方式下选择安装语言 然后和普通安装文本方式类似，对语言，网络等配置以后，就会出现一个欢迎界面。如下图所示。    1-5 文本方式下欢迎界面 接下来的 GTES11 虚拟机安装跟普通文本方式安装 GTES11 没有什么两样。   1.7.2 使用“virt-manager”安装虚拟机   使用“virt-manager”来安装 GTES11 虚拟机，请执行以下命令： /usr/sbin/virt-manager 或者通过“应用程序 → 系统工具”来选择“Virtual Machine Manager”。    1-6 连接到本地 Xen 宿主 点击“连接”按钮，出现虚拟系统管理主窗口。如下图所示。    1-7 虚拟系统管理 点击“新建”按钮，出现创建新的虚拟系统主窗口。如下图所示。    1-8 创建新的虚拟系统主窗口 点击“前进”按钮。    1-9 为虚拟系统命名 命名新的虚拟机，然后点击“前进”按钮。    1-10 选择虚拟化方式 选择虚拟化方式，然后点击“前进”按钮。    1-11 定位安装介质 指定 GTES11 安装镜像所在位置，支持 NFS, HTTP, FTP 三种方式。 还可以指定 Kickstart 文件位置。 然后点击“前进”按钮。    1-12 分配存储空间 为新的 GTES11 虚拟机分配存储空间，可以选择物理磁盘分区或者文件。 然后点击“前进”按钮。    1-13 分配内存大小及 CPU 个数 为新的 GTES11 虚拟机分配内存大小以及 CPU 个数。 然后点击“前进”按钮。    1-14 虚拟机配置 确认配置无误后，点击“结束”按钮。    1-15 创建虚拟机 等虚拟机所需文件或者物理空间创建完毕以后，接下来的 GTES11 虚拟机安装跟普通图形方式安装 GTES11 类似。    1-16 选择安装语言 然后和普通图形安装方式类似，对语言，网络等配置以后，就会出现一个欢迎界面。 接下来的 GTES11 虚拟机安装就变得很容易了。   1.7.3 使用“virt-manager”管理虚拟机   使用“virt-manager”来管理 GTES11 虚拟机，请执行以下命令： /usr/sbin/virt-manager 或者通过“应用程序 → 系统工具”来选择“Virtual Machine Manager”。    1-17 连接到本地 Xen 宿主 点击“连接”按钮，出现虚拟系统管理主窗口。如下图所示。    1-18 虚拟系统管理 然后就可以在图形方式下对虚拟机进行管理了。关于 virt-manager 的详细用法，请参阅相关项目文档。  ","categories": [],
"tags": [],
"url": "/wiki/greenwarm/xen%E7%AE%80%E4%BB%8B%E4%B8%8E%E4%BD%BF%E7%94%A8/",
"teaser": null
},{
"title": "中国科学技术大学 Linux 用户协会",
"excerpt":"中国科学技术大学 Linux 用户协会（科大 LUG）是由在校的 GNU/Linux 爱好者发起并组成的全校性群众团体，是一个以推广自由软件文化、宣传自由软件价值为目的的协会组织。  了解更多   English Version   特色活动           LUG 每周小聚:       每周末由同学带来的技术分享演讲。            Linux Install Party:       推广和安装 Linux，宣传和鼓励开源和自由软件精神的活动。            Linux 101:       帮助新手学习 Linux 的系列活动。            自由软件日:       在国际自由软件基金会（SFI）的领导下，由自由/开源软件爱好者自发筹集的非盈利性活动。            信息安全大赛:       每年秋季学期举办的信息安全竞赛。       网络服务      开源软件镜像   LUG FTP(各种资源汇总)   网络启动服务   GitLab 代码托管   其他   请参阅 LUG 网络服务总则   联系我们      QQ 群: 适合于即时性较强的讨论，较正式的讨论还请使用邮件列表。具体群号请查看 qq.ustclug.org 的 TXT 记录。   邮件列表: ustc_lug (at) googlegroups.com 点击此处了解详情   IRC/Telegram 在线及时聊天，点击此处了解加入方式，平台互联由 TUNA 提供支持   瀚海星云 BBS: 瀚海星云 BBS Linux 版   官方邮箱:    活动室: 西区图书馆 206 室   更多联系方式请 戳这里   协会 LOGO      Designed by Shengyu Zhang on 2018-08-30   协会章程   LUG 的所有活动均依照协会章程开展。  ","categories": [],
"tags": [],
"url": "/wiki/",
"teaser": null
},{
"title": "中国科学技术大学 Linux 用户协会",
"excerpt":"English Version   中国科学技术大学 Linux 用户协会是由中国科学技术大学在校的 GNU/Linux 爱好者发起并组成的一个全校性群众团体。成立协会的目的在于联合科大的 GNU/Linux 使用者，搭建信息交流共享的平台，宣传自由软件的价值，提高自由软件社区文化氛围，推广自由软件在科大校园乃至合肥地区的应用。   Linux 用户协会正式成立于 2003 年，至今已经走过了十多个年头，是安徽省高校中一个以推广自由软件社区文化、宣传自由软件价值为目的的协会组织，也是中国大陆高校发展最好的 Linux/自由软件社团之一。在各届协会成员和志愿者的共同努力下，协会开展了许多有意义的活动，如 Linux 网络技术讲座、“GNU/Linux Install Party”、PMP 中的嵌入式 Linux 技术讲座、Oracle 和开源技术报告、“合肥地区开源软件竞赛”、自由软件日技术沙龙、每周小聚和多次 GNU/Linux 系统使用和编程讲座。   自 2003 年开始，协会开始维护国内知名的 Debian 镜像服务器 http://debian.ustc.edu.cn，目前在学校网络中心的支持下，该服务器和 http://oss.ustc.edu.cn 整合为 http://mirrors.ustc.edu.cn ，并成为 Debian, Ubuntu, Fedora, Arch Linux 等多个发行版的官方源以及 Debian 在中国的官方镜像：http://ftp.cn.debian.org 。利用少年班学院的退役超算，协会建立起了 freeshell 服务器，为科大师生提供了容易上手的 Linux VPS。在网络信息中心的帮助下，协会建立了 PXE 网络启动系统，使得在校内可以很快的试用和安装 Linux 系统。协会同时对图书馆的无盘查询系统进行维护。   为了表彰其出色表现，协会于 2011 年 5 月被评为中国科学技术大学优秀学生社团，于 2012 年 5 月、2013 年 5 月及 2014 年 5 月分别被评为中国科学技术大学四星级学生社团，并于 2015 年 5 月、2017 年 7 月、2018 年 9 月、2019 年 8 月、2020 年 9 月、2021 年 9 月及 2023 年 5 月被评为中国科学技术大学五星级学生社团。   特色活动   Linux Install Party   Linux Install Party 主旨在于推广和安装 Linux，宣传和鼓励开源和自由软件精神。活动可以让同学们亲身“无痛”体验 Linux 系统，在安装 Linux 环节有专人指导，同时可以交流了解 Linux 的相关知识。每次派对包含几个面向入门用户的讲座，手把手的安装，近距离的自由交流等环节。   Linux User Party   Linux User Party 在于为不同层次的 Linux 用户提供一个交流的平台。每次活动都会请到一些有经验的资深用户分享相关的 Linux 使用经验，创造多种多样的交流方式与途径，为校内乃至整个合肥地区的 Linux 用户提供一个交流平台。   自由软件日   自由软件日是在国际自由软件基金会（SFI）的领导下，由自由/开源软件爱好者自发筹集的非盈利性活动。旨在为自由/开源软件爱好者提供一个信息交流平台，以及联合各社区举办各种自由/开源软件活动。   科大 LUG 已经成功的连续几届举办了合肥站的自由软件日活动。活动得到了龙芯梦兰、龙芯俱乐部、中标软件、中科红旗、中国开源软件推进联盟等公司、开源社区，以及合肥工业大学，安徽大学等兄弟院校的大力支持。活动邀请过多个在国内开源软件领域非常有影响力的嘉宾，如科大网络中心的张焕杰老师，北京 GUG 主席李震宁先生，上海 LUG 主席姚欣宇，从事 MIPS 开发的刘世伟先生等，带来了各种内容的主题演讲。   LUG 每周小聚   自 2011 年 10 月起，每周六晚上有每周小聚活动，由一位同学做技术分享演讲，欢迎所有师生参与。具体时间、地点和内容会在周四发到邮件列表和瀚海星云 BBS Notice/Linux 版上。   网络服务      开源软件镜像   网络启动服务   GitLab 代码托管   在 这里 可以找到我们  ","categories": [],
"tags": [],
"url": "/wiki/intro/",
"teaser": null
},{
"title": "Linux User Group @ USTC",
"excerpt":"USTC LUG is the abbreviation for Linux User Group (LUG) of University of Science and Technology of China (USTC). USTC LUG is a technology-leading association that consists of the GNU/Linux enthusiasts in USTC. The aim of USTC LUG is to unite the GNU/Linux users in USTC, to build a platform for communicating with each other, sharing the value of free software and promoting free software in the USTC Campus and Hefei City.   Founded in 2003, USTC LUG has gone through over 15 years. At present, it is a top university association in Anhui province to promote the free software culture and value as well as one of the well-developing Linux/Free Software student associations in China mainland. Due to the combined efforts of its members and volunteers, USTC LUG has organized a number of meaningful activities, such as the USTC Information Security Contest, GNU/Linux Install Party, Software Freedom Day, Weekly Party and Linux 101 lectures.   USTC LUG started the maintenance of the well-known Debian archive mirror https://debian.ustc.edu.cn in 2003. Now, with better hardware and bandwidth sponsored by USTC, it finally becomes the official Debian mirror of China. Now it has combined with https://oss.ustc.edu.cn and became https://mirrors.ustc.edu.cn, an important open-source software mirror in China. With the assistance of the USTC Network Information Center, USTC LUG has set up a PXE network booting system, enabling the whole campus to perform convenient installs and quick experience of Linux. The Library LIIMS System, developed on the base of Campus PXE system, is also developed and under the maintenance of USTC LUG.   In recognition of its excellent performance, USTC LUG was awarded the Outstanding Association of USTC in May 2011. USTC LUG was also ranked as a “Four Star” Student Association of USTC in 2012, 2013 and 2014. From 2015 to 2021 (now), USTC LUG was ranked as a “Five Star” Student Association of USTC.   If you have any problem, please email us at lug &lt; at&gt; ustc.edu.cn.   Special Events   Linux Install Party   The main purpose of the Linux Install Party is to promote and install Linux on students’ computers, as well as promote and encourage the spirit of open source and free software. Students will have a good experience installing the Linux system painlessly, have professional guidance during their Linux installing process and exchange relevant knowledge of Linux. Each party includes lectures for novices, installation guide step by step, free discussion, and other events.   SFD (Software Freedom Day)   Software Freedom Day is a non-profit event under the leadership of the Free Software Foundation International (SFI). It is sponsored by supporters of free and open-source software. It aims to provide an information exchange platform for supporters and the hold activities of free and open-source software with other communities.   USTC LUG has successfully organized recent Software Freedom Day events in Hefei. This event was once supported by Lemote Technology, Loongson Club, Standard Software, Red Flag Linux, China OSS Promotion Union, Hefei Industrial University, Anhui University and other companies, open-source community and universities. During each event, the guests influential in the field of open-source software in domestic were invited, such as James Zhang (teacher of USTC network center), Mr. Li Zhenning (President of Beijing GUG), Mr. Yao Xinyu (Chairman of Shanghai LUG), Mr. Liu Shiwei (a developer of MIPS), etc. Their speeches address a variety of content.   LUG Weekly Party   Since October 2011, we hold a meeting named Weekly Party (or ‘Tech Hangout’) every weekend. A student will be invited to make a presentation about IT technology etc. This meeting is open to all teachers and students. Now, before every Weekly Party, the time, place and introduction of the weekly party will be posted on our mailing list, LUG activities calendar, Notice/Linux forum of USTC BBS, etc.   Network Services      Open-Source Software Mirrors   Network Boot Service (PXE)   GitLab (Self-hosted Git repository hosting service)   You can find us here.  ","categories": [],
"tags": [],
"url": "/wiki/intro_english/",
"teaser": null
},{
"title": "使用 badblocks 命令处理硬盘坏道",
"excerpt":"对硬盘数据的操作存在风险，请谨慎操作   扫描硬盘坏道   命令：   badblocks /dev/sdXX [-s -b4096 -o err.log]   常用命令解释：  -s：在屏幕上显示进度  -b：每次扫描的块大小  -o：将错误输出到文件   利用硬盘的重分配特性修复坏道   硬盘上的芯片存有一个 GList，里面存储着盘面上的坏道信息，当读写到其记录的地址时会自动重映射另一个地址来代替损坏的区域。而往其中添加内容很简单：只要往坏道上写数据（读不行），硬盘会自动重映射。   警告：本操作会覆盖硬盘目标区域的数据，请谨慎使用   技巧：可以使用 dd 命令使用 conv=noerror, sync 参数先备份目标区域的数据，在修复后用 dd 写回，具体请参阅 man dd   命令：   badblocks -w [-f] /dev/sdXX [-s -b4096] end start   常用命令解释：  -w：写入命令，通过在坏道地址强制写入来让硬盘自动重映射。  -f：强制写入，在已确定目标不被系统读写而-w 仍然拒绝写入时使用。这个参数应该尽量避免！  end, start：强制写入的开始和终止块地址，与-b 制定的大小相配和。   其他更为深入的使用方式请参阅 man badblocks   来源声明   blog/badblocks.txt · 最后更改: 2013/04/29 08:04 (外部编辑)  ","categories": [],
"tags": [],
"url": "/wiki/linux_digest/badblocks/",
"teaser": null
},{
"title": "crontab",
"excerpt":"Cron 服务通常用于循环定期执行任务，而 crontab 用于添加、删除和查看 Cron 项目。   每个用户的 crontabs 是独立的。如果/etc/cron.allow 存在，则必须在里面添加 username（每个条目一行）来获得使用 crontab 命令的权限。如果/etc/cron.deny 存在，则必须保证用户名不在其中才能使用 crontab 命令。如果两个文件都存在，则 cron.allow 的优先级更高。如果两个文件都不存在，则可能只有 root 或者所有用户都可以使用 crontab 命令。   crontab 命令   命令使用方法：   crontab [ -u user ] file crontab [ -u user ] [ -i ] { -e | -l | -r }   当指定了 file 的时候，这个文件被用作该用户的 cron 表项。   参数含义：           -u 指定用户。通常没有这个参数的时候默认使用当前用户，但是在使用 su 命令的时候可能会有问题。因此建议一直使用-u 参数指定用户。            -e 编辑用户的 cron 表            -l 列出用户的 cron 内容            -r 删除当前用户的 cron 表            -i 配合-r 使用，在进行删除的时候提供选择       crontab 文件的编辑           以#开头的行表示注释，但是注释不能与 cron 命令或者环境参数设置语句在同一行。            环境变量设置语句为 name = value 形式，但是 value 里面引用的变量不会被解析。例如$HOME不会解释为用户的home目录，而是直接当作字符串“$HOME”处理，环境变量通常用于设置$SHELL (默认为/bin/sh), $MAILTO(默认为 crontab 关联的用户), $PATH（默认为/usr/bin:/bin）等等。            每行的内容依次为分、时、月中的某天、月份、星期中的某天 。       示例：          # 使用bash        SHELL=/bin/bash        #设置MAILTO        MAILTO=paul         #每天00:05执行        5 0 * * *       $HOME/bin/daily.job &gt;&gt; $HOME/tmp/out 2&gt;&amp;1         # 每月的第一天的14:15执行        15 14 1 * *     $HOME/bin/monthly         # 每周周一至周五22:00执行        0 22 * * 1-5    mail -s \"It's 10pm\" joe%Joe,%%Where are your kids?%         #每个两个小时的第23分钟执行        23 0-23/2 * * * echo \"run 23 minutes after midn, 2am, 4am ..., everyday\"         #每个周日的04:05执行        5 4 * * sun     echo \"run at 5 after 4 every sunday\"         # 每个月的第8天到第15天的04:00执行        0 4 8-15 * *    test $(date +u) -eq 6 &amp;&amp; echo \"2nd Saturday\"   更多内容参见 man crontab 和 man 5 crontab   来源声明   blog/crontab.txt · 最后更改: 2013/04/29 08:04 (外部编辑)  ","categories": [],
"tags": [],
"url": "/wiki/linux_digest/crontab/",
"teaser": null
},{
"title": "ed 文本编辑器使用笔记",
"excerpt":"昨晚抽风一般地想要学学 ed 究竟应该怎么用，于是花了十多分钟学习了一下基础用法，可以保证在紧急情况下“存活”。稍微整理一下自己学到的用法：   调用   ed [file]   一般使用   如果是创建新文件的话，进入程序后除了光标什么都不会显示；如果是打开已有文件，那么会显示一行文件大小的字节数，然后光标到下一行等待用户输入。   ed 是基于行的文本编辑器，也就是说同时只能显示或编辑文件的某一行。和 Vi 类似，存在两种模式：输入模式和命令模式。默认打开文件后进入命令模式。   既然是基于行的编辑器，那么 ed 有一个“当前行”的概念，可以使用 n 查看之，会打印出当前所在行号。默认打开文件后自动跳转至文件末尾（也就是最后一行）。   在命令模式下输入编辑器不认识的命令，会回显一个问号 ? 表示输入错误。   文字输入   切换至输入模式的命令如下：   a，在当前行的下一行开始插入文字； i，在当前行的上一行开始插入文字； c，抹除当前行的所有文字，重新输入。   注意 c 命令的危险性。   切换至输入模式后，就请随意地打字吧，回车也会忠实地写入文件。缺点是没有办法修改回车符以前的输错的文字。如果想修改，必须退出当前的输入模式再尝试修改。   如果想退出输入模式，在新行输入 . 即可。就是英文句点。   导航   以下导航命令应当在命令模式下使用。   直接输入行号并回车，跳转到对应行，并回显对应行的文字（不带行号）。 输入回车，会跳转到下一行，并回显对应行的文字（不带行号）。 输入 . ，会重复显示当前行的文字（不带行号）。 输入 n，会回显当前行的文字（带行号）。   保存与退出   在编辑已有文件的时候，输入 w 可以进行保存，回显新文件的字节大小。   在编辑新文件时，需要在 w 后接上文件名。回显相同。   按 q 可以退出编辑器。在没有保存文件的时候，则必须用 Q 强制退出。当然 ctrl+c 是没有用的。     作者：hosiet   时间：2014-10-07  ","categories": [],
"tags": [],
"url": "/wiki/linux_digest/ed_editor_usage/",
"teaser": null
},{
"title": "ExPASy 的 ps_scan 在 linux 下的简明配置指南",
"excerpt":"配置数据库   下载数据库   wget -c ftp://ftp.expasy.org/databases/prosite/release_with_updates/prosite.dat   给一个文件夹$PROSITE的环境变量，然后把prosite.dat放在$PROSITE/里头。例如我把 prosite.dat 放在/home/sun/ps _scan/下 export PROSITE=“/home/sun/ps_scan”   配置软件   下载软件   wget -c ftp://ftp.expasy.org/databases/prosite/tools/ps_scan/ps_scan_linux_x86_elf.tar.gz   解压缩   tar -zxvf /home/sun/ps_scan_linux_x86_elf.tar.gz -C /home/sun/ps_scan/   得到 ps scan 文件夹中有如下文件：LICENSE，pfscan，pfsearch，psa2msa，ps scan.pl, README, README.prf. 其中 LICENSE 是该软件的协议，pfscan, pfsearch, psa2msa 三个文件是可执行文件，ps_ scan.pl 是 perl 脚本，两个 README 是使用指导。   把三个可执行文件放进$PATH 文件夹。   sudo cp pfscan /usr/local/bin/   sudo cp pfsearch /usr/local/bin/   sudo cp psa2msa /usr/local/bin/   运行软件   perl ps_scan.pl [options]   这里你需要处于 ps_scan.pl 所在的目录下，至于数据库，由于前边设置过环境变量，软 件会自动找到。当然你也可以在[options]的后头接上数据库的文件。[options]的参数 可以在 README 里头找到。   如果你想以后用起来更方便，可以把 ps _scan.pl 也放进$PATH 里。 chmod 777 ps_scan.pl   sudo cp ps_scan.pl  /usr/local/bin/ps_scan   这样一来，以后只要输入 ps scan 即可运行 ps scan.pl 这个脚本。  ","categories": [],
"tags": [],
"url": "/wiki/linux_digest/expasy-ps_scan/",
"teaser": null
},{
"title": "Linux 文摘",
"excerpt":"   这里收录一些本 Wiki 上有关 Linux 使用的有用文章和一些有用的链接。     超级计算中心培训资料   Linux 操作系统使用基础     读书笔记                  文章名称       备注                       《程序员的自我修养》读书笔记                         读书笔记：关于维护服务器的一些技巧                         手把手读书报告                         《鸟哥的 Linux 私房菜 – 基础学习篇》读书笔记                         来自王光远同学的 emacs 读书笔记                         《黑客与画家》读书笔记                   另请参阅读书笔记   其它文章                  文章名称       备注                       Linux 下关于硬盘 S. M. A. R. T 的相关操作                         crontab 使用方法                         screen 使用方法                         ed 使用方法                         lftp 使用方法                         使用 badblocks 命令处理硬盘坏道                         Linux 用户管理                         ExPASy 的 ps_scan 在 linux 下的简明配置指南                   用户文章                  文章名称       作者                       使用 chroot 编译 android       sadhen                 对 GNU 和 Linux 的一些理解       greenwarm                 认识 Linux 远程桌面控制       greenwarm                 Windows 下的开源及优秀免费软件       greenwarm                 虚拟化简介       greenwarm                 引导技术浅析——grub4dos 快速入门       greenwarm                 Linux 的多媒体支持       greenwarm                 Live Linux 发行版       greenwarm                 Vim 笔记       redsky                 Emacs 笔记       sadhen           参考页面           实用脚本集锦            提问的智慧      ","categories": [],
"tags": [],
"url": "/wiki/linux_digest/",
"teaser": null
},{
"title": "lftp",
"excerpt":"lftp是一款基于命令行的文件传输程序。除了 FTP 外，她还支持 FTPS, HTTP, HTTPS, HFTP, FISH 和 SFTP。它还有一个实用的特性，支持 FXP，即在两台 FTP 服务器间传文件，绕过客户机。此外，她还有一个内建的 BitTorrent 客户端。   常用命令   配置文件   lftp 启动后会一次读取/etc/lftp.conf、~/.lftprc 和~/.lftp/rc。 通常我们将常用的设置写入~/.lftprc 或者~/.lftp/rc 中。 下面是一份 lftprc 的样例：   .lftprc:   #在浏览GBK编码的ftp时，可以执行gbkserver命令迅速切换。 alias gbkserver set ftp:charset gbk;set file:charset utf-8 alias utfserver set ftp:charset UTF-8;set file:charset utf-8   #使得ls的输出更友好、美观 alias ls cls -lhSF set color:use-color true   #本地文件名使用utf8存储 set file:charset utf-8   #对202.38.64.22站点的独立设置 set ftp:passive-mode/202.38.64.22 no set ftp:charset/202.38.64.22 gbk   在被动模式下，lftp 主动连接服务器进行数据传输。在主动模式下，服务器会主动连接 lftp 进行数据传输。 被动模式当您在防火墙后面时很有用。   书签支持   将站点加入书签有两种简单常用的方法，一种是在命令行中执行 bookmark 命令：   bookmark add &lt;name&gt; [&lt;location&gt;]   改命令将会在~/.lftp/bookmarks 文件中新增一行，内容类似如下：   movie\tftp://upload@202.38.64.22/   另一种方法就是直接编辑~/.lftp/bookmarks 文件，例如我直接增加以下该行到文件中：   home    ftp://myname@home.ustc.edu.cn/public_html/   将来只需要在 shell 中执行：   lftp home   即可打开连接到我的 ftp 上了      奇巧淫技-使用 lftp 同步个人主页   科大的童鞋们都有一个 300M 的静态主页空间，很多人都会用这个空间来制作漂亮的个人主页，那你是怎么同步的呢？是不是每次都需要打开 nautilus 或者 filezilla 等工具一个个文件的复制呢？ 来看看用 lftp 的脚本同步吧。   .bash_aliases:   alias update-homepage='lftp -f ~/.bin/update-homepage.lftp'   update-homepage.lftp:   connect home.ustc.edu.cn user myname   mirror -R -e ~/public_html public_html --exclude book/ --exclude bak/   在这个 lftp 脚本中，首先连接服务器，然后使用 mirror -R 来将本地的~/public html 目录同步到服务器上的 public html 中，在我本地的目录中有 bak 目录，我不希望同步上去，就将它排除掉，另外 book 目录比较大，希望自己手动管理同步，所以也排除了。如果在服务器上有一个目录，本地没有，也可以将其排除，以免同步时被删除。   以后本地文件修改之后，只需要执行   update-homepage   即可完成同步工作。也可将 lftp -f ~/.bin/update-homepage.lftp 这条命令写入crontab，每天自动同步。  ","categories": [],
"tags": [],
"url": "/wiki/linux_digest/lftp/",
"teaser": null
},{
"title": "手把手读书报告",
"excerpt":"来自：黄若山   书在前面的部分可以说是 LFS 的中译版本。如何搭建 Linux 其实就是利用现有的 Linux 系统和 gcc 编译器，编译得到一个不再依赖原有系统的 Linux。这依赖其实最主要的就是 Glibc 了。其实整个过程对我来说，在两次编译 gcc 的过程是最美妙的，其他的就是源码安装软件而已。   所以我就说说我对如何得到全新 gcc 这个过程理解。   glibc 是个独立依赖的库，它只和内核提供的接口有关，不再依赖其他文件。gcc 在编译软件时，可以只使用 glibc 完成编译过程。所以要实现整个新系统的独立，只要用新 gcc 使用新的 glibc。这个过程的实现是先用旧的 glibc 和 gcc（记为 glibc1、gcc1），gcc1+glibc1=gcc2, gcc2+glibc1=glibc2, glibc2+gcc2=gcc3, gcc3+glibc2=最终环境所需要的独立编译环境。(这个过程是否正确我不确定，待我细学后继续……）   在编译那个过程后其实就是自己装软件，最后编译内核，配置相应文件，grub，启动新系统……   我觉得要折腾就折腾前面那部分，然后看看最后的配置文件，比如 rc.conf、udev 等等的就可以了。全部做下来耗时，没什么意义。除非自己作精简系统。   做完这个之后，其实和安装 Gentoo 有点像……   讲讲我看到的一些技巧吧（给新手看的……）：       - 多核电脑make的时候，可以make -jN(注：N=CPU核心数目×2+1）1,速度一般要会快很多。     - 自己编译软件时，可以把目标设成~/.bin/local/***;但是不要把对应的可执行文件目录export到PATH;而是把~/.bin/bin添加进PATH，然后把所有可执行文件链接到~/.bin/bin里面。这和最原始的包管理有点像（书说的）。   书的后半部分除了交叉编译和 hurd 内核和前面的有点相似外，其他的两个部分是 LiveCD 和 USB Live OS 的制作。   对于那两个 Live 系统的制作是很值得一看的，里面见了很多启动的细节，跟在前面编译完目标系统之后。其实在编译目标系统时，基本没什么意思。后面我觉得更有用。后半部分主要讲了 initrd 和 initramfs 的两种辅助系统的启动方式，对于想大致了解下系统是怎么启动的（跳过引导的细节），还是很有帮助的。至少它让你懂得如何问真正关于系统启动的问题了。以后你应该不会直接问“电脑是怎么启动的？”，而是“系统启动内核后是怎么样启动外围设备的？”。这就是好书的作用了，它要么使你完全懂得你想要的所有细节，要么使你学会如何正确有效地提问、搜索。   在后面部分，也捡到了一些小技巧，还是供新手参考的：           如何在一个分区上面同时有两个挂载点？如把 home 和 opt 挂到一个分区         答案是Aufs。                  把经常用的文件，读写非常非常密集的文件放到 tempfs 上，即先 mount -t tmpfs tmpfs /mnt;cp                用镜像文件保存自己的 home 常用配置。                      mount -t tmpfs tempfs /mnt           dd of=/mnt/home.img if=/dev/zero -bs=10M -count=10           mke2fs -t ext3 /mnt/home.img           mount -o loop /mnt/home.img /somewhere           cp ~/* /somewhere/                   这样就可以在其他电脑上快速挂载自己的配置，也不用拷贝很多文件了。只要把那个镜像带着就行。                  ","categories": [],
"tags": [],
"url": "/wiki/linux_digest/reading_notes/ruoshan-lfs-read-notes/",
"teaser": null
},{
"title": "读书笔记：关于维护服务器的一些技巧",
"excerpt":"寒假读了三本书《LINUX SERVER HACKS 卷二》《实战 Nginx：取代 Apache 的高性能 Web 服务器》《Linux 服务器性能调整》，简单地了解了些 linux 服务器维护和管理上的技巧。现在就分别简要谈谈我在读这三本书时的感受吧。   一：《LINUX SERVER HACKS 卷二》   首先，这不是一本工具书，而是一本经验集。书内都是很巧妙的一节一节的 linux 服务器维护技巧，主要目的是提高维护 linux 是的速度和鲁棒性。说实话，我不是很习惯这种模式的书，因为如果带着问题去读这本书，读完后还是问题，而本不是关心的部分，读完后也很快就忘了。  简言之，我懂这本书里得到的信息有：  一：linux 非常灵活，特别是结合 NFS 以及远程终端，可以做非常有想象力的事情。  二：在复杂的连线环境中记得使用 screen  三：脚本可以做几乎任何维护性质的事，而且事情的解决方案往往比你想得简单。  四：注意 uid，gid 重用可能带来的问题  五：Google 万岁   二：《Linux 服务器性能调整》   这本书翻译的不是很好，文法晦涩，而且介绍的东西偏深，很多是探讨内核级的优化。感觉看得不是很明白，简单写写吧。  一：关于服务器文件系统的选择：ReiserFS 鲁棒性很好，而且对小文件有最佳性能。XFS 针对大型文件有最佳性能。  二：一块硬盘上读取外侧磁道的速度要快于内侧磁道，所以分区是可以考虑这点将序号小的分区分配给经常读写的目录。譬如分区时第一个为 swap，第二个/var，再者/usr，最后才是根和/home  三：mount 文件系统时带上 noatime 可以提高一些性能。  四：文件系统在创建的时候可以调教一些参数优化性能  五：各类监控/tweak 工具：hdparam, iostats, top, vmstat   三：《实战 Nginx：取代 Apache 的高性能 Web 服务器》   这本书灌水的内容比较多，内容实际上也就是作者博客上的一些应用技巧的整理，可以总结的不多，因为按部就班的做就行了。  从书中看，nginx 的性能优于 apache，而且在反向代理方面特别有优势，这是它的亮点。Nginx 虽然支持 rewrite，自我感觉还是蛮好用的，但是不兼容 apache 的.htaccess，使用时需注意。  Nginx 的组件高度模块化，可定制性比较强，具体可在使用时疯狂 google。  对于使用 php+mysql 的场合，注意 php 使用 fastcgi 的方式启动，性能貌似比传统 cgi 要高不少，估计和 apache 的 module 差不多  书中没有提到什么值得一提的优化，具体实践的时候多 google 好了。对于硬件环境不好的服务器，减少 nginx 工作进程，打开 gzip 压缩和缓存，为 php 安装加速器并为低配置环境优化，数据库（例如 mysql）在配置时减少内存占用上限。选择 myisam 而不是 innodb。  简言之，这本书最大的作用就是让 nginx 变得平易近人大家都可尝试了。  ","categories": [],
"tags": [],
"url": "/wiki/linux_digest/reading_notes/snullp2011-winter-reading-notes/",
"teaser": null
},{
"title": "来自王光远同学的 emacs 读书笔记",
"excerpt":"作者：王光远   世上的知识有两类：一类习得困难却难以遗忘；另一类学习起来毫无压力，不过却难说真正掌握。Emacs 的使用应该就是后者的典范吧。本书通篇所述离不开键盘上的 ctrl、alt 和各个字母键，但是看来也仅限于此。所以不妨从使用的角度谈谈感想吧。精巧复杂的组合给 emacs 以强大的生命力，对光标的定位和文字的处理是编辑器的特色，但是不谙此道的新手可能有时还是忍不住用方向键和鼠标定位以求方便。   以前都是 C++惯了，寒假早想着学习一门新的语言，perl，兼练习 emacs 可谓一举两得。现在看来，虽然还是没有熟练到高手的地步，但是这样的过程我还是要推荐的，通过使用来熟练，使对编辑器的操纵成为手指的本能就是最好的学习方式。emacs 的强大还在于脱离的鼠标的束缚，编程效率会有极大地提高。很多原本要用鼠标来定位、选择单词、复制删除查找等等的操作都可以用几个简单的组合键来完成。更不用说宏的批量处理能力了。刚开始的不习惯坚持下来就一定会在以后产生极大的生产力。   除了纯粹的编辑文本，有一种说法，emacs 是伪装成编辑器的操作系统，网上有专门的网站论述相关的内容，神马上网、日历、地图啊之类的，我就当做是奇技淫巧没有多加关注了，有好奇的同学可以看看。对于不同的编程语言，emacs 还有对应的模式，可以高亮关键字或者方便排版。 这也牵涉到编辑器定制的问题，多看看网上给的配置范例，慢慢的就会形成适合自己的方案了。   再回到书上。一、可以按照不同需求读不同的章节，前言有写特定的学习曲线。二、本书以 ESC 键代替 META 键，但是在美式键盘上实际上应该是 ALT 键，不要混淆就好。三、自己弄个常用命令的表贴在案头也应该不错，书后就有这样的活页，照着自制个好了。   就这么多了，多练就好，谁有用过的也想听到你们的感想~  ","categories": [],
"tags": [],
"url": "/wiki/linux_digest/reading_notes/wang-guangyuan-emacs-read-digest/",
"teaser": null
},{
"title": "《鸟哥的 Linux 私房菜 – 基础学习篇》读书笔记",
"excerpt":"寒假前从 USTCLUG 书库中借了这本《鸟哥的 Linux 私房菜 – 基础学习篇》。现还了，补上这篇读书笔记。   这本书很厚，却也只是 Linux 操作中的基础篇。想来，想熟悉甚至灵活运用 Linux，还有很多的东西要学，很长的路要走。寒假时间比较紧，匆匆忙忙将此书翻阅了一下，主要看了前面三部分：安装，文件，shell。还书时，略有些遗憾，主要是有些没看完，有些看了没记住。鸟哥说这不是一本手册，但我想，要是有这么一本通俗的、生动的手册也是不错的。   自己平时使用的是 Ubuntu，因为有图形界面，对命令的使用不熟悉的多。略跑题地说下我用图形界面的原因：一是好看，二是不会忘记某些选项（终端下我会忘记某些参数）。所以看着这边《鸟哥的 Linux 私房菜 – 基础学习篇》，对于我来说，有很多新的东西要去学，要去记。拿 Vim 那节来说，看完才发现 Vim 有好多功能！原本，我只是会一些简单的操作：替换，查找，保存。然而书中还介绍了很多命令：: n1,n2 w [filename] 可以选择性地保存部分内容； :sp 来分割窗口。这些都是以前不曾了解的。   总之，这本书从初学者的角度，很好地介绍了如何使用 Linux。当然这本书也可以发挥查漏补缺的作用。当然，想深入了解，这一本书还远远不够。   朱晟菁@USTCLUG   3/4/2013   来源声明   reading notes/zsj 鸟哥的 linux 私房菜 – 基础学习篇_读书笔记.txt · 最后更改: 2013/05/12 13:51 (外部编辑)  ","categories": [],
"tags": [],
"url": "/wiki/linux_digest/reading_notes/zsj_niao_linux_sfc_basic_readnote/",
"teaser": null
},{
"title": "screen",
"excerpt":"screen 命令是在服务器维护等场合非常有用的一个命令。  如果你有 ssh 到远程服务器的经历的话，你应该知道如果将终端关闭的话，里面正在运行的所有任务都会强制退出，这就导致你必须等待任务完成才能退出。  使用 screen 可以解决这个问题。其作用便是虚拟一个新的 tty 终端，并在远程登录的场合不会因为退出、网络连接不稳定而中断当前 shell。在执行耗时很长的操作、可能断网的操作、当前网络不稳定等场合使用十分方便。   主要命令   screen：开启一个新的虚拟终端。  screen -l：显示目前已有的虚拟终端  screen -r [pid]：连接之前断开的虚拟终端      为了方便记忆，也可以对虚拟终端进行命名：   screen -S foobar ：开启一个以 foobar 为名称的虚拟终端；  screen -r ：在当前仅有一个虚拟终端的情况下连接（attach）已有的虚拟终端，在有多个虚拟终端时效果同 screen -l；  screen -r foobar ：连接以前名为 foobar 的虚拟终端。   在虚拟终端中，按 ctrl+A 进入 screen 命令模式，此时再按 d 可以断开(detach)（但不终止）当前的终端。   其他命令请在 man screen 中查看。   .screenrc 脚本   # tar-bar hardstatus alwayslastline hardstatus string '%{=b}%{b}%-w%{.BW}[%n %t]%{-}%+w %=%{G}%C%A %Y-%m-%d' # 下面几个不知道是否可以使用……这个配置文件写的有些时候了～ # hardstatus string '%{=b}%{b}%-w%{.BW}%10&amp;gt;[%n %t]%{-}%+w%&amp;lt; %=%{G}%C%A, %Y-%m-%d' # hardstatus alwayslastline '%{Yk}%-w%{.Yk}%n %t%{-}%+w %=%{.w} %{.Yr}%1 ` %{.Yb}%2` M %{kY}%C' # hardstatus string \"%= %-w%L&gt;%{= BW}%n*%t%{-}%52&lt;%+w %L=\"   # 这个忘了是干啥的了～ # termcapinfo xterm|rxvt ti@:te@   # screen里面的所有进程退出，screen就自动退出 autodetach on               # default: on # # # 退出vim/nano之后自动刷新屏幕 # altscreen on # # # 启动等待，显示版本 msgwait 2 version # # 启动信息 startup_message off # default: on # # # 关闭beep报错 vbell off # # # 默认的shell，不设置的话就是bash # shell zsh # # ##    Keybindings    ## # # # F4关闭tab bindkey -k k4 kill # # F5新建tab bindkey -k k5 screen # # F6改标题 bindkey -k k6 title # # F7左边的tab bindkey -k k7 prev # # F8右边的tab bindkey -k k8 next   参考           http://linuxtoy.org/archives/screen.html            http://www.ibm.com/developerworks/cn/linux/l-cn-screen/            http://www.rackaid.com/resources/linux-screen-tutorial-and-how-to/            http://www.gnu.org/software/screen/manual/screen.html            http://magazine.redhat.com/2007/09/27/a-guide-to-gnu-screen/       来源声明   blog/screen.txt · 最后更改: 2013/04/29 08:04 (外部编辑)  ","categories": [],
"tags": [],
"url": "/wiki/linux_digest/screen/",
"teaser": null
},{
"title": "Linux 下关于硬盘 S. M. A. R. T 的相关操作",
"excerpt":"主要命令：smartctl，包 smartmontools 中的一个组件。  Ubuntu 可以通过 apt-get install smartmontools 来安装   常用命令：   有些硬盘需要先执行 smartctl /dev/sdX -s on 来开启硬盘的 S. M. A. R. T 信息访问   1. 查看硬盘的全部 S. M. A. R. T 信息   smartctl -a /dev/sdX   一个十分有用的命令，将给出许多有用的信息。  特别关注如下部分：  SMART Attributes：给出硬盘 S. M. A. R. T 数据的值，其中很多可以用来判断磁盘性能和健康状况以及寿命。  SMART Error Log：给出硬盘历史上最近的 5 次错误细节。较新的硬盘都不应有错误数据，如果此处有记录错误而并没有察觉到硬盘的问题，不能存有侥幸心里而应该进行全面的硬盘检查。  SMART Self-test log：给出硬盘历史上以及正在进行的自检的时间和结果。一块健康的硬盘不应在此处出现错误。   2. 执行硬盘自检   smartctl -t [long|short] /dev/sdX   将进行硬盘内置的离线自检，在自检过程中系统不受影响仍可正常操作。  一般使用 long（或 extended）进行自检，虽然时间较长但可以发现硬盘几乎 100%的错误，包括未使用的区块坏道以及表面错误等等。  自检的结果可以在 smartctl -a 或者 smartctl -l selftest 中查看   smartctl 的 GUI：GSmartControl，可以通过 apt-get 安装，图形操作十分直观。   更多信息请使用 man smartctl 查看。   来源声明   blog/smartmontools.txt · 最后更改: 2013/04/29 08:04 (外部编辑)  ","categories": [],
"tags": [],
"url": "/wiki/linux_digest/smartmontools/",
"teaser": null
},{
"title": "Linux 用户管理",
"excerpt":"Linux 用户管理涉及的文件   /etc/passwd   查看 passwd 的内容，每一行代表了一个用户例如第一行：   root:x:0:0:root:/root:/bin/bash   各个域的含义依次如下：用户名，密码，UID，GID，用户描述，home 目录，shell。   出于安全考虑，用户的密码被加密之后保存在/etc/shadow 中，参见对 shadow 文件的描述。因此，在 passwd 文件中，密码均为 x。   详细参见 man 5 passwd   /etc/shadow   这个文件为 root 所有，只有属于 root 组或者使用 sudo 权限才能读取此文件的内容。该文件中的内容不应该泄漏给他人，以防止破解。各个域的含义如下：   ::::::::  详细参见 man shadow  #### /etc/group  第一行内容示例：      root:x:0:  各个域的含义如下: 组名，组密码，组 ID，用户列表。  详细参见 man group  ### Linux 用户管理命令  #### adduser  通常使用 adduser 来直接创建用户账户。      adduser [-u uid] [-g gid] [-d home] [-s shell] username  参数解释如下：  - -u 直接给出 UID  - -g 直接给出 GID  - -d 直接将 home 目录设置为已经存在的目录  - -s 定义 shell 详细参见 man adduser  #### useradd  useradd 命令提供一种更低级也是更灵活的创建用户的命令。例如，创建一个用户，拥有 home 目录，shell 为 bash，具有普通用户权限，并且具有查看日志的权限，可以使用如下的命令      sudo useradd -c \"User Information\"  -G adm -m -s /bin/bash  username  - -c 添加描述  - -G 此命令创建的用户属于与其用户名同名的组，同时添加用户到 adm 组，使其具有读取日志的权限  - -m 创建默认方式的 home 目录  - -s 设置 shell  详细参见 man useradd  #### passwd  passwd 命令用于设置和更新密码。示例：      passwd username  这条命令为 username 修改密码。如果略去 username，则是给当前用户修改密码。  新版本的 Ubuntu 默认没有 root 密码，可以使用 sudo passwd 来设置 root 密码  示例：      passwd -e username  这条命令使得 username 的密码失效，当 username 下一次登录的时候，输入自己的密码之后，系统强制要求更换密码。这条命令很适合于管理员给新用户创建账户时使用。  更多内容，参见 man passwd  #### userdel  userdel 用于删除用户。示例：      userdel -r username  这条命令将删除 username 用户，-r 参数表示同时删除该用户的 home 目录及 home 目录下的内容。如果有邮件池(/var/mail/username)，则也一并删掉。  更多内容，参见 man userdel  #### 后记  用户管理命令对系统的影响重大，使用时需要相当谨慎。  ### 来源声明  blog/user_adm.txt · 最后更改: 2013/04/29 08:04 (外部编辑)  ","categories": [],
"tags": [],
"url": "/wiki/linux_digest/user_adm/",
"teaser": null
},{
"title": "读书笔记",
"excerpt":"读书笔记递交指南           发送任意格式文件到邮件列表（建议使用 PDF 格式）。            如果是链接的话，建议是长期有效的链接，如本 Wiki。不建议临时的个人博客，以及科大本科生的 FTP。            强烈建议将读书笔记记录在本 wiki 上，这样便于自己更改和管理。          更多文章，请访问 Linux 文摘     读书笔记列表   《浪潮之巅》                  笔记       作者                       《浪潮之巅》读书笔记       张静宁           《黑客与画家》                  笔记       作者                       《黑客与画家》读书笔记       sadhen                 《鸟哥的 Linux 私房菜 – 基础学习篇》读书笔记       zsj           《学习 GNU Emacs》                  笔记       作者                       来自王光远同学的 emacs 读书笔记       王光远                 Emacs 读书笔记       sadhen           《手把手教你构建自己的 Linux 系统》                  笔记       作者                       手把手读书报告       黄若山           《程序员的自我修养》                  笔记       作者                       《程序员的自我修养》读书笔记       boj           《Advanced Bash Scripting》                  笔记       作者                       ABS 读书笔记       sadhen           《完美应用 Ubuntu》                  笔记       作者                       《完美应用 Ubuntu》读书笔记       RaoYamin           《鸟哥的私房菜》                  笔记       作者                       鸟哥的私房菜读书笔记       未知          ","categories": [],
"tags": [],
"url": "/wiki/lug/book/booknotes/",
"teaser": null
},{
"title": "LUG 图书管理",
"excerpt":"以下信息或已过时，近期将进行新一版图书管理规定的修订   图书管理员特别提醒   什么时候借   想要阅读的同学可以直接来活动室。活动室在西区图书馆，最好在每周小聚之后随我们一同前往，其他时间也可以联系图书管理员。   借阅手续简明版   简单的说，我需要两个时间戳(邮件)，一个是你借书的时间，一个是你还书的时间。 在第一个时间戳上，请你附上你的个人信息。 在第二个时间戳上，请你附上你的读书笔记。   请这样这样撰写：                  第一封邮件的主题       [借阅] 《书名》                       第二封邮件的主题       [已还] 《书名》           接受捐赠           原则上最大程度的接受各种图书的捐赠，但希望图书内容与计算机科学或技术相关，或者和 LUG 相关，和 Linux 相关等。            接受的图书原则上希望完整，品相完好。            我们接受匿名或实名捐赠，对实名捐赠将会在 LUG 书库中写明捐赠者的个人姓名或单位名称，否则注明“匿名捐赠”。            所有捐赠图书，协会一经接受，即拥有对该图书的所有权和处理权，有权对图书进行出借，传阅等处理。在捐赠者未特殊声明的情况下，协会没有将捐赠图书交还捐赠者的义务。            捐赠者如果希望将所捐赠图书在离校时取回，需要在捐赠时声明，协会将在捐赠者离校时将图书交还捐赠者。如果图书出现丢失、损毁等，协会没有赔偿的义务。       借阅制度   为了使LUG 书库的图书能够得到充分利用，大家可以在 LUG 活动室阅读这些图书，也可以将图书借出活动室。借阅读书必须遵守本制度手册。   活动室阅读           阅读要求              任何人都可以前往活动室阅读图书，前往活动室前可以联系书库管理员，预约前往时间；有活动室钥匙的可以自行前往。           借出活动室           借阅要求                       原则上，只有加入 ustclug 邮件列表的同学才有资格将图书借出活动室阅读，出于管理上的考虑希望借阅的同学登记学生证或一卡通学号。                        每人每次只能借出两本图书，借出第三本图书时，必须将前一本归还活动室                        每本书每次最多只能借出两个月，超过两个月需要向协会申请续借，遇节假日可以顺延                        借阅图书的同学，在归还前必须提交一份或若干份图书报告，读书笔记可以是单独的文章，也可以是发表到自己博客的文章，或者其他形式的阅读笔记                        对于读书笔记的篇幅，内容，形式等没有任何强制性的要求，但是请不要让别的同学认为你是在 敷衍了事 。建议使用中文，英文或者别的一些计算机编程语言（对于很多这些书来说这可能是最好的方式）表达你的思想，但是希望作品本身易学易读并且和原书籍内容紧密相关。                        请勿在图书上作出勾画，涂改，加注笔记等不利于图书长期保存的动作（我们欢迎你把自己对这本书的理解写成读书笔记影响更多的人。），否则将被视为不欢迎借书的人。对于污损，丢失，撕坏或其他严重的破坏应在两个月内赔偿一本相同的书或者按原价两倍赔偿。                        借阅流程                       发邮件给书库管理员（目前的图书管理员是sadhen）预约要借的书目，约定时间前往活动室取书                        书库管理员编辑借阅记录记录借阅信息，借阅信息包括借阅者姓名、联系方式（邮件或者手机至少一个）、借阅时间、应还时间等                        续借流程                       在两个月期满前，如果不能阅读完，需要续借的，必须向书库管理员发邮件申请续借，并且在两月期满前至少提交一份读书笔记                        两个月期满前一周，如果借阅者未主动提出续借，书库管理员有责任通过短信或邮件方式提醒借阅者                        如果在借阅者申请续借前，已有其他同学申请预订同一本图书，则由书库管理员决定执行续借或者收回图书借给新同学（可以根据读书笔记的质量以及借阅者的借阅理由判定）                        归还流程                       向 ustclug 邮件列表发送读书笔记，可以是报告内容，也可以是自己的博文链接，或其他适当形式（也可以在阅读期间发送）                        发邮件给书库管理员，约定时间前往活动室换书（有活动室钥匙的，可以直接归还，并发邮件通知书库管理员）                        书库管理员编辑借阅记录，填写相关信息，包括归还时间、读书笔记链接等                        对于没有按规定提交读书笔记的，半年内不得再借出图书阅读                  ","categories": [],
"tags": [],
"url": "/wiki/lug/book/borrow_book/",
"teaser": null
},{
"title": "借阅记录",
"excerpt":"如欲借阅图书，请参阅图书借阅管理制度。   2023 年借阅记录                  书名       借阅者       联系方式       借阅日期       归还日期       备注                       七周七语言 理解多种编程范型       袁一玮       totoroyyw AT ustclug.org       2023-2-18       2023-3-7       -                 并行计算 结构·算法·编程       徐奥       xuao123 AT mail.ustc.edu.cn       2023-03-06       -       -                 人工智能 一种现代的方法 3ed.       徐奥       xuao123 AT mail.ustc.edu.cn       2023-03-06       -       -                 代数结构       方越       yuefang AT mail.ustc.edu.cn       2023-03-13       -       -                 信息论基础（第二版）       袁保杰       crabtux AT mail.ustc.edu.cn       2023-04-07       2023-05-31       -                 Intel 微处理器       袁保杰       crabtux AT mail.ustc.edu.cn       2023-09-01       -       -                 C++ Primer Plus(第六版)       封霁芩       smgj AT mail.ustc.edu.cn       2023-10-11       -       -           2022 年借阅记录                  书名       借阅者       联系方式       借阅日期       归还日期       备注                       人工智能 一种现代的方法 3ed.       胡清宇       hmsh@mail.ustc.edu.cn       2022-6-7       2022-6-14       -           2021 年借阅记录                  书名       借阅者       联系方式       借阅日期       归还日期       备注                       计算机组成与设计-硬件软件接口       蔡智臻       carbyne AT mail.ustc.edu.cn       2021-03-07       2021-09-04       -                 运筹学导论       蔡智臻       carbyne AT mail.ustc.edu.cn       2021-03-07       -       -                 Java 编程思想       彭炫超       xc1217 AT mail.ustc.edu.cn       2021-03-15       -       -                 从零开始学 Linux       彭炫超       xc1217 AT mail.ustc.edu.cn       2021-03-15       -       -                 具体数学（第二版）       蔡智臻       carbyne AT mail.ustc.edu.cn       2021-03-17       -       -                 计算机网络（第四版）       蔡智臻       carbyne AT mail.ustc.edu.cn       2021-03-17       2021-09-04       -                 编译原理（第二版）       徐怡       cqewxji1ella AT mail.ustc.edu.cn       2021-08-28       -       -                 机器学习       蔡智臻       carbyne AT mail.ustc.edu.cn       2021-09-03       -       -                 青春咖啡馆       袁一玮       totoroyyw AT ustclug.org       2021-11-25       2021-12-19       -           2020 年借阅记录                  书名       借阅者       联系方式       借阅日期       归还日期       备注                       陶哲轩实分析       王子博       hypercube AT 0x01.me       2020-01-07       2020-09-04       -                 概率论与数理统计       袁一玮       totoroyyw AT ustclug.org       2020-01-13       2020-09-02       -                 概率论与数理统计习题全解指南       袁一玮       totoroyyw AT ustclug.org       2020-01-13       2020-09-02       -                 人工智能-一种现代的方法       付佳伟       ibug AT ustclug.org       2020-08-25       2020-09-13       -                 并行计算-结构、算法编程       付佳伟       ibug AT ustclug.org       2020-08-25       2020-09-13       -                 并行计算-结构、算法编程       彭定澜       pdl AT ustclug.org       2020-08-25       -       -                 数据结构与算法分析       胡清宇       hmsh AT mail.ustc.edu.cn       2020-08-30       -       -                 数学物理方法习题全解       袁一玮       totoroyyw AT ustclug.org       2020-08-31       2020-09-02       -                 七周七语言 理解多种编程范型       罗丽薇       loliw AT ustclug.org       2020-09-04       2022-07-22       -                 随机过程 （第三版）       罗丽薇       loliw AT ustclug.org       2020-09-13       2021-03-15       -                 算法导论（第三版）       罗丽薇       loliw AT ustclug.org       2020-09-13       2021-03-15       -                 编译原理（第三版）陈意云 张昱       罗丽薇       loliw AT ustclug.org       2020-09-13       2021-03-15       -                 计算机网络-自顶向下方法（第七版）       罗丽薇       loliw AT ustclug.org       2020-09-13       2021-03-15       -                 计算机系统概论（英文第二版）       余致远       fishyu AT mail.ustc.edu.cn       2020-09-28       2020-12-21       -                 机器学习实战       余致远       fishyu AT mail.ustc.edu.cn       2020-09-28       2020-12-21       -                 鸟哥的 Linux 私房菜 基础学习篇       王若妍       wry2018zs AT mail.ustc.edu.cn       2020-10-01       2021-05-23       -           2019 年借阅记录                  书名       借阅者       联系方式       借阅日期       归还日期       读书报告(链接)                       操作系统概念 第七版 影印版       樊真幸       fanzhenxing AT mail.ustc.edu.cn       2019 年 3 月 1 日       2019 年 6 月 ? 日       -                 计算机组成与设计-硬件软件接口       樊真幸       fanzhenxing AT mail.ustc.edu.cn       2019 年 3 月 1 日       2019 年 6 月 ？ 日       -                 算法导论（原书第 3 版）       高志远       gaozhiyuan AT mail.ustc.edu.cn       2019 年 7 月 25 日       2019 年 9 月 1 日       -                 编译原理（第 2 版）       高志远       gaozhiyuan AT mail.ustc.edu.cn       2019 年 7 月 25 日       2019 年 9 月 1 日       -                 Haskell 趣学指南       张佳       jzhang19 AT mail.ustc.edu.cn       2019 年 8 月 31 日       2021 年 4 月 12 日       -                 计算机网络：自顶向下方法 第六版 影印版       樊真幸       fanzhenxing AT mail.ustc.edu.cn       2019 年 9 月 1 日       2020 年 1 月 9 日       -                 计算机网络：自顶向下方法 第四版 影印版       段志宇       wfp AT mail.ustc.edu.cn       2019 年 9 月 1 日       2020 年 1 月 9 日       -                 Head First Python       王子博       hypercube AT 0x01.me       2019 年 9 月 1 日       2019 年 11 月 11 日       -                 数学分析中的典型问题与方法       胡清宇       hmsh AT mail.ustc.edu.cn       2019 年 10 月 27 日       -       -                 电子技术基础 模拟部分（第六版）学习辅导与习题解答       袁一玮       totoroyyw AT ustclug.org       2019 年 9 月 10 日       2019 年 12 月 24 日       -                 C++ Primer 英文版（第 5 版）       龚平       gpzlx1 AT mail.ustc.edu.cn       2019 年 10 月 3 日       -       -                 算法导论（原书第 2 版）       汤力宇       lyrics_1117 AT mail.ustc.edu.cn       2019 年 10 月 13 日       -       -                 编译原理（第二版）（龙书）       又木       youmu1998 AT mail.ustc.edu.cn       2019 年 10 月 28 日       2020 年 8 月 31 日       -                 计算机系统概论（原书第二版）       袁一玮       totoroyyw AT ustclug.org       2019 年 10 月 31 日       -       -                 七周七语言 理解多种编程范型       王子博       hypercube AT 0x01.me       2019 年 11 月 1 日       2020-09-04       -                 数据结构与算法分析       王子博       hypercube AT 0x01.me       2019 年 11 月 1 日       2020-09-04       -                 鸟哥的 Linux 私房菜基础学习篇第三版       樊真幸       fanzhenxing AT mail.ustc.edu.cn       2019 年 12 月 18 日       2019 年 12 月 23 日       -           2018 年借阅记录                  书名       借阅者       联系方式       借阅日期       应还日期       归还日期       读书报告(链接)                       鸟哥的 Linux 私房菜 基础学习篇 第三版       金孜达       jzd AT mail.ustc.edu.cn       2018 年 12 月 9 日       2019 年 3 月 1 日       -       -                 Haskell 趣学指南       金孜达       jzd AT mail.ustc.edu.cn       2018 年 12 月 9 日       2019 年 3 月 1 日       -       -                 七周七数据库       杨永钰       yale1996 AT mail.ustc.edu.cn       2018 年 12 月 9 日       2019 年 1 月 10 日       -       -                 Head First Python       李晨宇       dev8708446 AT mail.ustc.edu.cn       2018 年 1 月 7 日       2018 年 6 月 29 日       -       -           2017 年借阅记录                  书名       借阅者       联系方式       借阅日期       应还日期       归还日期       读书报告(链接)                       鸟哥的 Linux 私房菜-服务器架设篇       李晨宇       dev8708446 AT mail.ustc.edu.cn       2017 年 10 月 29 日       2018 年 1 月 15 日       2018 年 1 月 7 日       -                 计算机取证       郑子涵       zzh1996 AT mail.ustc.edu.cn       2017 年 9 月 3 日       2018 年 1 月 15 日       2017 年 9 月 29 日       -                 计算机网络       郑子涵       zzh1996 AT mail.ustc.edu.cn       2017 年 9 月 3 日       2018 年 1 月 15 日       -       -                 密码编码学与网络安全       郑子涵       zzh1996 AT mail.ustc.edu.cn       2017 年 9 月 3 日       2018 年 1 月 15 日       -       -                 离散数学及其应用       郑子涵       zzh1996 AT mail.ustc.edu.cn       2017 年 9 月 3 日       2018 年 1 月 15 日       -       -                 深入理解 linux 内核       李嘉豪       ???       2017 年 3 月 4 日       2017 年 7 月 15 日       -       -                 计算机组成原理       李嘉豪       ???       2017 年 3 月 4 日       2017 年 7 月 15 日       -       -                 Haskell 趣学指南       王子博       wzb15 AT mail.ustc.edu.cn       2017 年 2 月 12 日       2017 年 7 月 15 日       -       -                 人工智能 一种现代方法 第二版       左格非       alkaid AT mail.ustc.edu.cn       2017 年 2 月 12 日       2017 年 7 月 15 日       -       -                 计算机体系结构       左格非       alkaid AT mail.ustc.edu.cn       2017 年 2 月 12 日       2017 年 7 月 15 日       -       -                 数据库系统导论       左格非       alkaid AT mail.ustc.edu.cn       2017 年 2 月 12 日       2017 年 7 月 15 日       -       -                 数据库系统导论       郑子涵       zzh1996 AT mail.ustc.edu.cn       2017 年 2 月 12 日       2017 年 7 月 15 日       2017 年 9 月 4 日       -                 并行计算-结构算法编程       郑子涵       zzh1996 AT mail.ustc.edu.cn       2017 年 2 月 12 日       2017 年 7 月 15 日       2017 年 2 月 20 日       -           2016 年借阅记录                  书名       借阅者       联系方式       借阅日期       应还日期       归还日期       读书报告(链接)                       深度探索 Linux 操作系统       任正行       zh2016 AT mail.ustc.edu.cn       2016 年 9 月 23 日       2017 年 1 月 23 日       -       -                 计算机系统概论       王子博       wzb15 AT mail.ustc.edu.cn       2016 年 8 月 29 日       2017 年 1 月 29 日       2017 年 2 月 12 日       -                 计算机系统概论(英文版)       王子博       wzb15 AT mail.ustc.edu.cn       2016 年 8 月 29 日       2017 年 1 月 29 日       2017 年 2 月 12 日       -                 Intel 微处理器       郑子涵       zzh1996 AT mail.ustc.edu.cn       2016 年 8 月 29 日       2017 年 1 月 29 日       2016 年 9 月 22 日       -                 设计模式       郑子涵       zzh1996 AT mail.ustc.edu.cn       2016 年 7 月 7 日       2016 年 9 月 7 日       2016 年 9 月 6 日       -                 SQL 沉思录       郑子涵       zzh1996 AT mail.ustc.edu.cn       2016 年 3 月 10 日       2016 年 5 月 10 日       2016 年 7 月 7 日       -                 鸟哥的 Linux 私房菜 基础学习篇 第三版       金孜达       jzd AT mail.ustc.edu.cn       2016 年 6 月 26 日       2016 年 12 月 31 日       2018 年 12 月 9 日       -           2015 年借阅记录                  书名       借阅者       联系方式       借阅日期       应还日期       归还日期       读书报告(链接)                       鸟哥的 Linux 私房菜 基础学习篇（第三版）       熊国鑫       xgx AT mail.ustc.edu.cn       2015 年 10 月 22 日       2015 年 12 月 22 日       2015 年 12 月 14 日       -                 学习 vi 和 Vim 编辑器       王嘉男       wjn2015 AT mail.ustc.edu.cn       2015 年 10 月 5 日       2015 年 12 月 5 日       -       -                 JavaScript 高级程序设计（第三版）       常震       ch888 AT mail.ustc.edu.cn       2015 年 3 月 26 日       2015 年 5 月 26 日       -       -                 CSAPP       sadhen       sadhen AT mail.ustc.edu.cn       2015 年 1 月 1 日       2015 年 3 月 1 日       2015 年 3 月 11 日       -                 计算机程序的构造和解释（第 2 版，翻译）       崔灏       cuihao.leo AT gmail.com       2015 年 1 月 1 日       2016 年 1 月 1 日       2015 年 12 月 18 日       -                 计算机网络（英文版·第 5 版）       左格非       alkaid AT mail.ustc.edu.cn       2015 年 1 月 24 日       2015 年 3 月 2 日       2015 年 3 月 2 日       -                 人工智能——一种现代方法(第二版) Artificial Intelligence - A Modern Approach       朱晟菁       zsj950618 AT gmail.com       2015 年 3 月 1 日       2015 年 8 月 1 日       -       -                 数据库系统导论       朱晟菁       zsj950618 AT gmail.com       2015 年 3 月 1 日       2015 年 8 月 1 日       -       -                 计算机网络：自顶向下方法（原书第 4 版）       曾键               2015 年 5 月 6 日       2015 年 8 月 1 日       -       -                 深入理解计算机系统       曾键               2015 年 3 月 7 日       2015 年 8 月 1 日       -       -                 程序设计语言原理(第 8 版)       张恒若       15665518450       2015 年 3 月 8 日       2015 年 5 月 8 日       2015 年 5 月 4 日       -                 编译原理·第二版       张恒若       15665518450       2015 年 3 月 8 日       2015 年 5 月 8 日       2015 年 9 月 1 日       -                 TCP/IP 详解(卷 1: 协议) TCP/IP Illustrated Volume 1: The Protocols       郑子涵       zzh1996 AT mail.ustc.edu.cn       2015 年 3 月 20 日       2015 年 9 月 1 日       2015 年 8 月 30 日       -           2014 年借阅记录                  书名       借阅者       联系方式       借阅日期       应还日期       归还日期       读书报告(链接)                       社交网站的数据挖掘与分析       邱康, PB12210020       -       2014 年 9 月 23 日       2014 年 12 月 23 日       2015 年 3 月 8 日       -                 密战——网络犯罪大追踪       boj       boj AT mail.ustc.edu.cn       2014 年 9 月 4 日       2014 年 11 月 4 日       2014 年 11 月 27 日       -                 用户体验要素       周星，PB11011066       zhou999 AT mail.ustc.edu.cn       2014 年 12 月 9 日       2015 年 2 月 9 日       2014 年 12 月 17 日       -                 浪潮之巅       张静宁，PB14203209       changchongning AT gmail.com       2014 年 9 月 18 日       2014 年 11 月 18 日       2014 年 11 月 25 日       浪潮之巅读书笔记                 学习 Vi 和 Vim 编辑器       于天泽，PB14206077       15656587996       2014 年 9 月 26 日       2014 年 11 月 26 日       2014 年 11 月 20 日       归还到东区                 Python 开发技术详解       李建伟, SC14011001       -       2014 年 9 月 23 日       2014 年 11 月 23 日       2014 年 11 月 20 日       -                 手把手教你构建自己的 Linux 系统       武慧友，SM14204033       18697555127       2014-09-26       2014-11-26       2014-10-25       -                 Programming Android       阴钰，PB13011038       18226611511       2014 年 9 月 26 日       2014 年 11 月 26 日       2014 年 11 月 25       -                 HTML5 与 CSS 3 构成指南       吴昊，PB14000207       markwh AT mail.ustc.edu.cn       2014 年 9 月 26 日       2014 年 11 月 26 日       2015 年 3 月 14 日       -                 鸟哥的 Linux 私房菜       王一凡，PB14011070       wyf123 AT mail.ustc.edu.cn       2014 年 9 月 26 日       2014 年 11 月 26 日       -       -                 计算机系统概论（英文版·第二版）       刘淼丰，PB14210114       15555432817       2014 年 10 月 12 日       2014 年 12 月 12 日       2015 年 1 月 28 日       -                 鸟哥的 Linux 私房菜（基础学习篇·第二版）       刘淼丰，PB14210114       15555432817       2014 年 10 月 12 日       2014 年 12 月 12 日       -       -                 Orange’S：一个操作系统的实现       张恒若       15665518450       2014 年 10 月 12 日       2014 年 12 月 12 日       2014 年 11 月 30 日       -                 PHP &amp; MySQL Web 网络编程       张恒若       15665518450       2014 年 10 月 12 日       2014 年 12 月 12 日       2014 年 12 月 20 日       -                 Git 权威指南       杨博远，PB13007333       073plan AT gmail.com       2014 年 10 月 13 日       2014 年 12 月 13 日       2014 年 12 月 13 日       -                 C++ primer       曾键，PB14011028       anonymousknight96 AT gmail.com       2014 年 10 月 19 日       2014 年 12 月 19 日       2015 年 3 月 15       -                 C 和指针       刘淼丰，PB14210114       musicbow AT 163.com       2014 年 10 月 23 日       2014 年 12 月 23 日       -       -                 鸟哥的 Linux 私房菜       张静宁，PB14203209       changchongning AT gmail.com       2014 年 11 月 27 日       2015 年 1 月 17 日       2015 年 3 月 1 日       -                 学习 GNU Emacs       张静宁，PB14203209       changchongning AT gmail.com       2014 年 11 月 27 日       2015 年 1 月 17 日       2015 年 3 月 1 日       -                 黑客与画家       张静宁，PB14203209       changchongning AT gmail.com       2014 年 11 月 27 日       2015 年 1 月 17 日       2014 年 12 月 26 日       -           2012 至 2013 年借阅记录                  书名       借阅者       联系方式       借阅日期       应还日期       归还日期       读书报告(链接)                       计算机组成与设计：硬件、软件接口（第 3 版）       Thomas Copper               2012 年 12 月 31 日       2013 年       -       -                 操作系统概念 7       sadhen       sadhen AT mail.ustc.edu.cn       2013/02/24       2013/04/24       -       -                 操作系统概念 6       jal       jal AT mail.ustc.edu.cn       2013/02/24       2013/04/24       -       -                 CSAPP(Chinese)       jxl       jxl888 AT mail.ustc.edu.cn       2013/02/25       2013/04/25       -       -                 计算机组成与设计：硬件、软件接口（第 3 版）       sadhen               2013/02/25       2013/04/25       2014 年 9 月       -                 Modern Operating System       jal       jal AT mail.ustc.edu.cn       2013/03/02       2013/05/02       -       -                 鸟哥（基础学习篇，第三版）       董小飞       xiaofeid AT mail.ustc.edu.cn       2013 年 9 月 15 日       2013 年 11 月 15 日       -       -                 操作系统概念（第六版）       董小飞       xiaofeid AT mail.ustc.edu.cn       2013 年 9 月 15 日       2013 年 11 月 15 日       -       -                 学习 GNU Emacs       李喵喵       -       2013 年 1 月 13 日       2013 年 3 月 13 日       2014 年       -                 C 语言程序设计       老祝               2012 年 12 月 31 日               2015 年（已还）       -                 科技想要什么       boj       bojieli AT gmail.com       2012-09-02       2012-11-02       不详（已还）       -                 人工智能       boj       bojieli AT gmail.com       2012-12-04       2013-02-04       2013-06-23       -                 鸟哥(基础学习篇)       朱晟菁       zsj950618 AT gmail.com       2012-12-08       2013-02-08       2013 年       鸟哥的linux私房菜–基础学习篇_读书笔记                 Node.js 开发指南       林太星               2012-12-24       2013-02-24       2013-05-12       -                 《黑客与画家》       sadhen       sadhen1992 AT gmail.com       2012-12-31       2013-03-01       2013-01-12       《黑客与画家》读书笔记                 《Git 权威指南》       sadhen       sadhen1992 AT gmail.com       2012-12-31       2013-03-01       不详（已还）       -                 失控: 全人类的最终命运和结局       jxl       jxl888 AT mail.ustc.edu.cn       2013-02-25       2013-04-25       2013-05-27       -           2011 借阅记录                  书名       借阅者       联系方式       借阅日期       应还日期       归还日期       读书报告(链接)                       系统管理指南 Apache       张昊翀       solomon DOT zhc AT gmail DOT com       2010.12.13       2011.2.16       2011.1.9       读书报告                 学习 GUN Emacs       王光远 SA08006038       ieee AT mail.ustc.edu.cn 13696544286       2011.1.6       2011.3.6       2011.3.3       读书报告                 手把手教你构建自己的 Linux 系统       孙锡麟       s.sn.giraffe AT gmail.com       2011.1.6       2011.3.6       2011.2.23                         《深入理解 Linux 内核》第三版       孙锡麟       s.sn.giraffe AT gmail.com       2011.2.23       2011.4.23       2011.4.16                         手把手教你构建自己的 Linux 系统       黄若山       ruoshan612 AT gmail.com       2011.2.25       2011.4.25       2011.4.25                         程序员的自我修养       黄若山       ruoshan612 AT gmail.com       2011.4.23       2011.6.23       2011.5.5                         鸟哥的私房菜       Null       -       2011.4.23       2011.6.23                                 Gnu Emacs       Godson       -       2011.4.28       2011.6.28                                 Linux 设备驱动程序       Armnotstrong       -       2011.5.12       2011.7.12                                 python 开发技术详解       yanfeng       -       2011.5.23       2011.7.23                                 鸟哥的私房菜       袁哲，pb09210049       -       2011.6.28       2011.8.23                                 完美应用 Ubuntu       饶亚民；学号：PB09210173       -       2011.6.28       2011.8.23                          ","categories": [],
"tags": [],
"url": "/wiki/lug/book/borrow_history/",
"teaser": null
},{
"title": "LUG 书库",
"excerpt":"目前 LUG 活动室有一些 Linux 系统相关比较经典的书籍，有一部分是 LUG 购买的，有一部分是网友捐赠的。   我们同时非常欢迎童鞋们将自己手头不再需要的好书捐献出来。捐赠图书可以联系我们。   关于如何借阅，如何捐赠等问题可以参阅：图书借阅管理制度   借阅记录与黑名单：借阅记录   读书笔记汇总：读书笔记   给 LUG 书库推荐好书：联系图书管理员   书单   书单的分类比较粗糙，有改进意见请联系图书管理员   以下信息可能已经过时，请访问新版 LUG 书库：https://library.ustclug.org/   Linux 入门                  书名       作者       定价（￥）       备注       借阅情况                       鸟哥的 Linux 私房菜 基础学习篇(第二版)       鸟哥       65       3 本   LUG 购置 2   QuITh 网友捐赠 1       借出 1 本                 鸟哥的 Linux 私房菜 基础学习篇(第三版)       鸟哥       88.00       2 本   LUG 购置       借出 2 本                 完美应用 Ubuntu       Ubuntu China       55       LUG 购置       -                 从零开始学 Linux       粱丽平、马飞       45       lizitian 捐赠       -           Linux 服务器运维                  书名       作者       定价(￥)       备注       借阅                       鸟哥的 Linux 私房菜 服务器架设篇(第二版)       鸟哥       88.00       QuITh 捐赠       -                 鸟哥的 Linux 私房菜: 服务器架设篇(第三版)       鸟哥       108.00       2 本 LUG 购置       已借出 1 本                 Red Hat Linux 9.0 基础教程       黄丽娜等       38.60       网友捐赠       -                 LINUX 网络管理员指南(第二版)       OLAF KIRCH TERRY DAWSON       59.00       网友捐赠       -                 Solaris 8 技术大全       Paul A. Watters Sriranga Veeraraghavan       48.00       网友捐赠       -                 Solaris8 网络管理员认证培训指南       Refeeq Rehman       55.00       网友捐赠       -                 系统管理指南 Apache       Mark Arnold Jeff Almeida       36.00       网友捐赠       -                 构建可扩展的 Web 站点       Cal Henderson       58.00       会员捐赠       -                 构建高性能 Web 站点: 改善性能和扩展规模的具体做法       郭欣       59.00       会员捐赠       -                 高性能 Linux 服务器构建实战: 运维监控、性能调优与集群应用       高俊峰       79.00       LUG 购置       -                 BackTrack4: 利用渗透测试保证系统安全       阿里       59.00       LUG 购置       -                 红旗 Linux 用户基础教程       红旗软件工作室       18.00       会员捐赠       -                 Linux 命令行与 shell 脚本编程大全(第 2 版)       Richard Blum &amp; Christine Bresnahan       99.00       ewind 捐赠       -           Linux 内核                  书名       作者       定价（￥）       备注       借阅情况                       FreeBSD 技术内幕       -       88       网友捐赠       -                 Linux 0.01 内核分析与操作系统设计——创造你自己的操作系统       -       32       网友捐赠       -                 深入 Linux 内核架构   Professional Linux Kernel Architecture       莫尔勒       149.00       LUG 购置       -                 深入理解 Linux 内核（第三版，中文版）       Daniel P. Bovet       98       2 本，LUG 购置，stephen 捐赠       -                 深入理解 Linux 内核 第二版       Daniel P. Bovet       79       网友捐赠       -                 手把手教你构建自己的 Linux 系统（1CD）       孙海勇       65       网友捐赠       -                 Linux 设备驱动程序 第二版       -       69       网友捐赠       -                 Linux 设备驱动开发技术及应用       俞永昌       85       LUG 购置       -                 精通 Linux 驱动程序开发       Venkateswaran, S       99       LUG 购置       -                 Linux 设备驱动程序（第 3 版）       Jonathan Corbet et al       69.00       stephen 捐赠       -           代码编辑与管理                  书名       作者       定价（￥）       备注       借阅情况                       学习 GNU Emacs       Debra Cameron       68       网友捐赠       已借出                 Git 权威指南       蒋鑫       89.00       会员捐赠       已借出                 学习 vi 和 Vim 编辑器(中文版)(第 7 版)       罗宾斯       59.90       LUG 购置       1 本在东区                 学习 vi 编辑器(第六版)       Linda Lamb &amp; Arnold Robbins       43.00       不详       -           Linux/Unix 编程                  书名       作者       定价（￥）       备注       借阅情况                       Linux 程序设计       Neil Matthew       89       LUG 购置       -                 Unix 环境高级编程       W. Richard Stevens       99       3 本，LUG 购置       -                 Linux 高级编程       -       89       网友捐赠       -                 Linux 下的 C 编程       -       48       网友捐赠       -                 Linux 编程白皮书       -       39       网友捐赠       -                 Linux 编程权威指南       -       45       网友捐赠       -                 Linux 系统分析与高级编程技术       -       58       网友捐赠       -                 C/C++嵌入式系统编程       -       29       网友捐赠       -                 UNIX 编程环境（英文版）       Brain W. Kernighan et al       59.00       LUG 购置       -                 构建嵌入式 Linux 系统（第二版）       Karim Yaghmour et al       58.00       LUG 购置       -                 C++ Primer（第 4 版）       Stanley B. Lippman       99.00       stephen 捐赠       已借出           编程语言                  书名       作者       定价（￥）       备注       借阅情况                       C 程序设计语言(第 2 版新版)       克尼汉       20.70       LUG 购置       -                 C++编程规范（英文版）       -       42       网友捐赠       -                 面向对象程序设计，C++语言描述       -       48       网友捐赠       -                 Effective C++: 改善程序与设计的 55 个具体做法(第 3 版)(云风评注)       Scott Meyers       48.80       LUG 购置       -                 Effective C++: 改善程序与设计的 55 个具体做法(第 3 版)(英文版)       Scott Meyers       45.00       LUG 购置       -                 Python 开发技术详解       -       69       网友捐赠       -                 Advanced Bash Scripting       -       -       LUG 打印       -                 计算机程序的构造和解释（第 2 版，翻译）  Structure and Interpretation of Computer Programs       Harold Abelson 等       45.00       LUG 购置       已借出                 七周七语言：理解多种编程范型       Bruce A. Tate       59.00       LUG 购置       -                 松本行弘的程序世界       松本行弘       75.00       LUG 购置       -                 ANSI C99 Standard       ISO/IEC       打印       会员捐赠       -                 面向对象程序设计——C++语言描述       Martin Kalin, Richard Johnsonbaugh       48       不详       -                 超越 Java：探讨程序语言的未来       Bruce A. Tate       29.00       LUG 购置       -                 C 和指针       Kenneth A. Reek       65.00       LUG 购置       已借出                 程序设计语言概念（第 7 版影印）       Robert W. Sebesta       49.00       会员捐赠       -                 程序设计语言原理（第 8 版翻译）       Robert W. Sebesta       75.00       会员捐赠       已借出                 MATLAB R2012a 超级学习手册       史洁玉，孔玲军       69.00       会员捐赠       -                 UNIX shell 范例精解（第四版）       Ellie Quigley       118.00       会员捐赠       现在东区                 深入浅出 Python（中文版）   Head First Python       Barry       68.00       会员捐赠       -                 Java 编程思想 （第 4 版）       Bruce Eckel       108.00       boj 捐赠       -                 Python Cookbook（第二版）       Martelli &amp; Ravenscroft &amp; Ascher       99.00       ewind 捐赠       -                 Python Cookbook（第 3 版）       David Beazley &amp; Brian K. Jones       108.00       zhsj 捐赠       -                 Haskell 趣学指南       Miran Lipovaca 著，李亚舟、宋方睿译       69.00       boj 捐赠       -           网络编程                  书名       作者       定价（￥）       备注       借阅情况                       UNIX 网络编程. 卷 2: 进程间通信(第 2 版)       W. Richard Stevens       66.80       LUG 购置       -                 UNIX 网络编程. 卷 2: 进程间通信(第 2 版)       W. Richard Stevens       89       boj 捐赠       -                 UNIX 网络编程(卷 1): 套接字联网 API(第 3 版)       W. Richard Stevens       96.70       LUG 购置       -                 TCP/IP 详解(卷 1: 协议)   TCP/IP Illustrated Volume 1: The Protocols       W. Richard Stevens       45.00       LUG 购置       -                 TCP/IP 详解 卷 2：实现       Gary R. Wright                                         W. Richard Stevens       78.00       boj 捐赠       -                         TCP/IP 详解 卷 2 实现(英文版)       Gary R. Wright       69       网友捐赠       -                 用 TCP/IP 进行网际互联 第 3 卷       -       40       网友捐赠       -                 TCP 标准（RFC793）       -       打印       会员捐赠       -                 IPv6 详解 卷一：核心协议实现（英文版）       Qing Li       128.00       网友捐赠       -                 IPv6 详解（卷 2：高级协议实现）（英文版）       Qing Li       128.00       网友捐赠       -                 QoS 在 IOS 中的实现与应用       张国清       45.00       会员捐赠       -           文化与设计                  书名       作者       定价（￥）       备注       借阅情况                       数学之美       吴军       45.0       LUG 购置       -                 浪潮之巅       吴军       55.00       会员捐赠       已借出                 浪潮之巅       吴军       35.80       LUG 购置       -                 失控: 全人类的最终命运和结局       凯文·凯利       48.50       LUG 购置       unavailable                 黑客与画家: 硅谷创业之父 Paul Graham 文集       阮一峰       33.80       LUG 购置       已借出                 科技想要什么       凯文·凯利       40.00       LUG 购置       -                 UNIX 编程艺术（翻译）   The Art of UNIX Programming       Eric S. Raymond       59.00       会员捐赠       -                 设计心理学（翻译）  The design of everyday things       Donald Arthur Norman       30.00       会员捐赠       -                 用户体验要素（翻译，彩印）   The Elements of User Experience       Jesse James Garrett       39.00       会员捐赠       借出                 设计原本: 计算机科学巨匠 Frederick P. Brooks 的思考       布鲁克斯       37.70       LUG 购置       -                 Mathematics and Technology       Christiane Rousseau       打印       会员捐赠       -                 代码之美       Grey Wilson       99.00       boj 捐赠       -           Web 与移动开发                  书名       作者       定价（￥）       备注       借阅情况                       Node.js 开发指南       郭家宝       45.00       LUG 购置       已借出                 PHP 高级编程       Jesus Castagnetto       78       网友捐赠       -                 JavaScript 高级程序设计(第 3 版)       Nicholas C. Zakas       71.80       LUG 购置       已借出                 CSS 实战手册(第 2 版)       David Sawyer McFarland       52.40       LUG 购置       现在西区                 PHP4 网站构架精辟       -       42       网友捐赠       -                 PHP &amp; MySQL Web       -       48       网友捐赠       借出 1 本                 CSS 2.1 Specification       W3C       打印       会员捐赠       -                 HTTP/1.1 标准（RFC2616）       -       打印       会员捐赠       -                 XQuery 1.0 Specification       W3C       打印       会员捐赠       -                 HTML5 与 CSS3 权威指南       陆凌牛       69.00       会员捐赠       -                 精通 CSS：高级 Web 标准解决方案       Andy Budd       49.00       会员捐赠       -                 Programming Android（影印版）       Zigurd Medieks 等       88.00       LUG 购置       借出 1 本                 Android 应用开发揭秘       杨丰盛       69.00       LUG 购置       -                 Learning Android（翻译）       Marko Gargenta       49.00       LUG 购置       -                 SEO 艺术       Eric Enge 等       89.00       LUG 购置       -                 PHP 和 MySQL Web 开发（第四版）       Luke Welling &amp; Laura Thomson       95.00       ewind 捐赠       -                 CSS 权威指南（第三版）       Eric A. Meyer       58.00       ewind 捐赠       -                 HTTP 权威指南       David Gourley &amp; Brian Totty &amp; Marjorie Sayer &amp; Sailu Reddy &amp; Anshu Aggarwal       109.00       ewind 捐赠       -           数据库                  书名       作者       定价（￥）       备注       借阅情况                       MySQL 技术内幕–InnoDB 存储引擎       姜承尧       69.00       会员捐赠       -                 SQL 反模式（翻译）  SQL Antipatterns       Bill Karwin       59.00       会员捐赠       -                 SQL 沉思录（翻译）  Thinking in Sets – Auxiliary, Temporal and Virtual Tables in SQL       Joe Ceiko       49.00       会员捐赠       -                 MongoDB 权威指南（翻译）   MongoDB: The Definitive Guide       Kristina Chodorow 等       39.00       会员捐赠       -                 数据库系统导论       C. J. Date       75       会员捐赠       已借出                 数据库系统导论       C. J. Date       75.00       李朝晖捐赠       -                 数据库系统实现（英文版，第二版）       Hector Garcia-Molina 等       55.00       会员捐赠       -                 SQL Server 2012 从零开始学       王英英等       59.00       会员捐赠       -                 七周七数据库       Eric Redmond       59.00       会员捐赠       -                 数据库查询优化器的艺术       李海翔       89.00       boj 捐赠       -           学术与教科书                  书名       作者       定价（￥）       备注       借阅情况                       现代操作系统（第 3 版，英文）  Modern Operating Systems       Andrew S. Tanenbaum       69.00       会员捐赠       unavailable                 操作系统概念（第 7 版，翻译）  Operating System Concepts       Abraham Silberschatz 等       74.00       会员捐赠       已借出                 操作系统概念（第 6 版，翻译）  Operating System Concepts       Abraham Silberschatz 等       74.00       会员捐赠       已借出                 计算机网络（英文版·第 5 版）  Computer Networks       塔嫩鲍姆       99.00       LUG 购置       -                 计算机组成与设计：硬件、软件接口（第 4 版）  Computer Organization and Design       帕特森       99.00       LUG 购置       -                 计算机组成与设计：硬件、软件接口（第 3 版）  Computer Organization and Design       帕特森       75.00       会员捐赠       已借出                 搜索引擎–信息检索实践（英文）  Search Engines – Information Retrieval in Practice       W. Bruce Croft 等       45.00       会员捐赠       -                 机器视觉教程（英文）  Machine Vision       Wesley E. Snyder 等       49.00       会员捐赠       -                 计算机图形学（英文）  Computer Graphics       Steve Cunningham       36.00       会员捐赠       -                 云计算（第二版）       刘鹏       48.00       会员捐赠       -                 人工智能——一种现代方法(第二版)   Artificial Intelligence - A Modern Approach       拉塞尔等       89.00       LUG 购置       已借出                 数字设计和计算机体系结构（英文版）  Digital Design and Computer Architecture       哈里斯       65.00       LUG 购置       -                 MIPS 体系结构透视 See MIPS Run       斯威特曼       48.00       LUG 购置       -                 深入理解计算机系统(英文版, 第 2 版)       布莱恩特, 奥哈拉伦       85.00       LUG 购置       -                 深入理解计算机系统(原书第 2 版)       布莱恩特       65.60       LUG 购置       -                 深入理解计算机系统（修订版）       Randal E. Bryant       85       LUG 购置       unavailable                 Representation and Inference for Natural Language (Volume 1)       Patrick Blackburn et al       打印       会员捐赠       -                 Representation and Inference for Natural Language (Volume 2)       Patrick Blackburn et al       打印       会员捐赠       -                 计算机代数讲义       陈玉福       25.00       会员捐赠       -                 计算机图形学（第 3 版英文）       Donald Hearn       79.00       会员捐赠       -                 计算机系统概论（第 2 版英文）       Yale N. Patt       66.00       会员捐赠       借出 1 本                 计算理论导引（第 2 版）       Michael Sipser       36.00       会员捐赠       -                 交互式定理证明与程序开发（Coq）       Yves Bertot       59.00       会员捐赠       -                 数学建模（英文版）       Frank R. Giordano et al       65.00       会员捐赠       -                 操作系统概念（第 6 版）       Abraham Silberschatz et al       55.00       stephen 捐赠       已借出                 现代信息检索（英文版第 2 版）       Ricardo Baeza-Yates                                         Berthier Ribeiro-Neto       78.00       boj 捐赠       -                         信息论、推理与学习算法       麦凯       59.00       boj 捐赠       -                 Intel 微处理器       布雷       85.00       boj 捐赠       -                 计算机网络：自顶向下方法（原书第 4 版）       James F. Kurose                                         Keith W. Ross       66.00       boj 捐赠       已借出                         算法导论（原书第 2 版）       CLRS       85.00       boj 捐赠       -                 图像处理、分析与机器视觉（第 3 版）       Milan Sonka et al       69.50       boj 捐赠       -                 分布式系统概念与设计（英文版第 4 版）   Distributed Systems: Concepts and Design, Fourth Edition       库劳里斯       89.00       boj 捐赠       -                 分布式系统原理与范型（第 2 版 影印版）       Andrew S. Tanenbaum                                         Maarten van Steen       69.00       boj 捐赠       -                         计算机体系结构: 量化研究方法(英文版第 4 版)       John L. Hennessy                                         David A. Patterson       78.00       boj 捐赠       -                         软件工程: 理论与实践（第三版 影印版）   Software Engineering: Theory and Practice, Third Edition       Shari Lawrence Pfleeger                                         Joanne M. Atlee       48.00       boj 捐赠       -                         计算机网络（第五版）       Andrew S. Tanenbaum &amp; David J. Wetherall       89.50       ewind 捐赠       -                 具体数学：计算机科学基础（英文版，第二版）       Graham, Knuth, Patashnik       49.00       会员捐赠       -                 并行算法的设计与分析       陈国良       66.00       会员捐赠       -                 数据挖掘导论       朱明       36.00       会员捐赠       -                 分布式数据库系统及其应用       邵佩英       44.00       会员捐赠       -                 并行计算：结构·算法·编程       陈国良       36.50       会员捐赠       -                 数理逻辑       汪芳庭       22.00       会员捐赠       -                 组合数学引论       许胤龙、孙淑玲       33.00       会员捐赠       -                 数字信号处理       王世一       40.00       会员捐赠       -                 高等计算机网络：体系结构、协议机制、算法设计与路由技术       徐恪等       52.00       会员捐赠       -                 计算智能导论（第 2 版）       Andries. P. Engelbrecht       59.00       会员捐赠       -                 信息论与编码       姜丹       55.00       会员捐赠       -                 计算机网络（英文版，第五版）       Andrew S. Tanenbaum, David J. Wetherall       99.00       李朝晖捐赠       -                 Intel 系列微处理器体系结构、编程与接口       布雷       99.00       李朝晖捐赠       -                 操作系统概念（第七版，影印版）       Silberschatz       72.00       李朝晖捐赠       -                 数据挖掘导论（完整版）       Pang-Ning Tan / Michael Steinbach / Vipin Kumar       69.00       会员捐赠       -                 应用密码学：协议、算法与 C 源程序       Bruce Schneier       49.00       会员捐赠       -                 离散数学及其应用（第六版，英文版）       罗森       89.00       会员捐赠       -                 图论导引       Douglas B. West       59.00       会员捐赠       -                 数据挖掘概念与技术       Jiawei Han       55.00       会员捐赠       -           MISC                  书名       作者       定价（￥）       备注       借阅情况                       精通正则表达式（第三版）       Jeffrey E. F. Friedl       85       LUG 购置       -                 大话设计模式       程杰       45.00       会员捐赠       -                 程序员的自我修养：链接、装载与库       俞甲子、石凡、潘爱民       65       LUG 购置       -                 The Fallibility of Human Reason in Everyday Life       Thomas Gilovich       打印       会员捐赠       -                 A Rulebook for Arguments       Anthony Weston       打印       会员捐赠       -                 Asking the Right Questions - A Guide to Critical Thinking       M. Neil Browne et al       打印       会员捐赠       -                 Orange’s 一个操作系统的实现       于渊       69       不详                         软件开发的科学与艺术       张亚勤       38       不详       -                 社交网站的数据挖掘与分析       Matthew A. Russel       59.00       LUG 购置       已借出                 乐者为王（just for fun）       Linus Torvalds       20.00       stephen 捐赠       -                 密战 网络犯罪大追踪       Joseph Menn       39.00       同学捐赠       -                 ROOTKITS——Windows 内核的安全防护       GregHoglund JamesButler       39.00       同学捐赠       -                 CPU 自制入门       水头一寿 米泽辽 藤田裕士       99.00       boj 捐赠       -                 模式分类       Richard O. Duda       59.00       boj 捐赠       -                 数据仓库（原书第 4 版）       荫蒙       39.00       boj 捐赠       -                 LATEX 入门与提高（第二版）       陈志杰       47.20       boj 捐赠       -                 算法艺术与信息学竞赛       刘汝佳       45.00       boj 捐赠       -                 观止：微软创建 NT 和未来的夺命狂奔       G. Pascal Zachary       42.00       会员捐赠       -                 寒江独钓：Windows 内核安全编程       谭文 / 杨潇 / 邵坚磊       75.00       会员捐赠       -                 云计算与分布式系统：从并行处理到物联网       Kai Kwang 等       85.00       会员捐赠       -                 白帽子讲 Web 安全       吴翰清       69.00       会员捐赠       -                 计算机取证（英文版）       Dan Farmer       30.00       boj 捐赠       -           LUG 会员推荐购置图书列表   | 书名 | 备注 | | —- | —- |  ","categories": [],
"tags": [],
"url": "/wiki/lug/book/",
"teaser": null
},{
"title": "联系我们",
"excerpt":"官方邮件地址      您可以向我们直接发送电子邮件。   参与邮件列表讨论（推荐）   点击此处了解详情   Telegram 上的 LUG   加群链接见 jointele.ustclug.org 的 DNS TXT 记录   BBS 上的 LUG   前往瀚海星云 BBS Linux 版与我们讨论。   QQ 群上的 LUG   适合于即时性较强的讨论，较正式的讨论还请使用官方邮件列表。      QQ 群: 群号请查看 qq.ustclug.org 的 DNS TXT 记录。校内学生请联系管理员了解详情。   IRC 上的 LUG      网络：OFTC   频道：#ustclug   面对面交流   USTC LUG 在校内的活动室：      西区：西区图书馆 206 室   东区：东区图书馆 605 室（已搬迁）   高新校区：高新图书馆 604B 研讨室   你也可以在 LUG 举办的各类活动中找到 LUG 的成员并当面进行交流。   QQ 公众号   QQ: 2786229166      微信公众号   ID: ustclug  Name: 中科大 LUG      社交网络上的 LUG   快来关注 SNS 上的 LUG 账户吧！LUG 活动通告，Linux 使用技巧、业界新闻应有尽有！    注意：以下账号目前缺乏维护。      Twitter: @USTCLUG   人人：USTCLUG   豆瓣：科大 LUG   更多信息，请参阅LUG 宣传账号一览  ","categories": [],
"tags": [],
"url": "/wiki/lug/contact/",
"teaser": null
},{
"title": "Join us",
"excerpt":"加入 LUG   如果你是中国科学技术大学校内学生，欢迎通过学校统一组织的社团招新流程注册成为 LUG 会员。   在非招新活动期间，你也可以将自己的 真实姓名，学号，性别（可选），联系电话，邮箱 通过校内邮箱发送至我们（详见联系我们）登记注册。   提示：如果有加入科大「第二课堂」平台中的 LUG 社团的需要，请在邮件中特别注明。请注意，为了避免「幽灵社员」对社团管理带来的困扰，如果你在半年内未参加任何活动，或在一年内未曾参加全员大会/社员代表大会，你将会被移除出本社团在「第二课堂」平台中的名单。是否为「第二课堂」社团成员不影响参加 LUG 活动与讨论。   在登记信息后，欢迎通过以下方式与我们取得联系。在邮件回复中我们也会提供推荐的联系方式。   与 LUG 取得联系   详见联系我们   参与 LUG 活动   详见 LUG 活动   参与 LUG 项目   你可以：           在我们的邮件列表进行交流            在 LUG GitLab 与 GitHub 中为 LUG 项目贡献代码            联系管理员以加入服务器维护小组       我们的 issue tracker: https://github.com/ustclug/discussions  ","categories": [],
"tags": [],
"url": "/wiki/lug/contribute/",
"teaser": null
},{
"title": "Linux 101",
"excerpt":"Linux 101 活动在每年的春季学期举行，旨在帮助对 Linux 感兴趣的新手了解 Linux，学习 Linux。   举办过的 Linux 101 活动列表见 LUG 活动   历史活动      Linux 101 活动讲义   Linux 101 活动讲义仓库   历往 Linux 101 活动存档  ","categories": [],
"tags": [],
"url": "/wiki/lug/events/101/",
"teaser": null
},{
"title": "LUG 日历",
"excerpt":"目前使用Google 日历，如果您在国内访问遇到困难，请尝试使用 USTCLUG 提供的网络加速服务或者访问与此日历同步的 localendar 。   (活动的具体时间和地点可以通过点击活动查看详情获取）   也可将下面的 ics 地址加入其他日历软件中： ustclug.ics    ","categories": [],
"tags": [],
"url": "/wiki/lug/events/calendar/",
"teaser": null
},{
"title": "信息安全大赛",
"excerpt":"科大信息安全大赛自 2014 年起已经连续举办七届，往届比赛均顺利举行，规模盛大，影响甚广。每年的比赛在新生入学季举行，向新生倾斜，赛前有动员会，对基础较薄弱的同学进行一些指导，比赛题目控制难度梯度，强调引导和教育作用，除常规奖项外并设立新生特别奖等奖项鼓励同学们参加竞赛。考虑到同学们课业负担较重，比赛为期一周，在线上举行。   历年海报          相关链接      中国科学技术大学第七届信息安全大赛（2020）   中国科学技术大学第六届信息安全大赛（2019）   中国科学技术大学第五届信息安全大赛（2018）   中国科学技术大学第四届信息安全大赛（2017）   第三届中国科大信息安全竞赛（链接已失效）   第二届安全竞赛（存档）  ","categories": [],
"tags": [],
"url": "/wiki/lug/events/hackergame/",
"teaser": null
},{
"title": "LUG 活动",
"excerpt":"LUG 活动概述请移步 LUG 首页。   LUG 的所有活动均依照 社团章程 开展。   欢迎订阅 LUG 日历。   2016 年及之后的小聚就不在这里重复记录了，请移步每周小聚页面查看。   Latest Events                  日期       时间       地点       内容                       2023-10-28       12:00       线上（持续一周）       中国科学技术大学第十届信息安全大赛                 2023-10-27       19:00-20:30       西区 3C 101       Hackergame 赛前动员会                 2023-09-16       14:30-17:30       西区 3C 101       软件自由日                 2023-09-02       14:30       西区 3A 102       2023 秋季学期新生活力课堂           注意：LUD (Linux User Dinner) 均为自愿参加活动，活动费用由参加者分摊，不从社团任何经费报销。关于 LUG 的财务管理制度详情见：LUG 财务   Previous Events                  日期       时间       地点       内容                       2023-05-02       18:00       线上       LUG 全员大会 &amp; 劳动节主题团支部大会                 2023-04-22       14:30       线上       Linux 101 第二课：命令行介绍                 2023-04-02       14:30       西区 3C 101       Linux 101 第一课：Linux Install Party                 2023-03-19       14:30       西区 3B 103       第九届信息安全大赛颁奖典礼                 2023-01-12       12:00       线上（第一阶段和第二阶段各持续一周）       PKU HPCGame 0th (协办)                 2022-11-27       19:00       线上       LCPU x USTCLUG 联合沙龙                 2022-11-13       19:00       线上       LUG 全员大会                 2022-10-22       12:00       线上（持续一周）       中国科学技术大学第九届信息安全大赛                 2022-10-21       19:00-21:00       线上       Hackergame 赛前动员会                 2022-09-17       14:00-17:30       西区 3C 101       软件自由日                 2022-08-29       至 2022-09-02       西区第三教学楼、东区第二教学楼       2022 秋季学期新生系列活动                 2022-05-08       9:30-17:00       中区三号楼创新实践基地       复古计算和无线电展                 2022-04-17       14:30-16:00       线上       Linux 101 第三课：Linux 上的编程 Slides                 2022-04-03       14:30-17:30       线上       Linux 101 第二课：命令行基础 Slides                 2022-03-13       14:30-17:30       西区 3C101       Linux 101 第一课：Linux Install Party Slides                 2021-11-27       19:00-20:30       西区 3A212       Hackergame 2021 颁奖                 2021-11-17       16:30-17:30       西区 3C101       LUG 全员大会                 2021-10-23       12:00       线上（持续一周）       中国科学技术大学第八届信息安全大赛                 2021-10-22       19:00-21:30       西区 3C201       Hackergame 赛前动员会                 2021-09-25       14:30-17:00       西区 3C101       软件自由日                 2021-05-16       14:30-17:30       西区 3C101       Linux 101 第四课 Slides                 2021-04-28       14:30-18:00       西区 3A211       Linux 101 第三课 Slides                 2021-04-18       14:30-18:00       西区 3C104       Linux 101 第二课 Slides                 2021-04-11       14:30-18:00       西区 3C104       Linux 101 第一课 &amp; Linux Install Party Slides                 2020-12-06       19:30-21:00       西区 3A111       Hackergame 2020 颁奖                 2020-10-31       12:00       线上（持续一周）       中国科学技术大学第七届信息安全大赛                 2020-10-30       19:00-21:30       西区 3C104       Hackergame 赛前动员会                 2020-10-24       19:00-21:30       西区 3C102       LUG 全员大会                 2020-09-26       19:00-21:30       西区 3C103       软件自由日活动                 2020-09-17       19:00       东区 2121       新生活力课程                 2020-06-07       14:30-15:45       线上直播       Linux 101 第七课 Video                 2020-05-24       14:30-15:00       线上直播       Linux 101 第六课 Video                 2020-05-20       19:30-22:00       线上会议 (Zoom)       社员代表大会暨换届大会                 2020-05-03       14:30-15:30       线上直播       Linux 101 第五课 Video                 2020-05-03       14:30-16:30       线上直播       Linux 101 第四课 Video                 2020-04-12       14:30-15:40       线上直播       Linux 101 第三课 Video                 2020-03-29       14:30-15:55       线上直播       Linux 101 第二课 Video                 2020-03-15       14:30-15:55       线上直播       Linux 101 第一课 Video                 2019-11-09       14:45–17:00       东区 5203       （协办）红帽校园行：Linux 容器技术                 2019-10-13       14:00-15:30       西区 3C101       校友分享报告：AIot 简介                 2019-09-28       14:00-15:00       西区 3C101       全员大会                 2019-09-21       18:30-20:00       线下       Linux User Dinner                 2019-09-21       14:30-18:00       西区 3C102       Software Freedom Day                 2019-09-17       19:00-20:30       线下       Linux User Dinner                 2019-09-07       19:00-21:00       西区 3C110       新生活力课程：网络生活——效率与安全                 2019-08-31       19:30-20:30       西区 3C110       新生活力课程：Hello, linux!                 2019-07-12~14       -       西区 3C104       AOSCC                 2019-05-26       19:30-21:00       西图 303       换届大会                 2019-05-26       14:00-15:30       西区 3A102       Linux 101 第五课                 2019-05-12       14:00-15:30       西区 3C104       Linux 101 第四课                 2019-05-04       18:00-20:00       线下       Linux User Dinner                 2019-04-21       14:30-15:00       西区 3C104       全员大会                 2019-04-14       14:00-16:00       西区 3C104       Linux 101 第三课                 2019-04-05       9:00-16:00       蜀山森林公园       大蜀山春游                 2019-03-24       14:00-16:00       西区 3C104       Linux 101 第二课                 2019-03-10       14:00-17:30       西区 3C101       Linux 101 第一课&amp; Linux Install Party                 2019-01-03       19:30-20:30       西区 3A109       Hackergame 颁奖仪式                 2018-12-21       18:00-20:30       线下       LUD (Linux User Dinner)                 2018-11-29       21:00-22:00       西图活动室 206       社团发展讨论会                 2018-10-19       18:00-20:00       线下       LUD (Linux User Dinner)                 2018-10-09       12:00       线上（持续一周）       中国科学技术大学第五届信息安全大赛                 2018-10-08       19:30       西区 3C303       Hackergame 赛前动员会                 2018-09-15       14:30-17:30       西区 3C103       Software Freedom Day                 2018-09-09       19:30-22:30       西区 3A306       新生活力课程 环游密码学&amp;&amp;漫游计算机世界                 2018-09-08       19:30-22:00       西区 3A306       新生活力课程 计算机程序设计漫谈                 2018-08-25       19:30-22:00       西区 3A306       新生活力课程让大学生活效率腾飞：常用网络资源 简介 &amp; Linux: 你所知道的与不知道的                 2018-05-13       14:30-16:30       西区 3A108       Linux 101 第六课                 2018-05-06       14:30-15:30       西区 3A204       Linux 101 第五课                 2018-04-15       14:30-16:30       西区 3A204       Linux 101 第四课                 2018-04-08       14:30-16:30       二教 2204       Linux 101 第三课                 2018-03-25       14:30-16:00       西区 3A106       Linux 101 第二课                 2018-03-18       14:00-17:00       少年班学院机房       Linux 101 第一课 &amp;&amp; Linux install party                 2017-10-14       12:00       线上       中国科学技术大学第四届信息安全大赛                 2017-09-16       14:00-17:30       西区 3C301       软件自由日活动                 2017-06-17       ???       清华       参与 Debian Stretch Release Party                 2017-04-09       9:00-11:00       少年班学院机房       Linux Install Party                 2016-10-23       9:00-11:00       网络信息中心       参观网络中心                 2016-10-08       19:00-20:00       西区 3A       会员大会                 2016-09-15       14:30-16:30       西活学术报告厅       SFD                 2016-09-04       19:00-21:00       西区 3A，东区二教       招新 - 社团活力课程                 2016-04-25       11:30-12:30       东活广场       广场活动                 2015-12-12       15:00-16:30       西区 3A205 教室       小聚：Advanced C Programming                 2015-11-22       15:00-16:30       东区 2302 教室       小聚：初识 MongoDB                 2015-11-15       14:30-17:00       信息学院一楼机房       Linux 学术沙龙（信院）                 2015-11-07       15:00-16:30       东区 2302 教室       小聚：操作系统的引导——从 BIOS/MBR 到 UEFI                 2015-11-01       15:00-16:30       东区 2209 教室       小聚：Hello Firewalld                 2015-10-23       19:00-21:00       东区 5106 教室       小聚：Julia User Group Meetup #1                 2015-10-17       14:30-16:00       西区 3A205 教室       小聚：命令行生存指南                 2015-09-27       15:00-16:30       东区 2105 教室       每周小聚暨会员大会                 2015-09-19       14:30-17:00       西活学术报告厅       软件自由日                 2015-05-23       15:00-17:00       西区 3A204 教室       小聚：Hello Bitcoin                 2015-05-16       15:00-17:00       西区 3A202 教室       小聚：白帽子大赛，黑客不神秘                 2015-04-25       19:30-21:00       东图 118       换届会议                 2015-04-18       14:30-16:30       东区 2104 教室       小聚：永远的 autotools（一）                 2015-04-12       15:00-17:00       西区 3A202 教室       小聚：静态博客实践                 2015-03-21       14:30-17:00       东区水上报告厅       LaTeX 论文写作入门与进阶                 2015-03-07       12:30-21:30       东图 119、西活 329       女生节修电脑活动                 2014-12-13       19:30       东区 2103 教室       小聚：Tornado 开发简介与实例                 2014-12-07       14:30       西活学术报告厅       Linux User Party                 2014-11-22       14:30       东区 2103 教室       小聚：TeXmacs 入门讲座                 2014-11-16       08:30       校园网络中心       参观网络中心                 2014-11-08       15:00       西区 3203 教室       小聚：Clojure 简介                 2014-11-01       19:00       西区 2103 教室       小聚：你所不知道的 DNS                 2014-10-31       19:00       东图 119 活动室       docker 与 AngularJS                 2014-10-25       19:30       西区 3A111 教室       小聚：云上的服务，你我共享                 2014-10-19       15:00       东区 2103 教室       小聚：关于文件的种种魔法                 2014-10-12       14:30       西区 3A203 教室       小聚：Git 使用心得                 2014-10-01       08:30       东区活动室集合       登大蜀山                 2014-09-26       19:00       西区 3A203 教室       LUG 会员大会                 2014-09-20       14:00       东图四楼学术报告厅       自由软件日活动                 2014-05-19       11:30       东西活广场       趣味问答活动                 2014-04-20       19:00       翰海 e 舟       换届会议                 2014-04-07       08:30       合肥植物园       烧烤联谊                 2013-12-15       19:00       1203       小聚：GPG 及其使用经验                 2013-12-01       14:30       西区学术报告厅       Linux User Party                 2013-11-24       19:00       2506       小聚：从 Mirrors 主页谈现代网页设计理念                 2013-11-16       19:00       3204       小聚：UEFI 入门                 2013-11-10       19:00       2506       小聚：Linux 路由与 iptables 配置                 2013-11-02       19:00       3104       小聚：Latex 入门                 2013-10-26       19:00       2506       小聚：Doxygen 入门                 2013-10-20       19:00       3209       小聚：可爱的 Python                 2013-10-13       19:00       2506       小聚：编辑器之战                 2013-09-30       19:00       3124       小聚：Linux 入门基础知识                 2013-09-21       14:30       西区学术报告厅       SFD                 2013-05-11       14:30       西区学术报告厅       Ubuntu &amp; Debian Release Party                 2013-05-05       19:00       网络中心 402       小聚：TeXmacs 基础                 2013-04-28       19:30       LUG 活动室       换届会议                 2013-04-21       14:30       3121 教室       Linux 让一切变得简单                 2013-04-13       17:30       川徽饭店       LUD                 2013-04-06       19:00       少年班学院动手实验室、机房       小聚：来点硬 (件) 的，来点 (微) 软的                 2013-03-30       19:30       网络中心 402       小聚：Linux 奇巧淫技                 2013-03-30       17:30       川徽饭店       LUD                 2013-03-23       19:00       网络中心 402       小聚：搭建 Linux Web 服务器                 2013-03-17       19:00       网络中心 402       小聚：图书馆查询机系统的制作与启动过程                 2013-03-09       19:00       网络中心 402       小聚：Bash: A Programmer’s Perspective                 2013-03-02       17:30       川徽饭店       新学期 LUD                 2013-01-12       19:30       西活 324 室       讲座：python2-networkx 可视化                 2013-01-05       19:30       西活 324 室       讲座：动态二进制插桩                 2012-12-29       19:30       西活 324 室       讲座：deb 包制作过程简介                 2012-12-22       19:30       西活 324 室       讲座：给开源编译器插入后门                 2012-12-15       19:30       西活 324 室       讲座：Linux From Scratch                 2012-12-08       19:30       西活 324 室       讲座：给进程打补丁                 2012-12-01       19:30       西活 324 室       LUG Services 讨论                 2012-11-24       14:30       东区水上报告厅       Linux User Party 资源汇总                 2012-11-17       19:30       LUG 活动室       USTC blog 讨论、LUP 筹办讨论                 2012-11-03       17:30       川徽饭店       LUG 项目与发展讨论                 2012-10-28       19:30       电二楼       参观可佳机器人实验室                 2012-10-20       19:30       西活 324 室       讲座：搜索引擎简介                 2012-10-14       09:00       科大网络中心       参观网络中心和超算中心                 2012-09-29       19:30       西活 324 室       交流：Linux Desktop App                 2012-09-22       14:30       3123 教室       LUG 会员大会                 2012-09-15       08:30       西活多功能厅       Software Freedom Day 软件自由日                 2012-09-08       19:30       LUG 活动室       SFD筹办讨论           从哪里知道 LUG 活动      LUG 邮件列表   瀚海星云 BBS Linux 版   QQ 群公告   QQ 公众号及微信公众号   Telegram 群聊   短信通知   如果是大活动，当然还有遍布东西区的海报啦~  ","categories": [],
"tags": [],
"url": "/wiki/lug/events/",
"teaser": null
},{
"title": "Linux Install Party",
"excerpt":"Linux Install Party 主旨在于推广和安装 Linux，宣传和鼓励开源和自由软件精神。活动可以让同学们亲身“无痛”体验 Linux 系统，在安装 Linux 环节有专人指导，同时可以交流了解 Linux 的相关知识。每次派对包含几个面向入门用户的讲座，手把手的安装，近距离的自由交流等环节。   历史活动      2010 年 Linux Install Party  ","categories": [],
"tags": [],
"url": "/wiki/lug/events/lip/",
"teaser": null
},{
"title": "Linux User Party",
"excerpt":"Linux User Party 在于为不同层次的 Linux 用户提供一个交流的平台。每次活动都会请到一些有经验的资深用户分享相关的 Linux 使用经验，创造多种多样的交流方式与途径，为校内乃至整个合肥地区的 Linux 用户提供一个交流平台。   历史活动      2014 Linux User Party 暨 Freeshell 用户交流会   2013 科大 LUG Linux User Party   2012 科大 LUG Linux User Party  ","categories": [],
"tags": [],
"url": "/wiki/lug/events/lup/",
"teaser": null
},{
"title": "LUG 活动海报",
"excerpt":"每周小聚展板模板      2015 白帽子信息安全竞赛      2015 LaTeX 讲座   2015_poster_clerk_ma.pdf   2014 Linux User Party     ","categories": [],
"tags": [],
"url": "/wiki/lug/events/poster/",
"teaser": null
},{
"title": "Software Freedom Day",
"excerpt":"自由软件日是在国际自由软件基金会（SFI）的领导下，由自由/开源软件爱好者自发筹集的非盈利性活动。旨在为自由/开源软件爱好者提供一个信息交流平台，以及联合各社区举办各种自由/开源软件活动。   科大 LUG 已经成功的连续几届举办了合肥站的自由软件日活动。活动得到了龙芯梦兰、龙芯俱乐部、中标软件、中科红旗、中国开源软件推进联盟、深度科技等公司、开源社区，以及合肥工业大学，安徽大学等兄弟院校的大力支持。活动邀请过多个在国内开源软件领域非常有影响力的嘉宾，如科大网络中心的张焕杰老师，北京 GUG 主席李震宁先生，上海 LUG 主席姚欣宇，从事 MIPS 开发的刘世伟先生等，带来了各种内容的主题演讲。     活动介绍   SFD，可译为“软件自由日”，顾名思义是对自由、开源软件的庆祝活动。USTC LUG 自 2010 年起每年举办合肥中科大站的自由软件日活动，获得了不错的效果，当然其中也离不开各个公司、兄弟院校、社团、社区的大力支持。   历史 SFD 活动记录   2023 年 SFD   2023 年 SFD 于 2023 年 9 月 16 日举办   时间：2023 年 9 月 16 日（周六）下午 2:30   地点：中国科大西区 3C101   全场直播回放：On LUG FTP                  讲者       主题       资料                       吴伟       《开源软件与 RISC-V：最好的相遇》       Slides (PDF)                 Integral       《我与自由软件》       Slides                 章翔       《OpenJDK8 backportint for RISC-V》       Slides                 沈达       闪电演讲：《墨客社区：如何构建和驱动开源社区》       Slides           2022 年 SFD   2022 年 SFD 于 2022 年 9 月 17 日举办   时间：2022 年 9 月 17 日（周六）下午 2:30   地点：中国科大西区 3C101   全场直播回放：On LUG FTP / Bilibili                  讲者       主题       资料                       张焕杰       《Home Assistant 使用体验》       Slides                 吴伟       《开源软件世界拥抱 RISC-V》       Slides (PDF),Slides (PPTX)                 贾枭       《大型软件开发与供应链安全》       Slides                 王凯帆       《开源 RISC-V 处理器的敏捷开发实践》       Slides                 陶柯宇       闪电演讲：《GNOME Wayland 使用体验：一个普通用户的视角》       Slides                 王永福       闪电演讲：《Fully Self-hosted Tailscale》       Slides           2021 年 SFD   2021 年 SFD 于 2021 年 9 月 25 日举办   时间：2021 年 9 月 25 日（周六）下午 2:30   地点：中国科大西区 3C101                  讲者       主题       资料                       蔡智臻       《WireGuard 入门》       Slides, Audio                 Zenithal       《MirrorZ：从镜像站到镜像站们》       Repo, Slides, Video                 曹嘉祺       《开源符号计算软件——Maxima 简介》       Slides, Demo, Video                 袁保杰       闪电演讲：《ConEmu 简介》       Slides, Video                 吴峰光       闪电演讲：《Nix 包管理器》       Slides, Video                 Zhou Zhiqiang       闪电演讲：《Chaos Mesh——光明正大地搞破坏》       Slides, Video           2020 年 SFD   2020 年 SFD 于 2020 年 9 月 26 日举办   时间：2020 年 9 月 26 日 (周六) 晚上 7:00   地点：中国科大西区 3C103                  讲者       主题       资料                       李威威       《PLCT 在 spike 和 qemu 开源项目上的工作》       Slides                 陈泳融       《Swift 项目概况与社区现状》       Slides                 明宇龙       《Bare metal main function in Rust for OS development》       Slides                 马凯       闪电演讲：《Emacs 简介》       -                 吴雨飞       闪电演讲：《TiddlyWiki 入门》       Slides by TiddlyWiki                 明宇龙       闪电演讲：《zsh 的插件管理器 - Antigen》       -           2019 年 SFD   2019 年 SFD 于 2019 年 9 月 21 日举办   时间：2019 年 9 月 21 日 (周六) 下午 2:30   地点：中国科大西区 3C102   活动内容：                  讲者       主题       简介       资料                       Darcy Shen       《GNU TeXmacs: A Free Scientific Editing Platform》               Slides (TeXmacs)                 Zibo Wang       《开源密码管理器 KeePass》               Slides                 Zitan Liu       《从 Makefile 到 Conan：手把手教你构建 C/C++ 项目》               Slides, Demo                 Keyu Tao       闪电演讲：《Chisel 简介：有趣的硬件编程语言》               Slides                 Jiawei Fu       闪电演讲：《Jekyll 介绍》               Slides                 Wenrui Li       闪电演讲：《开源游戏 Teeworlds》               Slides           2018 年 SFD   2018 年 SFD 于 2018 年 9 月 15 日举办   时间：2018 年 9 月 15 日 (周六) 下午 2:30   地点：中国科大西区 3C103   活动内容：                  讲者       主题       简介       资料                       Huanjie Zhang       《科大网络原理和 IPV6 介绍》               Slides                 DiXing Xu (Linux foundation)       《A Hands-On Tutorial on using fabric-sdk-py and writing your first dapp with fabric》               Slides                 Kai Ma       《我已阅读并同意：软件许可证简介》               Slides           2017 年 SFD   2017 年 SFD 于 2017 年 9 月 16 日举办   时间：2017 年 9 月 16 日 (周六) 下午 2:30   地点：中国科大西区 3C301   活动内容：                  讲者       主题       简介       资料                       Yaohua Wang (deepin)       《开源之道》                                 Zibo Wang       《分布式社交展望》               Slides                 Jean-Paul Smets       《开源 ERP 软件》                           2016 年 SFD   2016 年 SFD 于 2016 年 9 月 15 日举办   时间：2016 年 9 月 15 日 (周四) 下午 2:30   地点：中国科大西区活动中心学术报告厅   活动内容：                  讲者       主题       简介       资料                       Gefei Zuo       《开源通讯软件的加密》               Slides                 Bin Li       《Ubuntu 和 GNOME 桌面环境》               Slides                 Gefei Zuo       《出国网络加速服务架构》               Slides           2015 年 SFD   2015 年 SFD 于 2015 年 9 月 19 日举办。   若您对 SFD 中科大站活动感兴趣，欢迎参与到 SFD 活动中来！参加的方式很简单，不用报名，直接去就行！   时间：2015 年 9 月 19 日（周六）下午 2:30   地点：中国科大西区活动中心学术报告厅   下面是这次活动内容简介：                  讲者       主题       简介       资料                       Chao Ye       《What is OpenSouce – From an RedHat engineer’s view》                                 Roger Luo       《Julia —— 科学计算的银弹》               Slides           活动新闻稿：2015 软件自由日中国科大站   2014 年 SFD   2014 年 SFD 于 2014 年 9 月 20 日举办。   时间：2014 年 9 月 20 日（周六）下午 2:00   地点：中国科大东区图书馆四楼学术报告厅   下面是这次活动内容简介：                  讲者       主题       简介       资料                       崔灏       《Mirrors 是怎样炼成的》       从架构到技术，全面展示 Mirrors 背后的故事       Slides, Video                 刘世伟       《在 Linux 下开发电路板 PCB》       无论是日常应用还是行业需求，自由软件无处不在       Video                 阴钰       《Sage：集大成者》       Sage —— 一款强大的开源数学软件       Slides, Video                 张光宇       《Firefox OS 移动应用开发入门》       用 HTML5 来开发移动应用，一同走进 Firefox OS 的世界       Slides, Demo, Video                 张荣葳       《比安全更安全——GnuPG 简介》       用技术维护隐私，让互联网世界更为自由       Slides, Video           活动新闻稿：2014 自由软件日科大站   更早的 SFD      2013 自由软件日   2012 自由软件日   2010 年自由软件日（合肥站）   您可以在这里 找到更多历史活动记录。     SFD 官方介绍   以下内容来源为SFD 官方网站。简体中文翻译由 @hosiet 完成，且并非正式翻译。   SFD is a worldwide celebration of Free and Open Source Software (FOSS).   SFD 是一个全球范围的对自由及开源软件（FOSS）的庆祝活动。   Vision &amp; Objectives | 立场及意愿   Our vision is to empower all people to freely connect, create and share in a digital world that is participatory, transparent, and sustainable.   我们的目的是促使所有人能够自由地与一个积极参与的、透明的、可支持的数字世界相连，并创造、分享精神财富。   Objectives | 活动目的      To celebrate software freedom and the people behind it   To foster a general understanding of software freedom, and encourage adoption of free software and open standards   To create more equal access to opportunities through the use of participatory technologies   To promote constructive dialogue on responsibilities and rights in the information society   To be inclusive of organizations and individuals that share our Vision   To be pragmatic, transparent, and responsible as an organisation.        为软件自由及为软件自由奉献的人们庆祝；   培育人们对软件自由的普遍认知，并鼓励对自由软件和开放标准的采纳；   通过对吸引人积极参与的技术的应用来创造更多公平的成功机会；   促进关于信息社会中责任与权利的建设性对话；   包容吸纳同样持有我们的立场的组织与个人；   作为一个组织，务实、透明、负责任地开展工作。   Further Explanations | 活动说明   Our goal in this celebration is to educate the worldwide public about the benefits of using high quality FOSS in education, in government, at home, and in business – in short, everywhere! The non-profit organization Software Freedom International coordinates SFD at a global level, providing support, giveaways and a point of collaboration, but volunteer teams around the world organize the local SFD events to impact their own communities.   在这次庆祝活动中，我们的目标是让全球的公众认识到在各个地方使用高质量自由开源软件的好处，例如在教育行业、在政府机关、在家中、在公司办公时……简而言之，了解在所有地方使用这些软件的好处！一个特定的非盈利组织——Software Freedom International——在全球层面上对 SFD 活动进行组织协调，并提供信息支持、赠品支持及一定的工作协助。但实际上，这个活动需要依靠全球各地的志愿者队伍来组织本地的 SFD 活动，以此影响他们自己所处的社区。  ","categories": [],
"tags": [],
"url": "/wiki/lug/events/sfd/",
"teaser": null
},{
"title": "LUG 每周小聚",
"excerpt":"我们曾经……      我们曾经苦于学习 Linux 无门，   我们发现很棒的工具却难于上手，   我们想分享自己的心得却无人理会，   我们曾经四处询问却处处碰壁。   每周小聚！      每周我们选定一个主题和一位主持，   与您一同分享使用 Linux 的心得体会，   群策群力解决令人抓耳挠腮的问题，   共同发扬 GNU 文化，提高 Linux 水平。 自 2011 年 10 月起，每个周末都有每周小聚活动，由一位同学做技术分享演讲，欢迎所有师生参与。具体时间、地点和内容会在周四发到邮件列表和瀚海星云 BBS Notice/Linux 版上。   如果您希望讨论某个主题或主持小聚，欢迎加入 LUG 邮件列表   每周小聚的时间地点我们会通过 LUG 邮件列表、BBS Linux/Notice 版等处发出通知，请大家持续关注！   每周小聚的资料在这里：https://ftp.lug.ustc.edu.cn/weekly_party/   Notice   主讲人请注意：      毋忘上传 slides，越早越好(在愿意分享 slides 的前提下)  slides 的版权问题？   在 BBS Linux 发通知时，注意打上 LUG 标签   尽早编辑本 wiki，活动时间以本 wiki 为准   Time Table   Fall 2023                  时间       主持       地点       主题       讲稿                       2023-10-22 10:00       王永福       3A112       Git 简介与使用心得分享       Assets           Spring 2023                  时间       主持       地点       主题       讲稿                       2023-05-14 10:00       庄思源       线上       杂谈：基于大型语言模型（LLM）的聊天机器人       Video           Fall 2022                  时间       主持       地点       主题       讲稿                       2022-12-04 16:00       李博诚       线上       LUG 轻小聚       -                 2022-11-26 14:30       刘良宇       3C303       Node.js 介绍       Slides | Video           Spring 2022                  时间       主持       地点       主题       讲稿                       2022-05-11 16:30       陶柯宇       西区 3A108       Rust 简介       讲义           Fall 2021                  时间       主持       地点       主题       讲稿                       2021-12-18 19:30       王子博       线上       适合个人开发者的网站开发方案       Slides | Video                 2021-12-12 14:30       蔡智臻       3A108       网络资源介绍       Slides                 2021-12-12 14:30       陶柯宇       3A108       LUG 技术部介绍       Slides                 2021-12-05 19:00       赵作竑       3A212       Linux 桌面环境科普与美化       Slides | Video           Spring 2021                  时间       主持       地点       主题       讲稿                       2021-06-05 14:30       古宜民       3A108       PCB 设计与电子制作入门       Slides                 2021-03-31 16:00       明宇龙       3A108       前端开发概览                         2021-03-31 16:00       袁一玮       3A108       个人私有网络搭建                   Fall 2020                  时间       主持       地点       主题       讲稿                       2020-12-27 14:30       金泽文       3C101       Serverless Computing       Slides                 2020-12-27 14:30       古宜民       3C101       GRUB 和 Linux 启动修复       Slides                 2020-12-27 14:30       刘紫檀       3C101       Verilog OJ 简介       Slides                 2020-12-27 14:30       袁一玮       3C101       关于你的手机为什么充得这么慢这件事       Slides                 2020-12-27 14:30       明宇龙       3C101       Serverless 实践简介                         2020-12-13 14:30       明宇龙       3A109       并发与各语言实现       Slides Video                 2020-12-13 14:30       李文睿       3A109       用 telegraf-influxdb-grafana 监控你的机器       Video                 2020-12-13 14:30       陶柯宇       3A109       一个很简略的 Electron 简介       Slides Video                 2020-12-13 14:30       古宜民       3A109       Vivado 调试技巧       Video                 2020-12-13 14:30       付佳伟       3A109       静态博客与 LUG 新版主页       Video                 2020-12-13 14:30       郑子涵       3A109       x86 和 arm 之间内存模型的不同       -                 2020-10-17 17:30       李晨宇       3C102       游戏安全与 Cheat Engine 核心指北       Slides           Spring 2020                  时间       主持       地点       主题       讲稿                       2020-05-04 14:30       陶柯宇       线上直播       一个简单的 OpenResty 介绍       Slides Video                 2020-04-06 14:30       俞颉颃 &amp; 梁仪恩       线上直播       量子计算的基础概念       Slides &amp; Video                 2020-04-06 14:30       龚平       线上直播       众核时代，如何高效利用 CPU 资源？       Slides                 2020-03-22 14:30       古宜民       线上直播       PYNQ 简介与应用       Slides Video           Fall 2019                  时间       主持       地点       主题       讲稿                       2019-12-07 14:30       曾明亮       西区 3A110       How Org-mode Changed My Life       slides video                 2019-12-01 14:30       蔡文韬       西区 3A110       预测执行攻击及其补丁       notes slides                 2019-11-24 14:30       彭定澜       西区 3A110       C++ 黑魔法：模板元编程和编译期编程技术       slides                 2019-11-17 14:30       李文睿       西区 3A110       LaTeX 使用简介及经验分享       slides                 2019-09-17 17:30       张震       西区 3A311       构建系统、惰性求值与增量计算       slides video           Spring 2019                  时间       主持       地点       主题       讲稿                       2019-05-04 14:30       曹焕琦&amp;庄思源       西区 3C104       深度学习系统与 E 级超算概览       slides                 2019-03-17 14:00       何纪言       西区 3C102       Debug 经验分享       slides                 2019-03-02 19:00       何纪言       西区 3A102       NEBULA 战队 CTF Web       handout           Fall 2018                  日期       主持       主题       讲稿                       2018-12-09       何纪言       活动室参观小聚                         2018-11-30       郑子涵       区块链与智能合约原理浅谈                         2018-10-29       孙经纬       在大规模 GPU 集群上训练深度神经网络                         2018-09-22       沈达       Scala 在互联网金融中的应用       slides           Spring 2018                  日期       主持       主题       讲稿                       2018-05-27       曹焕琦       超级计算机       None                 2018-05-27       庄思源       高性能计算       slides                 2018-05-06       曾明亮       开源游戏 Teeworlds       Slides                 2018-05-06       马凯       面向并发世界的 Clojure       Slides                 2018-05-06       李文睿       GIMP 和 Inkscape 初探       无                 2018-05-06       隆晋威       C++17 实现类型安全的 printf       Code                 2018-04-01       马凯       Emacs 操作系统       slides                 2018-04-01       李嘉豪       Vim 基础       slides                 2018-03-11       王子博       Github Pages 搭建个人主页       PDF                 2018-03-04       郑子涵       密码学科普       PDF           Fall 2017                  日期       主持       主题       讲稿                       2017-12-03       曹焕琦       微软开源生态       -                 2017-11-05       李嘉豪       GDB 调试的艺术       Slides           Spring 2017                  日期       主持       主题       讲稿                       2017-06-03       杨博远       Git 使用入门与提高技巧       Slides                 2017-05-14       李文睿       Linux 入坑经验分享会       Slides                 2017-04-30       金孜达       椭圆曲线加密算法浅谈       Slides Video                 2017-04-15       高一凡       从 iptables 到 nftables，Linux 网络防火墙原理与应用       Slides                 2017-04-02       高一凡       Linux 网络配置大管家 iproute2 ，Linux 网络配置基础       Video           Fall 2016                  日期       主持       主题       讲稿                       2016-12-18       庄思源       高性能计算                        2016-12-11       杨博远       Reproducible Builds in Debian       PDF                 2016-12-04       张震       g Summer of Code       PDF                 2016-11-13       高一凡       Hello OpenPGP       PDF           Spring 2016                  日期       主持       主题       讲稿       视频                       2016-05-02       王子博       树莓派智能小车                                2016-04-17       张光宇       Python 异步编程                                2016-04-03       高一凡       Hello Docker II       HelloDocker2.pdf                         2016-03-27       崔灏       密码学的故事       Text       World Without Java           Fall 2015                  日期       主持       主题       讲稿                       2015-12-12       郑子涵       Advanced C Programming                        2015-11-22       张光宇       初识 MongoDB       PDF                 2015-11-15       杨博远       Meet With Linux       PDF                 2015-11-07       崔灏       操作系统的引导——从 BIOS/MBR 到 UEFI       作者的 SSD 炸了                 2015-11-01       高一凡       Hello Firewalld       PDF                 2015-10-23       罗秀哲       Julia User Group Meetup #1       无                 2015-10-17       杨博远       命令行生存指南       Texts           Spring 2015                  日期       主持       主题       讲稿                       2015-05-23       高一凡       Hello Bitcoin       Slides                 2015-05-16       李博杰       白帽子大赛，黑客不神秘                        2015-04-18       杨博远       永远的 autotools （一）       Slides                 2015-04-12       王译锋       静态博客实践       Slides           Fall 2014                  日期       主持       主题       讲稿       视频                       2014-12-13       康雷       Tornado 开发简介与实例       Slides                         2014-11-22       沈达       TeXmacs 入门讲座       Slides Source Code                         2014-11-08       张光宇       Clojure 简介       Slides       Video                 2014-11-01       张荣葳       你所不知道的 DNS       Slides       Video                 2014-10-25       李博杰       云上的服务，你我共享       Slides                         2014-10-19       崔灏       有关文件的种种魔法       Slides                         2014-10-12       杨博远       Git 使用心得       Slides                   Spring 2014   本学期将小聚改为Linux 入门公开课。                  名称       讲者       文稿       视频                       第 1 课：What is Linux?       张荣葳       Slides       Video                 第 2 课：Linux 基本概念和安装指南       张光宇       Slides       Video                 第 3 课：图形界面 VS. 命令行界面       崔灏       Slides       Video                 第 4 课：认识各种各样的文件       张光宇       Slides       Video                 第 5 课：bash 基础       张荣葳       Slides       Video                 第 6 课：Linux 网络管理介绍       贾明皓       Slides       Video                 第 7 课：如何高效地找东西       张荣葳                               第 8 课：软件的安装与管理入门       杨博远       Slides       Video                 第 9 课：正则表达式基础       张恒若              Video           Fall 2013                  日期       主持       主题       讲稿                       2013-12-15       张荣葳       GPG 及其使用经验                         2013-11-24       李喵喵       从 Mirrors 主页谈现代网页设计理念                         2013-11-16       张光宇       UEFI 入门       slides                 2013-11-10       李博杰       Linux 路由与 iptables 配置                         2013-11-02       陆颖潮       Latex 入门                         2013-10-26       张光宇       Doxygen 入门                         2013-10-20       崔灏       可爱的 Python       slides                 2013-10-13       朱晟菁       编辑器之战                         2013-09-30       张荣葳       Linux 入门基础知识                   Spring 2013                  日期       主持       主题       讲稿                       2013-05-26       张光宇       零基础入门 AWK       slides                 2013-05-05       沈达       TeXmacs 基础       豆瓣 TeXmacs 小组                 2013-04-06       少院技术部       Linux 与 Windows 混合机房的无盘启动       slides1 slides2                 2013-03-30       张成       Linux 奇巧淫技       slides                 2013-03-23       李博杰       搭建 Linux Web 服务器       张成的 slides 李博杰的 slides                 2013-03-17       郭家华       图书馆查询机系统的制作与启动过程       slides                 2013-03-09       李博杰       Bash: A Programmer’s Perspective       slides code           Fall 2012                  日期       主持       主题       讲稿                       2013-01-12       沈达       python2-networkx 可视化       slides                 2013-01-05       彭飞       动态二进制插桩       –                 2012-12-29       张光宇       deb 包制作过程简介       pres.tar.xz                 2012-12-22       李博杰       给开源编译器插入后门 Reflections on Trusting Trust       project slides                 2012-12-15       张荣葳       Linux From Scratch       slides                 2012-12-08       赵希明       给进程打补丁       –                 2012-10-20       王晶晶       搜索引擎简介       slides                 2012-09-29       陈张       Linux Desktop App       slides           Spring 2012                  日期       主持       主题       简介       讲稿                       2012-05-27       李喵喵       HTML5       Lightweight JavaScript AVG Backport &amp; Customization                        2012-05-20       李博杰       用 git 进行版本控制       git 基本操作及其原理 git object hash，历史穿梭       slides                 2012-04-22       顾昊       正则表达式       正则表达式语法 在 sed、grep、python 中的应用                        2012-04-14       郭家华       iptables       iptables 原理 封包过滤、NAT 转发、指定出口 IP       slides                 2012-04-08       祝元宠       用 vim 进行 C++开发       vim 与 gdb 等的整合 vim 插件与资源，vim 键盘图       Vim 笔记                 2012-04-01       沈达       BreAk SHell, touch linux       Bash Scripting 如何使用文档和搜索来解决问题       slides                 2012-03-25       陈张       Linux 桌面环境的使用       原来我们可以完全用 Linux 工作       slides           Fall 2011                  日期       主持       主题       简介       讲稿                       2011-12-24       李喵喵       Jquery &amp; Ajax       jQuery 选择器、DOM、事件、动画       slides                 2011-12-18       李博杰       JavaScript       JS 基本语法，HTML DOM       –                 2011-12-10       李博杰       动态网站架构设计       Discuz! X 的目录结构、运行流程 模板与缓存机制       –                 2011-12-03       李博杰       关系数据模型设计       数据库表结构的设计模式       slides                 2011-11-26       李博杰       PHP       PHP 的 I/O、对象与数据库       slides                 2011-11-19       李喵喵       前端实战       网页设计原则与实战       slides                 2011-11-12       李博杰       PHP       PHP 的类型系统、语法与语义       –                 2011-11-05       李喵喵       CSS       CSS 与网页设计原则       slides                 2011-10-29       李喵喵       网页设计原则       设计的风格，网页设计的误区 设计基本原则之亲密性       slides                 2011-10-23       李博杰       PHP       PHP 语言基础       –                 2011-10-15       李博杰       HTML       HTML 网页基础       slides                 2011-09-24       李博杰       网络基础       网页载入流程，HTTP，TCP       slides                 2011-09-18       李博杰       网站开发绪论       技术概述       slides           网站开发讨论班有个单独的主页，点这里   其他周在干什么？   LUG 的活动很丰富的哦 :)  ","categories": [],
"tags": [],
"url": "/wiki/lug/events/weeklyparty/",
"teaser": null
},{
"title": "LUG@USTC 财务收支报告",
"excerpt":"2018 年换届后的财务报告由 LUG 电子账册自动生成，不再人工更新。本页面只为历史存档目的保留。   Debian/OSS 服务器维护专款                  时间       收支类型       数额（￥）       原因                       2005       收入       3072.5       科大 Debian 站募捐(其中 50$按照当时汇率折合成人民币 405.5 元) 捐赠情况查询»                 2005       支出       2620       购买新主机                 2005       支出       70       购买显卡(二手)                 2005       支出       260       购买新 UPS 电源                 2005       支出       122.5       转入活动经费                 2010 年 10 月       收入       122.5       由活动经费转入                 2011 年 1 月       收入       303.11       社区捐助 方式：支付宝                 当前结余（2013-01-05 更新）       -       425.61       -           LUG 活动经费   往年收支情况概览                  时间段       总收入       总支出       净收入       期末结余       备注                       2017.5-2018.4       12042.00       -10517.6       1524.4       5103.62       马凯、王子博交接                 2016.5-2017.5       2526.00       -4761.18       -2235.18       3579.22       金孜达、马凯交接                 2015.5-2016.5       5150.00       2181.30       2968.70       5814.40       崔天一、金孜达交接                 2014.5-2015.4       4750.00       -5534.00       -784.30       2845.70       -                 2013.10-2014.5       遗失                                                 2013 年下半年       2050.00       1647.00       +403       1724.30       2015 年后补                 2013 年上半年       2000.00       1628.50       +371.5       1321.30       -                 2012 年下半年       3785.00       4960.20       -1175.20       949.80       版衫垫付尚未结清                 2012 年上半年       1600.00       1419.00       +181.00       2125.00       服务器维护专款合并入活动经费                 2011 年下半年       5057.00       5018.80       +38.20       1210.20       -                 2011 年上半年       1369.00       877.50       +491.50       1172.00       -                 2010 年下半年       303.30       735.60       -432.30       677.50       -                 2010 年上半年       60.00       145.00       -85.00       1109.80       -                 2009 年下半年       250.00       1030.20       -780.20       1194.80       -                 2009 年上半年       -       -       -       1975.00       以前的财务记录不慎丢失           2017-2018 学年                  时间       收支类型       数额（￥）       经办人       事由                       2017-5-29       交接       ¥3579.22       金孜达 → 马凯       换届财务交接                 2017-6-24       收入       ¥2680.00       马凯，金孜达       LIP 与硬盘报销                 2017-6-27       收入       ¥1052.00       马凯，庄思源       MSC 经费转入                 2017-9-8       支出       ¥-500.00       马凯，崔灏，金孜达       版衫销售净收入                 2017-9-12       支出       ¥-75.00       马凯，李嘉豪       海报制作                 2017-9-13       支出       ¥-245.00       马凯，李嘉豪       海报制作                 2017-09-13       支出       ¥-114.00       马凯，李嘉豪       社团必要的运营管理经费                 2017-09-16       支出       ¥-106.40       马凯，李嘉豪       SFD 矿泉水                 2017-10-12       支出       ¥-160.00       马凯，王子博       海报制作                 2017-10-26       支出       ¥-690.00       马凯，王子博       GNOME Asia 交通费报销                 2017-10-31       收入       ¥10.00       马凯，金孜达       等效捐款                 2017-11-7       支出       ¥-215.20       马凯，王子博       活动室文件框、桌上书架、网线、交换机                 2017-12-29       收入       ¥300.00       马凯，李嘉豪       SFD 报销                 2018-3-20       支出       ¥-278.00       马凯，王子博       活动室收纳箱           2016-2017 学年                  时间       收支类型       数额（￥）       经办人       事由                       2016-5-1       交接       ¥5814.40       崔天一 → 金孜达       换届财务交接                 2016-5-4       支出       ¥-140.00       金孜达，崔灏       “信任与安全”网络安全主题活动购买展架                 2016-5-25       收入       ¥600.00       金孜达       “信任与安全”网络安全主题活动报销                 2016-8-29       支出       ¥-150.00       金孜达，左格非       2016LUG 社团活力课程                 2016-9-16       收入       ¥100.00       金孜达，王子阳       LUG 板衫购买                 2016-9-18       支出       ¥-40.00       金孜达，郑子涵       招新传单                 2016-9-18       支出       ¥-20.00       金孜达，崔灏       招新传单                 2016-9-18       支出       ¥-225.00       金孜达，左格非       SFD 海报                 2016-9-23       支出       ¥-50.00       金孜达       SFD 奖品光盘                 2016-9-27       收入       ¥100.00       金孜达，左格非       LUG 板衫购买                 2016-9-28       支出       ¥-143.80       金孜达       印制书籍                 2016-10-2       收入       ¥100.00       金孜达，李博杰       LUG 版衫购买                 2016-10-7       支出       ¥-131.30       金孜达，崔天一       月饼                 2016-10-24       收入       ¥1, 326.00       金孜达       SFD 报销                 2016-10-24       支出       ¥-58.00       金孜达，左格非       USTC Mirror 硬盘修复费用报销                 2016-12-22       支出       ¥-399.00       金孜达，高一凡       Mirrors 所需的 MicroSD                 2016-12-22       支出       ¥-916.68       金孜达，高一凡       Linode 虚拟机与域名                 2016-12-26       收入       ¥300.00       金孜达       社团活力课程财务报销           2015-2016 学年                  时间       收支类型       数额（￥）       经办人       事由                       2015/5/1       交接       2845.70       朱晟菁 → 崔天一       换届财务交接                 2015/5/24       支出       -700.00       崔天一，崔灏       Latex 讲座徽章报销，黑客比赛易拉宝报销，海报报销                 2015/5/27       收入       800.00       崔天一       CTF 黑客大赛团委报销                 2015/6/10       收入       400.00       崔天一，崔灏       五星级社团奖金                 2015/9/3       支出       -15.00       崔天一，张静宁       开会买水果                 2015/9/3       支出       -131.00       崔天一，张静宁       SFD 水果，零食，纸杯                 2015/10/19       收入       100.00       崔天一       招新报销                 2015/10/26       收入       1, 200.00       崔天一，崔灏       SFD 自由软件日团委报销                 2015/10/26       支出       -200.00       崔天一，崔灏       SFD 徽章 200 枚                 2015/10/26       支出       -160.00       崔天一，崔灏       SFD 海报                 2015/10/26       支出       -100.00       崔天一，崔灏       SFD 名片                 2015/10/26       支出       -25.00       崔天一，崔灏       SFD 奖品光盘                 2015/10/26       支出       -100.00       崔天一，崔灏       SFD 招新海报 10 张                 2016/1/3       支出       -300.00       崔天一，崔灏       Linux Install Party 海报 12*25                 2016/1/3       支出       -8.00       崔天一，崔灏       Linux Install Party 打印费                 2016/1/3       支出       -8.00       崔天一，崔灏       Linux Install Party 租三轮                 2016/1/3       支出       -175.30       崔天一，崔灏       Linux Install Party U 盘*10                 2016/1/3       支出       -54.80       崔天一，崔灏       Linux Install Party 奖品光盘                 2016/1/3       支出       -204.20       崔天一，崔灏       印制 LATEX python 文档等书籍                 2016/1/3       收入       2, 000.00       崔天一       Linux Install Party 团委报销                 2016/1/3       收入       600.00       崔天一       SFD 优秀项目团委奖励（未入账）                 2016/4/24       收入       50.00       崔灏、杨肇峰       2015 板衫购买           2014-2015 学年                  时间       收支类型       数额（￥）       经办人       事由                       2014/6/8       交接       3, 630.00       童献 → 朱晟菁       换届财务交接                 2014/6/8       支出       -550.00       朱晟菁，李子天       Linux 入门公开课：海报 100，结业证书 200；Linux 趣味问答：u 盘 250                 2014/6/30       收入       200.00       朱晟菁，张荣葳                         2014/8/21       支出       -280.00       朱晟菁，张光宇       Linux 入门公开课：海报 280                 2014/8/21       支出       -200.00       朱晟菁       2014/9 招新海报 10 张                 2014/9/24       支出       -826.80       朱晟菁，张荣葳       SFD 报销，详见表格 2014SFD                 2014/10/10       收入       1, 500.00       朱晟菁       SFD 团委报销                 2014/10/10       收入       50.00       朱晟菁       招新团委报销                 2014/10/22       收入       300.00       朱晟菁，张荣葳       Mozilla 报销                 2014/11/10       支出       -65.90       朱晟菁，崔颢       活动室插线板一个                 2014/12/10       支出       -385.50       朱晟菁，张荣葳       LUP 零食 85.5 + 海报 300                 2014/12/10       支出       -346.00       朱晟菁，李博杰       LUP U 盘 2 个                 2014/12/12       收入       1, 200.00       朱晟菁，张荣葳       LUP 报销                 2015/1/1       支出       -1, 058.00       朱晟菁       购买 2T 西部数据绿盘*2                 2015/1/4       支出       -15.00       朱晟菁，李博杰       2015-1-4 LUD                 2015/3/5       支出       -45.00       朱晟菁，左格非       3 月 7 日女生节活动宣传单，1.5*30                 2015/3/6       支出       -113.40       朱晟菁，张静宁       3 月 7 日女生节小礼品 106.4，活动室垃圾桶 7.00                 2015/3/7       支出       -233.70       朱晟菁，李博杰       3 月 7 日女生节 食物（61.7+21）、水果（27）、礼品（116）、打印（8）                 2015/3/18       支出       -300.00       朱晟菁，左格非，曾键       Latex 讲座海报 30 张                 2015/3/21       支出       -20.00       朱晟菁       3 月 21 日 LUD                 2015/4/6       支出       -657.00       朱晟菁，张荣葳       Latex 讲座：火车票 399 + 住宿 158 + 打印（为了凑发票，打印招新传单）120                 2015/4/6       支出       -99.00       朱晟菁，左格非       活动室钥匙 40 + HDMI 转 VGA 线 59                 2015/4/7       支出       -339.00       朱晟菁       购买 1T 希捷硬盘                 2015/4/8       收入       1, 500.00       朱晟菁，张荣葳       Latex 讲座报销           2013 年                  时间       收支类型       数额（￥）       经办人       事由                       2013-03-25       支出       136.80       boj       LUG 小聚用无线路由器                 2013-03-31       支出       107.70       boj       LUG 书库购置书籍                 2013-04-01       支出       158.00       boj       LUG 娘征集活动奖励 U 盘                 2013-04-21       支出       109.00       sadhen       计算机学院讲座印海报                 2013-04-21       支出       210.00       pudh       计算机学院讲座奖品 U 盘                 2013-06-03       支出       240.00       zgy       ubuntu/debian releaseparty 海报                 2013-06-03       支出       270.00       zgy       lug 宣传用展板                 2013-06-03       支出       300.00       zgy       奖品                 2013-06-03       支出       56.00       黄震宇       活动用水                 2013-06-03       支出       41.00       zgy       嘉宾交通费                 2013-06-03       收入       2000.00       zgy, vastuniverse       团委报销，除去给 boj, zgy   垫付的钱后，协会入账现金 750.00                 2013-09-15       支出       80.00       zgy       招新海报                 2013-09-15       支出       360.00       zgy       展板                 2013-09-21       支出       332.00       zgy       嘉宾交通费                 2013-09-21       支出       128.00       zgy       嘉宾招待费                 2013-09-21       支出       175.00       朱晟菁       易拉宝                 2013-09-21       支出       104.00       张荣葳       传单、学习资料                 2013-09-21       支出       108.00       张光宇       矿泉水                 2013-09-21       支出       360.00       张光宇       奖品 U 盘                 2013-09-30       收入       50.00       张光宇       团委报销                 2013-09-30       收入       2000.00       张光宇       团委报销           2012 年   2012 年下半年：（帐目未结清的在“事由”处注有  ）                  时间       收支类型       数额（￥）       经办人       事由                       2012-06       支出       1500.00       ljsabc       板衫垫付（因在换届后，计入下半年）                 2012-09-03       支出       100.00       ljsabc       LUG 招新宣传单                 2012-09-10       支出       150.00       ljsabc       SFD 海报                 2012-09-14       支出       82.00       czluck       SFD 现场插排                 2012-09-14       支出       72.00       boj       SFD 现场矿泉水                 2012-09-14       支出       80.00       czluck       SFD 现场糖果食品                 2012-09-14       支出       50.00       tux, boj       SFD 搬运显示器租三轮                 2012-09-15       支出       170.00       boj       SFD 嘉宾火车票                 2012-09-15       支出       290.00       boj       SFD 嘉宾住宿费                 2012-09-15       支出       40.00       boj       SFD 嘉宾出租车费                 2012-09-15       支出       60.00       ljsabc       Linux 入门资料                 2012-09-15       收入       100.00       -       covariant 捐赠                 2012-09-15       收入       100.00       -       stephen 捐赠                 2012-09-21       收入       1200.00       boj       SFD 团委报销                 2012-09-21       收入       50.00       boj       学期初招新报销                 2012-11-17       支出       192.00       ljsabc       LUP 海报                 2012-11-17       支出       40.00       ljsabc       LUP 传单                 2012-11-24       支出       229.00       boj       LUP 嘉宾住宿费                 2012-11-24       支出       830.00       boj       LUP 嘉宾往返机票                 2012-11-24       支出       60.00       tux, boj       LUP 接送嘉宾出租车                 2012-12-04       支出       755.90       boj       LUG 书库添置图书                 2012-12-07       收入       2100.00       boj       LUP 报销                 2012-12-10       支出       259.30       boj       LUG 书库添置图书                 2012-12-21       收入       235.00       boj       LUG 每周小聚报销                 当前结余       -       949.80       -       -           2012 年上半年：                  时间       收支类型       数额（￥）       经办人       事由                       2012-05       支出       295.00       redsky       LIP 奖品 U 盘（5 个）                 2012-05       支出       910.00       redsky       LUG 书库添置图书                 2012-05       支出       96.00       ljsabc       LIP 宣传海报                 2012-05       支出       118.00       czluck       LIP 插排                 2012-05       收入       1400.00       boj       LIP 报销                 2012-05       收入       200.00       boj       四星级社团奖励                 2012-06-08       交接       2125.00       pic→Thomas(高浩渊 → 童献)       换届交接           2011 年                  时间       收支类型       数额（￥）       原因                       2011       接手       677.5       10 年度结余                 2011.1       支出       60       网银 U 盾费用                 2011.1       收入       274       社区捐赠活动经费                 2011.1       支出       382       Linux Install Party, 包括礼品、设备、场地、交通费用                 2011.1       收入       320       团委报销（Linux Install Party）                 2011.1       收入       48       华扬报销（海报费用）                 2011.4       支出       360       Gnome 3 发布会，包括礼品、海报、横幅、相关材料、交通费用等                 2011.5       收入       360       校团委报销 Gnome 活动经费                 2011.5       支出       75.5       活动参与奖状购买费用                 2011.6       收入       310       网络捐赠费用                 2011.8       收入       57       随版衫捐赠费用                 2011.9       支出       350       社团招新                 2011.9       收入       100       社团招新报销                 2011.9       支出       161       版衫费用支出                 2011.10-12       支出       4507.8       社团 Linux 系列活动，共 4 场，主要包括邀请嘉宾、以及嘉宾住宿、交通，宣传资料、礼品等费用                 2011.12       收入       4500       团委 Linux 活动经费                 2011.12       收入       150       学术科技部奖励                 2011.12       收入       250       协会自筹资金                 当前结余       -       1210.2       -           2010 年                  时间       收支类型       数额（￥）       原因                       2010       -       1194.8       09 年度结余                 2010.06       支出       145       Linux Install Party                 2010.06       收入       60       团委报销（Linux Install Party）                 2010.09       支出       16       打印招新传单                 2010.09       收入       50       团委报销                 2010.09.18       支出       147.2       自由软件日活动                 2010.09.21       支出       37.9       购买活动室办公用品                 2010.10.15       支出       12       打印 cheat sheet                 2010.10       收入       200       团委报销                 2010.10.15       收入       30       vbs 捐赠                 2010.10       支出       122.5       转入 Debian/OSS 服务器维护专款                 2010.11.1       支出       400       购买 Debian 服务器硬盘(1T)                 2010.10.15       收入       23.3       shiqi 捐赠                 2010.10.15       -       677.5       账务转交：shiqi→picture                 当前结余       -       677.5       -           2009 年                  时间       收支类型       数额（￥）       原因                       2009.07       -       1975       帐务转交，freshsun→shiqi                 2009.09.19       支出       299.2       自由软件日                 2009.09.19       收入       250       团委报销（自由软件日）                 2009.11       支出       731       购买图书（共 10 种 12 册）                 年终结余       -       1194.80       -           2009 年之前   2010 年 9 月更新服务器时以前的财务记录不慎丢失。  ","categories": [],
"tags": [],
"url": "/wiki/lug/finance/archive/",
"teaser": null
},{
"title": "捐赠 LUG",
"excerpt":"如果你喜欢 USTC LUG 并希望为协会发展提供经济上的援助，可以向我们捐赠。   为了准确记载捐赠情况、确保财务规范，捐赠后请 务必向 donate@ustclug.org 发送邮件 说明以下信息，并关注财务报告中的记载是否及时、一致！           您捐款的 日期 、 途径 、 金额            您希望留下的 捐赠者名称 （亦可指定匿名。默认为捐款渠道中记载的转账人名称）            款项用途： 通用经费 或 服务器维护专款 （默认为通用经费）       服务器维护专款单立账户，仅用于维护重要网络服务。   通用经费主要用于社团日常采购和活动开支，不会用于联谊、餐饮等与社团宗旨无关的目的，在必要时可能会转入服务器维护专款账户。   我们不推荐没有经济来源的在校生向我们捐款。   支付宝   根据社团管理最新规定，社团经费获取必须经过团委或校基金会渠道，因此该渠道暂时关闭，请关注我们的主页与交流群，若学校相关方面的规则有所变动，我们会第一时间通知。   通过校友基金会捐赠   如果您身在海外，或者需要用于个税减免的捐赠收据，您可以通过中国科大校友基金会（USTCAF）的 LUG 子基金进行捐赠。请在捐赠页面中“子基金”栏目选择“AFund”，并在注释中标明“捐赠科大 LUG”。   在线捐赠页面： https://www.ustcaf.org/members/donation/prep-form   捐赠后请务必按本页顶部要求发送邮件告知我们。   通过新创基金会捐赠   如果您的捐赠金额较大（500 元以上），或者需要取得捐赠收据用于个税减免，您可以通过中国科学技术大学新创校友基金会来进行捐赠。   关于个税减免的相关信息，请访问 http://www.ustcif.org.cn/default.php/content/1448   捐赠请访问新创基金会的捐赠页面：http://www.ustcif.org.cn/WaysToGive/   在捐赠表格中，捐赠项目请选择“其它”，并在说明处注明“为科大 LUG 捐赠专款”，以及您的其它说明与指定的款项用途。其余流程与新创基金会的捐款流程相同。   捐赠后请务必按本页顶部要求发送邮件告知我们。   其它方式   如果您不便通过以上方式捐赠，可以向 donate@ustclug.org 发送邮件说明情况，与我们协商其他捐赠方式。  ","categories": [],
"tags": [],
"url": "/wiki/lug/finance/donate/",
"teaser": null
},{
"title": "Debian/OSS 服务器维护捐款信息",
"excerpt":"               捐款人       捐款数额(收款人)       捐款日期       捐款方式                       郑裕峰       50 ￥(傅收)       2005/06/20       银行汇款                 李凯       50 ￥(郑收)       2005/06/21       直接递交                 马奎       50 ￥(郑收)       2005/06/21       直接递交                 王健       20 ￥(郑收)       2005/06/21       直接递交                 李国强       50 ￥(郑收)       2005/06/22       直接递交                 苏勇       300 ￥(郑收)       2005/06/22       直接递交                 詹剑       100 ￥(郑收)       2005/06/23       直接递交                 王研科, 俞丽珍       100 ￥(李收)       2005/06/       直接递交                 李东方       20 ￥(郑收)       2005/06/       直接递交                 肖磊       200 ￥(吴收)       2005/06/       直接递交                 姚淅伟       30 ￥(吴收)       2005/06/       直接递交                 黄仲婴       10 ￥(郑收)       2005/06/       直接递交                 匿名       50 ￥(傅收)       2005/06/24       银行汇款                 hiei       50 ￥(傅收)       2005/06/27       银行汇款                 nickst       20 ￥(傅收)       2005/07/02       银行汇款                 匿名       30 ￥(傅收)       2005/07/02       银行汇款                 132xxxxx937       70 ￥(郑收)       2005/07/07       直接递交                 王云峰       100 ￥(傅收)       2005/07/08       银行汇款                 黄波       100 ￥(郑收)       2005/07/14       直接递交                 Liang Tang       50 ￥(傅收)       2005/07/14       银行汇款                 李道兵       200 ￥(傅收)       2005/07/17       银行汇款                 phunter       50$(傅收)(约 405.5 ￥)       2005/07/22       paypal 转帐                 匿名       100 ￥(傅收)       2005/07/26       银行汇款                 Zheng Feng       100 ￥(傅收)       2005/07/29       银行汇款                 厦大漳州校区 Linux 选修课全体同学       167 ￥(傅收)       2005/08/02       银行汇款                 Q. H. Yang       20 ￥(傅收)       2005/08/04       银行汇款                 sharper       100 ￥(李收)       2005/08/11       直接递交                 王安多       30 ￥(郑收)       2005/08/14       邮政汇款                 孙仁亮       50 ￥(郑收)       2005/09/07       直接递交                 luochao       100 ￥(傅收)       2005/09/13       银行汇款                 hushl@ustc       50 ￥(郑收)       2005/09/25       直接递交                 kirby       50 ￥(郑收)       2005/09/26       直接递交                 hbs       100 ￥(郑收)       2005/10/1       直接递交                 daizisheng       50 ￥(郑收)       2005/10/3       直接递交                 吴峰光       100 ￥(郑收)       2005/10/10       直接递交                 张成、协变及其他 LUD 众人       200.00 ￥（童收）       2012.09       直接递交                 总额(更新日期)       2922.5 ￥       2005/10/1       -                 总额(更新日期)       2972.5 ￥       2005/10/3       -                 总额(更新日期)       3072.5 ￥       2005/10/11       -                 总额       计入总帐目，不单独列出       （更新日期）2013.01.01       -           收款人的收款情况                  收款人(收款代号)       收款额                       郑裕峰(郑收)       1200 ￥                 吴峰光(吴收)       230 ￥                 李东方(李收)       200 ￥                 傅向荣(傅收)       1037 ￥ + 50$                 统计       2667 ￥ + 50$          ","categories": [],
"tags": [],
"url": "/wiki/lug/finance/donate_lookup/",
"teaser": null
},{
"title": "财务报告",
"excerpt":"  捐赠记录       捐赠方式请见 LUG 官网。     本表记载 2018 年换届后的捐赠记录，根据 LUG 电子账册自动生成。     之前的记录见历史存档。                              日期             捐赠者             数额             用途                                         正在加载……                                         ${i.date}             ${i.payee}             ${i.amount}             ${i.account}                 服务器维护专款       本表记载 2018 年换届后的服务器维护专款收支记录，根据 LUG 电子账册自动生成。     之前的记录见历史存档。     由于换届前的服务器维护专款支出情况记载不明，在此将 2018 年换届时的所有捐款余额均记为服务器维护专款。                              日期             数额             事由                                         正在加载……                                         ${i.date}             ${i.amount}             ${i.payee}                 通用经费       本表记载 2018 年换届后的通用经费收支记录，根据 LUG 电子账册自动生成。     之前的记录见历史存档。                              日期             数额             事由                                         正在加载……                                         ${i.date}             ${i.amount}             ${i.payee}                   ","categories": [],
"tags": [],
"url": "/wiki/lug/finance/",
"teaser": null
},{
"title": "友情链接",
"excerpt":"合作伙伴      烧饼博客   Coding 云端开发平台   深度操作系统   Xtom   中国科学技术大学图书馆   中国科学技术大学网络信息中心   中国科学技术大学信息安全俱乐部   姊妹社团      清华大学 TUNA 协会   齐鲁工业大学网络运维   开源社区      瀚海星云 BBS Linux 讨论区   Arch Linux 中文社区   Fedora 中文社区   开源工场   各地 LUG                  地区       邮件列表       Homepage                       上海       Shanghai Linux User Group       SHLUG                 北京       Beijing GNU/Linux User Group       BLUG                 成都       Chengdu Linux User Group       CDLUG                 重庆       Chongqing Linux User Group       CHONGQINGLUG                 广州       Guangzhou Linux User Group       GZLUG                 杭州       Hangzhou Linux User Group                         南京       Nanjing Linux User Group       NANJINGLUG                 深圳       Shenzhen Linux User Group                         天津       Tianjing Linux User Group                         香港               Hong Kong Linux User Group                 沈阳               Northeastern University Linux User Group           企业链接      江苏龙芯梦兰科技股份有限公司   中标软件   华恒科技   谋智中国   上海恒为信息科技有限公司  ","categories": [],
"tags": [],
"url": "/wiki/lug/links/",
"teaser": null
},{
"title": "LUG 邮件列表",
"excerpt":"USTC LUG 中的技术交流和活动通知通常都在邮件列表中。如果没有加入邮件列表，怎么好意思说自己是 USTC LUG 的一员呢？   邮件列表存档   USTC LUG 邮件列表所有帖子都永久存档、公开可见：           http://archive.lug.ustc.edu.cn/            http://dir.gmane.org/gmane.user-groups.linux.ustclug            https://groups.google.com/forum/#!forum/ustc_lug       如何加入   加入邮件列表的方法很简单：发送一封邮件到 ustc_lug+subscribe AT googlegroups.com （请把 AT 替换成@）某些邮箱不支持邮箱地址中的加号“+”。   此时您会收到一封来自 Google Groups 的确认邮件。可以根据确认邮件的内容，直接回复任意内容，或点击确认邮件中的链接来加入邮件列表。   如果您的收件箱里长时间没有收到确认邮件，请检查垃圾邮件。   如果您使用的是 Gmail，也可以直接在 https://groups.google.com/g/ustc_lug 中点击“加入”。   推荐使用 Gmail ，它有两个优点：           threading（线索）把一封邮件及其回复显示在同一页面。LUG 邮件列表中的一个主题常常引发数十个回复，此时 threading 可以不使收件箱被“刷屏”。如果把科大邮箱比作瀚海星云 BBS 的普通模式，那么 Gmail 的线索就是 BBS 的“同主题阅读”模式，也是其他论坛的常用显示方式。            强大的过滤器（filter）和标签（tag）可以使您轻松对邮件进行分类。例如，我们可以对不同的邮件列表（如果您订阅了多个）应用不同的标签，还可以设置是否在“收件箱”内显示。       如果您需要使用科大邮箱，可以在科大邮箱中设置自动转发到 Gmail，或者在 Gmail 中设置从科大邮箱定时 POP3 取信。这样只需登录 Gmail，就能同时收 Gmail 和科大邮箱的邮件了。   如何回复   直接回复就行了！回复会被发到 ustc_lug AT googlegroups.com，然后邮件列表的提供商 (Google) 会把这封邮件转发给所有加入邮件列表的人。新人发布回复时需要审核，请耐心等待。   细心的同学可能注意到了：“From”一栏填的是发件人的私人邮件地址啊，为什么回复会被送到邮件列表呢？那是因为邮件中设置了 Reply-To: ustc_lug AT googlegroups.com 。如果你在用 Gmail，可以用“Show Original”功能来了解邮件协议的更多信息。           尽量少用附件，以免占用收件人过多的邮箱空间。不要使用闭源格式的附件。如果需要附件，建议上传到 home.ustc.edu.cn 的个人主页空间或者 rec.ustc.edu.cn 的网盘空间，然后贴出链接。            尽量用纯文本，少用 HTML1 格式（如果客户端支持的话）            回复较长的邮件时，引文应该选择性地引用，以便让其他人知道在评论的是哪一段。            对于比较严肃的技术讨论，请尽量不要转移话题。如果确实要离题，请发一个新主题，改标题为“新标题 (was: 原标题)”。       如何发新主题   直接向 ustc_lug AT googlegroups.com （请把 AT 替换成@）发邮件就行了，Google Groups 会帮您转发给所有加入邮件列表的人。新人发布主题时需要审核，请耐心等待。           “如何回复”中列出的 Tips 仍然适用            主题与 LUG、Linux、自由/开源软件无关时，要在标题中标“[OT]”（Off Topic 的意思）            如果只是回复/讨论一个已有主题，请不要另开新主题。回复那封邮件就行了。如果你发现你的回复变成了一个新的主题，或者有人说“线索断了”，请更换邮件客户端。       提问的智慧   在邮件列表中，你所提技术问题的解答很大程度上取决于提问的方式与解决此问题的难度，本文将教你如何提问才更有可能得到满意的答复。推荐大家在提问之前看看。   原文： http://www.catb.org/esr/faqs/smart-questions.html   中文版： 提问的智慧                  HyperText Markup Language &#8617;           ","categories": [],
"tags": [],
"url": "/wiki/lug/mailinglist/",
"teaser": null
},{
"title": "LUG 负责人",
"excerpt":"公共联系方式   联系我们   主要负责人                  代号       职务       姓名       邮箱                       CEO       执行会长       廖巍       flurry AT ustclug.org                 -       执行副会长       刘良宇       lly AT ustclug.org                 -       执行副会长       杨柳       and AT ustclug.org                 CTO       技术部部长       郑雨霏       ritaanthem AT ustclug.org                 -       技术部副部长       郑钊雨       fchwpo AT ustclug.org                 CFO       财务部部长       王永福       rtxux AT ustclug.org                 COO       运营部部长       方越       yuefang AT ustclug.org                 CPO       资产部部长       封霁芩       CaptchaAC AT ustclug.org                 MSC       MSC 事务       金文丁       pro AT ustclug.org                 -       团支书       封霁芩       CaptchaAC AT ustclug.org                 -       社长       方越       yuefang AT ustclug.org                 -       副社长       刘良宇       lly AT ustclug.org                 -       副社长       金文丁       pro AT ustclug.org                 -       副社长       马天开       tiankaima AT ustclug.org           历任负责人   2022-2023 届                  代号       职务       姓名       邮箱                       CEO       执行会长       李博诚       bcli AT ustclug.org                 -       执行副会长       袁保杰       crabtux AT ustclug.org                 -       执行副会长       余致远       fish AT ustclug.org                 CTO       技术部部长       王永福       rtxux AT ustclug.org                 -       技术部副部长       徐奥       xuao123 AT ustclug.org                 CFO       财务部部长       廖巍       flurry AT ustclug.org                 COO       运营部部长       卢星宇       zigone AT ustclug.org                 CPO       资产部部长       杨柳       and AT ustclug.org                 MSC       MSC 事务       邱慕凡       when AT ustclug.org                 -       团支书       余致远       fish AT ustclug.org                 -       社长       廖巍       flurry AT ustclug.org                 -       副社长       李博诚       bcli AT ustclug.org                 -       副社长       徐奥       xuao123 AT ustclug.org                 -       副社长       袁保杰       crabtux AT ustclug.org           2021-2022 届                  代号       职务       姓名       邮箱                       CEO       执行会长       刘隆邦       psicmd AT ustclug.org                 -       执行副会长       蔡智臻       cat AT ustclug.org                 -       执行副会长       刘正韬       zeka AT ustclug.org                 CTO       技术部部长       邱慕凡       when AT ustclug.org                 -       技术部副部长       高泽豫       zeyugao AT ustclug.org                 CFO       财务部部长       徐奥       xuao123 AT ustclug.org                 COO       运营部部长       吴雨飞       wuyf AT ustclug.org                 CPO       资产部部长       陈泳融       yrchen AT ustclug.org                 MSC       MSC 事务       陈泳融       yrchen AT ustclug.org                 -       团支书       刘隆邦       psicmd AT ustclug.org                 -       社长       龚乐       justiascarlet AT ustclug.org                 -       副社长       徐奥       xuao123 AT ustclug.org                 -       副社长       陈泳融       yrchen AT ustclug.org                 -       副社长       蔡智臻       cat AT ustclug.org           2020-2021 届                  代号       职务       姓名       邮箱                       CEO       执行会长       袁一玮       totoroyyw AT ustclug.org                 -       执行副会长       高泽豫       zeyugao AT ustclug.org                 -       执行副会长       李缙       -                 CTO       技术部部长       明宇龙       myl AT ustclug.org                 -       技术部副部长       罗丽薇       loliw AT ustclug.org                 CFO       财务部部长       邱子悦       xyy AT ustclug.org                 COO       运营部部长       罗丽薇       loliw AT ustclug.org                 CPO       资产部部长       胡清宇       -                 MSC       MSC 事务       陈泳融       -                 -       团支书       胡清宇       -                 -       社长       高泽豫       zeyugao AT ustclug.org                 -       副社长       邱子悦       xyy AT ustclug.org                 -       副社长       吴雨飞       -                 -       副社长       袁一玮       totoroyyw AT ustclug.org           2019-2020 届                  代号       职务       姓名       邮箱                       CEO       执行会长       陶柯宇       taoky AT ustclug.org                 -       执行副会长       彭定澜       pdl AT ustclug.org                 -       执行副会长       付佳伟       ibug AT ustclug.org                 CTO       技术       付佳伟       ibug AT ustclug.org                 CFO       财务       龚平       gpzlx1 AT ustclug.org                 COO       运营       李文睿       sirius AT ustclug.org                 CPO       资产       陈墨涵       voile AT ustclug.org                 MSC       MSC 事务       金孜达       jzd AT ustclug.org                 -       社长       龚平       gpzlx1 AT ustclug.org                 -       副社长       陈墨涵       voile AT ustclug.org                 -       副社长       高泽豫                         -       副社长       明宇龙                         -       团支书       陶柯宇       taoky AT ustclug.org           2018-2019 届                  代号       职务       姓名       邮箱                       CEO       会长       何纪言       hejiyan AT ustclug.org                 -       副会长       李文睿       sirius AT ustclug.org                 -       副会长       马凯       makai AT ustclug.org                 CTO       技术       王子博       hypercube AT ustclug.org                 CFO       财务       王子博       hypercube AT ustclug.org                 COO       运营       任正行       rzh AT ustclug.org                 MSC       MSC 事务       曾明亮       zml AT ustclug.org                 -       团支书       李嘉豪       gloit AT ustclug.org           2017-2018 届                  代号       职务       姓名       邮箱                       CEO       会长       李嘉豪       gloit AT ustclug.org                 CTO       副会长       王子博       hypercube AT ustclug.org                 -       副会长       何纪言       ustchjy AT gmail.com                 -       副会长       金孜达       jzd AT mail.ustc.edu.cn                 CFO       财务       马凯       makai AT ustclug.org                 -       团支书       崔灏       cuihao.leo AT gmail.com           2016-2017 届                  代号       职务       姓名       邮箱                       CEO       执行会长       左格非       zgf574564920 AT gmail.com                 -       会长       崔天一       1997cui AT gmail.com                 CTO       副会长       曾键       anonymousknight96 AT gmail.com                 -       副会长       郑子涵       zhengzihan1996 AT gmail.com                 CFO       财务       金孜达       jzd AT mail.ustc.edu.cn                 -       团支书       崔灏       cuihao.leo AT gmail.com           2015-2016 届                  代号       职务       姓名       邮箱                       CEO       会长       崔灏       cuihao.leo AT gmail.com                 COO       副会长       张静宁       jingning42 AT gmail.com                 CIO       副会长       杨博远       073plan AT gmail.com                 CPO       副会长       左格非       zgf574564920 AT gmail.com                 CTO       技术       高一凡       yifan AT ustclug.org                 CFO       财务       崔天一       1997cui AT gmail.com                 -       宣传       尤淼       potatoym AT gmail.com                 CNO       外联       张振兴       -           2014-2015 届                  代号       职务       姓名       邮箱                       CEO       会长       张荣葳       pudh4418 AT gmail.com                 CTO       副会长       崔灏       cuihao.leo AT gmail.com                         副会长       杨博远       073plan AT gmail.com                 COO       运营       李子天       ztlizitian AT gmail.com                 CPO       资产       张恒若       hengruoz AT gmail.com                 CNO       外联       杨国鑫       aetheryang AT gmail.com                 CFO       财务       朱晟菁       zsj950618 AT gmail.com                 CIO       宣传       尤淼       potatoym AT gmail.com           2013-2014 届                  代号       职务       姓名       邮箱                       CEO       会长       张光宇       zguangyu123 AT gmail.com                 CTO       技术       张荣葳       pudh4418 AT gmail.com                 COO       运营       黄震宇       zyfwong AT gmail.com                 CPO       资产       沈达       sadhen1992 AT gmail.com                 CNO       外联       朱晟菁       zsj950618 AT gmail.com                 CFO       财务       童献       universecopper AT gmail.com                 CIO       宣传       孙金鹿       s.sn.giraffe AT gmail.com           2012-2013 届                  职务       姓名       邮箱       负责项目                       会长       李博杰       bojieli AT gmail.com       外联, 每周小聚, USTC Blog                 副会长 (CTO)       郭家华       gjhdgm AT gmail.com       mirrors, PXE, FTP, 主页服务器                 副会长 (COO)       李喵喵       ljsabc AT gmail.com       海报, 大型活动, USTC Blog                 财务 (CFO)       童献       universecopper AT gmail.com       财务                 资产 (CPO)       沈达       sadhen1992 AT gmail.com       LUG 书库, LUG wiki           2011-2012 届                  职务       姓名                       会长       祝元宠                 副会长 (CTO)       顾昊                 副会长       张昊翀                 副会长       杜润东                 财务 (CFO)       高浩渊           2010-2011 届                  职务       姓名                       会长       王鹏                 副会长 (CTO)       张成                 副会长 (COO)       赵希明 zhaoxmustc AT gmail.com          ","categories": [],
"tags": [],
"url": "/wiki/lug/person-in-charge/",
"teaser": null
},{
"title": "资源导航",
"excerpt":"这里的链接都指向本站（非 wiki）的其他内容。   LUG 官方内容   Linux 入门公开课（试验版）   Linux 入门公开课是 2014 年春社团活动的成果，包含当时社团成员的授课录像与演示文稿。   由于是第一次试验，内容多有不足，请多包涵。   LUG FTP   LUG FTP 是社团内部的 FTP1 服务，主要用来存储历史文件、存放学习资料。请发送邮件给我们，以获取 FTP 公开账户的用户名与密码。   LUG FTP 也可通过 HTTP 只读访问文件，请点这里。请注意 ebook 等部分目录不提供 HTTP 访问。   友情托管   winland0704 在 LUG 主页服务器上托管了以下两个文档项目。   openSUSE 非官方指南   openSUSE 非官方指南为官方指南的非正式中译版本，可供参考。   Qt 编程指南   Qt 编程指南 是作者正在写作中的一本书。                  File Transfer Protocol &#8617;           ","categories": [],
"tags": [],
"url": "/wiki/lug/resources/",
"teaser": null
},{
"title": "LUG@USTC FTP 文件存档",
"excerpt":"简介   LUG FTP 对应域名为 ftp.lug.ustc.edu.cn。   注意：直接在浏览器中输入这个域名可能会被识别为 FTP 协议。   这里存储社团历史活动资料的存档，以及一些与 Linux、开源软件、编程等计算机科学与技术相关的学习资料。   访问   使用 HTTP 协议   站点链接：https://ftp.lug.ustc.edu.cn   支持匿名只读访问。请注意部分目录无法使用 HTTP 访问。   使用 FTP 协议   站点链接：ftp://ftp.lug.ustc.edu.cn   不支持 FTP 匿名访问。用户须使用公开帐号登陆至服务器。   用户名为 ftp。请联系管理员以了解详细信息。   使用 SFTP 协议   用户名为 ftp。请联系管理员以了解详细信息。   上传   管理员用户   如需使用 FTP 协议对内容进行管理，请联系管理员以了解详细信息。     LUG@USTC  ","categories": [],
"tags": [],
"url": "/wiki/lug/services/ftp/",
"teaser": null
},{
"title": "GitLab",
"excerpt":"        如果你在做课程实验……项目代码往哪里放？            如果你们是一个小团队……把代码放在哪里才方便成员访问，还能直观地看到项目的进展？            如果你想拥有一套专业的项目管理系统，却不会搭建服务器……       一切尽在 GitLab！这是一个神奇的软件，让我们在校园里也能享受像 GitHub 一样的代码托管和项目管理服务，不仅访问速度快，而且支持私有项目。   https://git.lug.ustc.edu.cn/    出于存储、运维压力等方面的考虑，自 2019 年 12 月 29 日起，此服务仅限科大校内用户注册。  ","categories": [],
"tags": [],
"url": "/wiki/lug/services/gitlab/",
"teaser": null
},{
"title": "网络服务列表",
"excerpt":"S 级服务      开源镜像站（HTTP 访问）：https://mirrors.ustc.edu.cn   权威 DNS：ns-a.ustclug.org, ns-b.ustclug.org, ns-c.ustclug.org   A 级服务      代码托管平台：https://git.lug.ustc.edu.cn   回校访问服务   B 级服务      主页 (本网站)：https://lug.ustc.edu.cn   网络启动：pxe.ustc.edu.cn   图书馆透明计算系统   VPN 在线申请系统（校内）   轻量级网络加速服务（校内）   开源镜像站（定时同步；rsync 访问；帮助页面）：https://mirrors.ustc.edu.cn   反向代理：*.proxy.ustclug.org   服务器统一认证：ldap.lug.ustc.edu.cn   内网 VPN   C 级服务      LUG FTP：https://ftp.lug.ustc.edu.cn   旧的 LUG 新闻站：https://news.ustclug.org   LUG 服务器新闻：https://servers.ustclug.org   Grafana 监控：https://monitor.ustclug.org   LDAP 配置管理系统（GOsa²）   已停止服务      防污染 DNS（校内）   旧的 LUG Planet（社团博客）：https://planet.ustclug.org   服务等级与服务标准      S 级：最优先保障服务可用性，24 小时故障监控，故障自动转移   A 级：优先保障服务可用性，24 小时故障监控，每日备份   B 级：关键数据备份   C 级：非保障类服务   未列入本列表的服务：实验性服务  ","categories": [],
"tags": [],
"url": "/wiki/lug/services/",
"teaser": null
},{
"title": "图书馆查询机简介",
"excerpt":"图书馆查询机，顾名思义，是位于图书馆内的一些用来查询图书所在位置的计算机。USTC LUG 一直以来对图书馆查询机系统进行着操作系统及软件上的维护。   历史沿革   现状   使用指南   技术细节   图书馆查询机系统   Github 项目   查询机运行状况监控：图书馆查询机状态  ","categories": [],
"tags": [],
"url": "/wiki/lug/services/lib/",
"teaser": null
},{
"title": "开源软件镜像服务",
"excerpt":"科大 LUG 自成立起便在 2003 年通过 BBS 网上筹款的方式搭建了当时教育网内极少数的几个 Debian GNU/Linux 的镜像源（debian.ustc.edu.cn），随后又在其上添加了 Ubuntu Linux 的镜像。2008 年，借助吴峰光师兄捐助的机器，搭建了科大的开源镜像服务器（oss.ustc.edu.cn），以吸纳更多的开源软件和 Linux 发行版。尽管如此，我们的服务器仍然有些不堪重负，服务供不应求。   2010 年底，在网络中心张焕杰老师的帮助下，我们获得了新的服务器，遂将之前两个镜像站的资源以及张老师自己搭建的 CentOS Linux 镜像整合到一起，形成了“科大镜像站”（mirrors.ustc.edu.cn）。新网站正式对外发布时，好评如潮。随后我们又成功申请到了 Debian GNU/Linux 的中国官方镜像资格认证等多个官方镜像资格认证。   我们将一如既往的做好镜像服务器的维护工作，争取为大家提供更新更好的服务，使参与维护的同学得到更好的锻炼。      详细介绍   mirrors 首页   科大源使用帮助  ","categories": [],
"tags": [],
"url": "/wiki/lug/services/mirrors/",
"teaser": null
},{
"title": "网络启动服务",
"excerpt":"中国科学技术大学自 2005 年起，由 USTC LUG 发起，开始对校园网内提供网络启动服务（以下简称 PXE 服务）。校园网内的师生可以设置电脑通过网络引导启动，进行安装 Linux、体验 Linux、维护本机系统等操作，此外，东、西区图书馆的查询机系统亦是通过 PXE 启动引导。PXE 服务为校内师生带来了极大的便利。   随着我校网络设施的不断升级和发展，网络应用在科研工作和日常生活中发挥着日益重要的作用。同时，PXE 相关的技术在这些年中也有了很大的发展，可以为大家提供更多更实用的服务。   PXE 服务使用简介  ","categories": [],
"tags": [],
"url": "/wiki/lug/services/pxe/",
"teaser": null
},{
"title": "LUG 网络服务总则",
"excerpt":"〇、总则           中国科学技术大学 Linux 用户协会（下称 LUG 或“我们”）向中国科大师生和 Linux 社区提供了一系列网络服务。用户在使用 LUG 网络服务之前，应当仔细阅读并同意本文各项条款。            除非相关网络服务的服务条款特别说明，否则本文各项规则适用于 LUG 提供的所有网络服务。这些服务包括但不限于：              USTC blog space       OpenVZ 虚拟主机服务（Freeshell）       代码托管服务（GitLab）       虚拟专用网络服务（OpenVPN）       软件源镜像（Mirrors）       中国科学技术大学网络启动服务（PXE）       Time Machine 服务（TimeMachine）                用户开始使用 LUG 网络服务时，即视为无条件同意本规则和其他相关条款。       一、服务承诺           LUG 及其成员的行为受中华人民共和国法律法规、中国科学技术大学校规校纪的约束。            LUG 网络服务均为非营利性，我们不会以任何名义向用户强制收取任何费用。            我们会尽力保证服务稳定，但不对服务质量作任何保证。            我们承诺不会主动将用户提交的隐私数据泄露给第三方，用户隐私受到法律保护。            对用户通过 LUG 网络服务发表的合法原创内容，其著作权属于用户。            当 LUG 网络服务出现重大变更时，我们会通过用户提供的联系方式通知用户。       二、用户义务           用户不得利用 LUG 服务从事任何违反中华人民共和国法律法规、中国科学技术大学校规校纪和社会公共道德的活动。            未经 LUG 管理人员允许，用户不得利用 LUG 服务进行任何营利性活动。            如果用户的行为违反了相关用户条款和规则，我们有权采取终止服务、清除违规内容、向有关部门举报等措施进行反制。用户须承担违规行为所产生的一切后果。       三、规则变更      LUG 有权对本服务总则和其他用户规则、协议做出更新和修改。我们会在这些规则、协议内容发生的变化时通知给用户。  ","categories": [],
"tags": [],
"url": "/wiki/lug/services/rules/",
"teaser": null
},{
"title": "LUG 宣传账号一览",
"excerpt":"LUG 已在各个平台上建立了宣传用账号。本页面旨在对 SNS 账号使用情况及信息交流平台进行一定的整理。   注：若无特殊说明，本站中 LUG 特指 USTC LUG   正在维护                  平台/账号类型       启用时间       名称       维护者       备注                       Google groups       -       ustc_lug@googlegroups.com       李博杰                         IRC       2014-04-01       #ustc_lug               Freenode，已弃用                 IRC       2021-06-15       #ustclug       朱晟菁(zhsj)       OFTC                 QQ 群       2014-03-31       USTC Linux       (多人)       号码：334011318                 QQ 群       2015-05-27       USTC Linux User Group       (多人)       校内学生实名群                 GitHub 组织       2014-07-20       中国科学技术大学 Linux 用户协会       (多人)       https://github.com/ustclug           暂未维护                  平台/账号类型       启用时间       名称       联系人       备注                       Twitter       2010-10-28       @ustclug       杨博远                         Google 账号       2010-10-27       lug.ustc@gmail.com       杨博远       所有非垃圾邮件将转发至 lug@ustc.edu.cn                 Google+ 信息页       2014-08-24       USTC LUG       张光宇、王子浩       http://goo.gl/RhjHSk（个人用户版 Google+ 关停）                 人人账号       2012-11-21       科大 LUG       (多人)                         人人公共主页       2013-03-15       中科大 Linux 用户组       (多人)                         新浪微博       2011-06-24       中科大 LUG       杨博远                         豆瓣       -       科大 LUG       -                  ","categories": [],
"tags": [],
"url": "/wiki/lug/sns/",
"teaser": null
},{
"title": "开源镜像使用帮助列表",
"excerpt":"科大镜像源使用帮助由科大 LUG 成员与许多热心的朋友们共同编写，请前往 https://mirrors.ustc.edu.cn/help/ 阅读使用。   各镜像源帮助页面源代码现托管在 GitHub 上，欢迎各位协助完善。如果您有添加新镜像的建议，请在 GitHub 上提交 issue.   相关链接      科大开源软件镜像服务简介  ","categories": [],
"tags": [],
"url": "/wiki/mirrors/help/",
"teaser": null
},{
"title": "Vim 笔记",
"excerpt":"Vim 基本操作           “一个光标的故事”（方向键不是最好的选择） ⇒ The Vim Way            先阅读 vimtutor，根据提示进行操作练习 ⇒ 先尝试“生存下来”                  常用模式：normal, lastline, visual, insert, … ⇒ 熟练在它们中切换            字词句段篇 ⇒ word/string/paragraph/blockwise ⇒ 尝试在它们之间移动、选定、编辑            搜索式移动 ⇒ F/f，T/t，/，？，……       -      查看当前词语的 man 手册页 ⇒ Shift-k   -      查看当前词语的定义处（局部变量） ⇒ gd           跳转到文件 ⇒ gf            块（blockwise）操作 ⇒ v/c/d/y + a/i + {/[/(/“/‘            窗口间的移动 ⇒  \\+ h/i/j/k/       学会使用帮助   Vim 中键入：   :help xxx   即可获得关于 xxx 的帮助。xxx 可以是选项、命令、甚至快捷键组合。   Folding   在 Vim 中输入：   :set fdm=syntax   即表示以 syntax 的方式折叠代码（即设定 FoldingMethod）。           Folding 的方法有 syntax、marker、indent、manual 等几种。            在折叠处按 z-o 可以展开一层折叠，z-O 展开此处所有层次的折叠。z-c/C 则相反。            展开当前文件所有的折叠可以用 z-R，折叠则用 z-M。       QuickFix   摘抄一段 QuickFix 的帮助文件：   Vim has a special mode to speedup the edit-compile-edit cycle.  This is inspired by the quickfix option of the Manx's Aztec C compiler on the Amiga. The idea is to save the error messages from the compiler in a file and use Vim to jump to the errors one by one.  You can examine each problem and fix it, without having to remember all the error messages.   也就是说，QuickFix 原来是用在处理编译出错的信息上的。其实通过配置，它也能用于 cscope 的查询和跳转。   Vim 内置支持 make 指令，你可以输入   :make   来调用 make 命令在 Vim 当前工作目录下编译，其出错信息就会出现在 QuickFix 窗口中。   QuickFix 有些常用指令：   :copen :cclose :cnext :cprev   分别是打开/关闭 QuickFix 窗口，下一个和上一个错误/警告。其它命令可以查看其帮助文件。   Macro   TODO   Split Screen   TODO   C/C++   ctags 和 cscope 是 Linux 下比较常用的 C/C++代码分析器，配合 Vim 使用有不错的效果。      ctags   Open C++ file with extra stl_tags: Click On Me      cscope   可以参考：http://cscope.sourceforge.net/cscope_vim_tutorial.html   那些 ctags 和 cscope 能做和不能做的事情   ctags 和 cscope 只能找到匹配的字符串，但是对于 C++里面复杂的语义，如函数重载之类的却无能为力。跳转的时候可能会跳转错误或者给出一堆重名的函数以供选择，代码补全的时候也一样。要做到跳转/补全的正确，现有的 C++的 IDE（集成开发环境）中，Eclipse、QtCreator、KDevelop 等都是用自带的分析器解析后再做跳转的。现在有人开始尝试在 Emacs 上用 gcc 前端分析代码，求得精确的补全，不过我还没找到 Vim 上比 ctags 和 cscope 更好用的东西。这么说吧，ctags 和 cscope 这些轻量的分析器配合 Vim 这种快速的编辑器还是比较搭配的。或者你可以试着用一下下面提到的 Eclim，后端就是个 Eclipse……   然后呢，请务必记住——   活用 QuickFix 和 TagSelect！      代码补全   Vim 自身带有不少补全功能，可以在 Vim 中搜索关于“compl”的帮助   在此，我推荐 C++开发者安装 omnicppcomplete 插件，所有用户安装 neocomplcache 插件。      Eclim：以 Vim 作为前端，操作 Eclipse 后端，打开和编辑 Eclipse 工程。Eclim 官方网站   番外篇：正则表达式   Vim 的强大也体现在其搜索/替换的时候，能够使用强大的正则表达式这一点上。参见正则表达式 30 分钟入门教程   Vim 与 Linux 下的 C/C++开发           Vim 只是一个编辑器            用好 Linux 这个最大的 IDE ⇒ The Unix Way       各种小工具的配合让开发工作变得简单      用 vim 编辑 ⇒ 用 gcc 编译 ⇒ 用 gdb 调试   Vim 插件列表   多看Vim 官方网站上各个插件的介绍页面和帮助手册   注意插件冲突和快捷键冲突           a.vim            conque 1.1.vba * DoxygenToolkit.vim * doxygen * grep.vim * mark * matchit * neocomplcache * NERD commenter            omnicppcomplet            pathogen.vim            showfunc.vim            snipMate            tabbar.vim            taghighlight            taglist            txtbrowser            vcscommand            winmanager            zencoding            ……             上述插件原始文件的打包下载，其实我更推荐大家到 Vim 官方网站上面去搜索这些插件，一边看着简介一边下载。           Vim 配色方案   - tango2:    可以与终端配色一致 /    深色背景下的紫色比较惨淡   - eclipse：    gvim 下配色接近 eclipse /    终端下配色不好协调   - solarized：    暖色调，可以调节背景，有配套的终端配色 /    部分颜色与 highlight 插件配合后比较刺眼   - desert  - wombat  - vc  - kate  - ……   Vim 资源列表   我的 Vim 配置文件：包括.vimrc/.gvimrc/.vim/myVim，注意前面有“.”的是隐藏文件。配置文件里面已经补上了注释。   CoolShell：简明 Vim 练级攻略   CoolShell：主流文本编辑器学习曲线   Adam8157：在中科大关于 Vim 的演讲   把 vim 打造成一个真正的 IDE(1)   把 vim 打造成一个真正的 IDE(2)   把 vim 打造成一个真正的 IDE(3)   Vimer(朱念洋)使用的 vim/gvim 相关插件整理  ","categories": [],
"tags": [],
"url": "/wiki/redsky/vim_note/",
"teaser": null
},{
"title": "实用脚本集锦",
"excerpt":"这里收集来自网络的各种优秀的脚本。                  USTC 网络通脚本       2016/09/13 19:12                               豆瓣电台       2010/11/25 19:41       Stephen Zhang                 下载在线视频       2010/11/18 12:06       Stephen Zhang                 ssh 代理       2010/11/27 21:30       tinyfox                 You-Get       2013/04/29 16:04       Darcy Shen          ","categories": [],
"tags": [],
"url": "/wiki/scripts/",
"teaser": null
},{
"title": "豆瓣电台",
"excerpt":"摘自瀚海星云 bbs：http://bbs.ustc.edu.cn/cgi/bbstcon?board=Linux&amp;file=M.1286547291.A   针对网速慢的用户以及豆瓣电台的改动做了些修改～: D   dbfm.pl:   #!/usr/bin/perl -w use LWP; use HTTP::Cookies; use JSON; use Encode; use Term::ANSIColor; #use Smart::Comments;   my $time = 0; $SIG{INT} = \"quit\";   my $b = LWP::UserAgent-&gt;new; $b-&gt;cookie_jar(HTTP::Cookies-&gt;new);   my $form = {     form_email=&gt;'your_id',   ###----- 你的帐号-----###     form_password=&gt;'your_passwd',          ###----- 你的密码 ----###     redir=&gt;\"/service/account/?return_to=http%3A%2F%2Fdouban.fm&amp;amp;mode=checkid_setup\", };   #-------login the douban. my $login = $b-&gt;post('http://www.douban.com/login', $form); my $_c = $b-&gt;get('http://douban.fm/radio'); my $uid ='2650910'; if($_c-&gt;content=~/flashvars\\[s](http://perldoc.perl.org/functions/s.html)+=\\[s](http://perldoc.perl.org/functions/s.html)+\\{uid:'(\\d+)'/){     $uid=$1;  #-- Get the uid of your account. } #-------douban cache folder. my $USER_DIR = \"$ENV{HOME}/.douban\"; [mkdir](http://perldoc.perl.org/functions/mkdir.html) $USER_DIR unless -d $USER_DIR;   &amp;play_radio();   #-------play the mp3. sub play_radio{     while(1) {         my $mp3 = $b-&gt;get('http://douban.fm/j/mine/playlist?r=' .[rand](http://perldoc.perl.org/functions/rand.html)(). '&amp;type=n&amp;sid=&amp;uid='.$uid .'&amp;channel=1' );#这里的channel参数是新增的，取值0-9 ~:P         my $result = JSON-&gt;new-&gt;utf8(0)-&gt;decode($mp3-&gt;content);         $result  = $result-&gt;{song};         for my $hash(@$result){                 [print](http://perldoc.perl.org/functions/print.html) colored $hash-&gt;{'title'}.\" \", 'yellow';                 [print](http://perldoc.perl.org/functions/print.html) colored (\"$hash-&gt;{'albumtitle'}\",'blue'),'  ';                 [print](http://perldoc.perl.org/functions/print.html) colored \"$hash-&gt;{'artist'}\\n\",'green';                 [print](http://perldoc.perl.org/functions/print.html) colored \"$hash-&gt;{'picture'}\\n$hash-&gt;{'url'}\\n\", 'white';                 #######--如果不需要下载封面图片显示在conky上，以下2行不需要用---###############                 download_cover($hash);                 log2file(\"[Playing] \",$hash-&gt;{'title'},\"\\t(\",$hash-&gt;{'artist'},\")\\n\");                 #######--                 #qx {wget \"$hash-&gt;{'url'}\" -O /tmp/dbfm 2&gt;/dev/null &amp;&amp; mplayer /tmp/dbfm 2&gt;/dev/null};                             #这一行我换成带缓存的mplayer调用，单纯的管道在网速不行的时候不太给力～:)                 [qx](http://perldoc.perl.org/functions/qx.html) {wget \"$hash-&gt;{'url'}\" -O - 2&gt;/dev/null |mplayer -cache 1024 -  2&gt;/dev/null };         }     } }   sub quit{     [qx](http://perldoc.perl.org/functions/qx.html) {killall -9 mplayer};     if ([time](http://perldoc.perl.org/functions/time.html)()-$time&lt;3){         [print](http://perldoc.perl.org/functions/print.html) \"exiting...\\n\";         log2file(\"[Stopped]\\n\");         [exit](http://perldoc.perl.org/functions/exit.html) 1;     }     [print](http://perldoc.perl.org/functions/print.html) \"Press Ctrl+C again in 3 seconds to exit...\\n\";     [select](http://perldoc.perl.org/functions/select.html)([undef](http://perldoc.perl.org/functions/undef.html),[undef](http://perldoc.perl.org/functions/undef.html),[undef](http://perldoc.perl.org/functions/undef.html),1);     $time = [time](http://perldoc.perl.org/functions/time.html)();     # $SIG{INT} = \"quit\"; }   #######--如果不需要下载封面图片显示在conky上，以下都不需要用---############### sub log2file{     my $logfile=\"/tmp/douban.log\";     [open](http://perldoc.perl.org/functions/open.html) LOG, \"+&gt;&gt;/tmp/douban.log\" or [return](http://perldoc.perl.org/functions/return.html) -1;     [print](http://perldoc.perl.org/functions/print.html) LOG @_;     [close](http://perldoc.perl.org/functions/close.html) LOG;     [return](http://perldoc.perl.org/functions/return.html) 0; } sub download_cover{     my $hash = [shift](http://perldoc.perl.org/functions/shift.html);     my $covername = $hash-&gt;{albumtitle} . \"_cover.jpg\";     my $artist = $hash-&gt;{'artist'};     $covername = &amp;file_trim ($covername);     $artist = &amp;file_trim ($artist);     [mkdir](http://perldoc.perl.org/functions/mkdir.html) \"$USER_DIR/$artist\" if ! -d \"$USER_DIR/$artist\";       my $file = \"$USER_DIR/$artist/$covername\";     if ($hash-&gt;{'picture'}|| $hash-&gt;{'picture'}=~/^http.+jpg$/){           if ( ! -[s](http://perldoc.perl.org/functions/s.html) $file ){             $b-&gt;get($hash-&gt;{'picture'},':content_file' =&gt;\"$file\") or [return](http://perldoc.perl.org/functions/return.html) -1;         }         [unlink](http://perldoc.perl.org/functions/unlink.html) \"/tmp/douban_cover.jpg\";         [symlink](http://perldoc.perl.org/functions/symlink.html) \"$file\",\"/tmp/douban_cover.jpg\";     }     [return](http://perldoc.perl.org/functions/return.html) 0; }   sub file_trim{     my $file = [shift](http://perldoc.perl.org/functions/shift.html);     $file = decode('utf8',$file);     $file =~ s/['\"\\\\\\/&lt;&gt;\\?\\!:\\|\\*]/ /g;     $file =~ s/^\\s+//;     $file =~ s/\\s+$//;     $file = encode('utf8',$file);     $file; }   __END__  ","categories": [],
"tags": [],
"url": "/wiki/scripts/douban/",
"teaser": null
},{
"title": "下载在线视频",
"excerpt":"这个脚本借助于http://www.flvcd.com/，分析各主流视频网站的视频地址，根据给定的视频网页地址，下载其中的视频。   get-video.sh:   #!/bin/bash   flv_web_addr=$1 flv_dir=$HOME/videos    #存放视频地址的位置 flvcd_page_file=/tmp/flv_page_file   wget -q -O $flvcd_page_file \"http://www.flvcd.com/parse.php?format=high&amp;kw=$flv_web_addr\" flvurls=( $(cat $flvcd_page_file | grep \"&lt;U&gt;\" | sed s/\\&lt;U\\&gt;//g) )  #取出所有片段的视频地址 flvtitles=( $(cat $flvcd_page_file | grep \"&lt;N&gt;\" | iconv -f gb2312 -t utf8 | sed -n \"s/\\s\\{1,\\}/_/g;s/&lt;N&gt;//gp\") )  #取出所有片段的标题，将空格替换为下划线 nr_urls=${#flvurls[@]}   if [ $nr_urls -eq 0 ] then     echo \"No videos found in this page :(\"     exit 1 fi   for ((i=0; i&lt;$nr_urls; i++)) do     title=${flvtitles[$i]}     url=${flvurls[$i]}     echo \"title: $title\"     echo \"  url: $url\"     wget -U NoSuchBrowser/1.0 -O \"$flv_dir/$title.flv\" $url done   使用方法很简单：   ./get-video.sh http://v.youku.com/v_show/id_XMjA2NDgyOTg0.html   这将下载这个视频的 4 个部分，保存到$flv_dir 这个目录下。   如果不需要下载，也可以直接使用 mplayer 等播放器播放：   play-video.sh:   #! /bin/bash   wget -q -O- http://www.flvcd.com/parse.php?kw=$1 | grep \"&lt;U&gt;\" | sed s/\\&lt;U\\&gt;//g  | mplayer -playlist -   使用方法同上，   ./play-video.sh http://v.youku.com/v_show/id_XMjA2NDgyOTg0.html  ","categories": [],
"tags": [],
"url": "/wiki/scripts/download_flv/",
"teaser": null
},{
"title": "ssh 代理",
"excerpt":"这个脚本通过自动登录免费的 ssh 账户，实现自动的 ssh 代理， 绑定的端口为 7070   ssh_proxy.sh:   #!/bin/bash   cd `dirname $0` #进入ssh_proxy.sh所在的目录 SSH_ACCOUNT_SITE=\"http://dailimm.com/freessh.php\" #提供免费ssh账户的网站   'wget' -q $SSH_ACCOUNT_SITE -O /tmp/ssh_site HOST=$(cat /tmp/ssh_site | grep \"服务器地址\" | sed \"s/^.*value=\\\"\\(.*\\)\\\" onClick.*$/\\1/\") #获取服务器地址 USER= `cat /tmp/ssh_site | grep \"服务器用户\" | sed \"s/^.*value=\\\"\\(.*\\)\\\" onClick.*$/\\1/\"` #获取用户名 PASSWORD= `cat /tmp/ssh_site | grep \"服务器密码\" | sed \"s/^.*value=\\\"\\(.*\\)\\\" onClick.*$/\\1/\"` #获取密码   echo \"$PASSWORD\" #打印密码，当服务器忙时，密码获取的字段是服务器忙的信息 ssh.ex $HOST $USER $PASSWORD #利用expect实现自动登录   ssh_proxy.ex:   #! /usr/bin/expect -f   set HOST [lindex $argv 0] #获取服务器地址 set USER [lindex $argv 1] #获取用户名 set PASSWORD [lindex $argv 2] #获取密码 set PORT 7070 #设置绑定的端口号 set tout 60  #设置超时的时间   set timeout $tout   spawn ssh -D $PORT $USER@$HOST vi #连接服务器 expect \"password: \" send \"$PASSWORD\\r\" #输入密码   interact expect eof   使用方法：    ./ssh_proxy.sh   ssh_proxy.sh 和 ssh_proxy.ex 要在同一目录下。  ","categories": [],
"tags": [],
"url": "/wiki/scripts/ssh_proxy/",
"teaser": null
},{
"title": "USTC 网络通脚本",
"excerpt":"Windows VBScript 版   来源：https://gist.github.com/iBug/eb6fdbf55465352d6d91b1bdf75ad30f   Dim Http, Username, Password Username = \"username\" Password = \"password\" Set Http = CreateObject(\"MSXML2.XMLHTTP.3.0\") Http.Open \"GET\", \"http://wlt.ustc.edu.cn/cgi-bin/ip?cmd=set&amp;type=0&amp;exp=0&amp;name=\" &amp; Username &amp; \"&amp;password=\" &amp; Password, False Http.Send MsgBox \"Status: \" &amp; Http.Status, 65, \"WLT\"   Bash 版   来源：http://bbs.ustc.edu.cn/cgi/go?cgi=bbscon&amp;bid=77&amp;fn=M4CAEC63D   wlt.sh:   #!/bin/bash   curl -c /tmp/wlt \"http://wlt.ustc.edu.cn/cgi-bin/ip?cmd=login&amp;name=yourname&amp;password=yourpass\" &gt; /dev/null curl -b /tmp/wlt \"http://wlt.ustc.edu.cn/cgi-bin/ip?cmd=set&amp;type=6&amp;exp=0\" &gt; /dev/null rm /tmp/wlt   脚本说明：  其中 yourname 和 yourpass 分别是用户名密码，     type =      0 -- 教育网出口      1 -- 电信出口      2 -- 联通出口      3 -- 电信出口2      4 -- 联通出口2      5 -- 电信出口3      6 -- 联通出口3      7 -- 教育网出口2      8 -- 移动测试国际出口     exp =     0     -- 永久     120   -- 动态     3600  -- 1小时     14400 -- 4小时     39600 -- 11小时     50400 -- 14小时   Bash 简化版   来源：http://bbs.ustc.edu.cn/cgi/bbscon?bn=USTCnet&amp;fn=M52FAC28D   cURL 版本   wlt.sh:   #!/bin/bash curl --data \"name=user&amp;password=pass&amp;cmd=set&amp;type=出口&amp;exp=time\" \\ http://wlt.ustc.edu.cn/cgi-bin/ip   Wget 版本   wlt.sh:   #!/bin/bash wget --post-data=\"name=user&amp;password=pass&amp;cmd=set&amp;type=出口&amp;exp=time\" \\ http://wlt.ustc.edu.cn/cgi-bin/ip -O -   基于以上命令的一个交互式 POSIX Shell Script: https://github.com/hosiet/wlt   Perl 版   来源：https://bbs.ustc.edu.cn/cgi/go?cgi=bbscon&amp;bid=77&amp;fn=M41770FCB   wlt.pl:   #!/usr/bin/perl  $wget=\"/usr/bin/wget\"; $name=\"xxxx\"; $password=\"xxxx\"; $url=\"http://wlt.ustc.edu.cn/cgi-bin/ip ; $log=\"/dev/null\"; $page=\"/tmp/wlt_state\"; $cookies=\"/tmp/wlt_cookies\";  @type=( \"教育网出口(国内)\",         \"电信网出口(国际,到教育网走教育网,缺省)\",         \"网通网出口(国际,到教育网走教育网)\",         \"电信网出口2(国际,到教育网免费地址走教育网)\",         \"网通网出口2(国际,到教育网免费地址走教育网)\",         \"电信网出口3(国际,文献出口)\",         \"网通网出口3(国际,到教育网走教育网,到电信走电信)\"); @exp=   (     0,    120,    3600,         14400,    39600,    50400); @expstr=(\"永久\", \"动态\", \"1小时\", \"4小时, 缺省\", \"11小时\", \"14小时\");  # 登录网络通，用--keep-session-cookies和--save-cookies得到Cookies $cmd=\"cmd=login\"; # 这个输出页面不需要，只需要得到cookies $options=\"-o $log -O $log --keep-session-cookies --save-cookies $cookies --post- data \\\"$cmd&amp;name=$name&amp;password=$password\\\"\"; $command=\"$wget $options $url\"; system $command;  print \"请选择出口：\\n\"; $i=0; foreach (@type) {         print \"\\t\", $i+1, \": $type[$i]\\n\";         $i=$i+1; } print \"注：选择出口2、3无法使用的某些电子资源，使用出口4、5、6可能可以正常使用\\n \"; print \"[1-7] \"; $type=&lt;STDIN&gt;; $type=$type-1; $typestr=$type[$type];  print \"使用时限：\\n\"; $i=0; foreach (@exp) {         print \"\\t\", $i+1, \": $exp[$i]s, $expstr[$i]\\n\";         $i=$i+1; } print \"[1-6] \"; $exp=&lt;STDIN&gt;; $exp=$exp-1; $expstr=$expstr[$exp]; $exp=$exp[$exp];  $cmd=\"cmd=set\"; # 利用Cookies选择出口和时限 $options=\"-o $log -O $page --load-cookies $cookies --post-data \\\"$cmd&amp;name=$name &amp;password=$password&amp;type=$type&amp;exp=$exp\\\"\"; $command=\"$wget $options $url\"; #print $command,\"\\n\"; system $command;  # 输出网络通使用记录 #print \"\\t\\t\\t$name 的网络通状态：\\n\\t$typestr\\t$expstr\\n\"; open PAGE, $page; @page=&lt;PAGE&gt;; close PAGE; foreach $line (grep(/^&lt;tr&gt;&lt;td&gt;.*&lt;\\/td&gt;&lt;\\/tr&gt;$/, @page)) {         chomp $line;         $line=~s!&lt;tr&gt;&lt;td&gt;!!;         $line=~s!&lt;/td&gt;&lt;td&gt;! [!;         $line=~s!&lt;/td&gt;&lt;td&gt;!] !;         $line=~s!&lt;/td&gt;&lt;/tr&gt;!!;         print $line,\"\\n\"; }  ","categories": [],
"tags": [],
"url": "/wiki/scripts/wlt/",
"teaser": null
},{
"title": "You-Get",
"excerpt":"一个 Python3 写的 YouTube/Youku 视频下载器（实际上不止这两个）。  具体参见项目主页：http://www.soimort.org/you-get/   功能           支持 YouTube、Vimeo 等国外视频网站            支持断点续传            可设置 HTTP 代理       许可证   You-Get 在 MIT License 下发布。  ","categories": [],
"tags": [],
"url": "/wiki/scripts/you_get/",
"teaser": null
},{
"title": "中国科学技术大学开源软件镜像",
"excerpt":"mirrors.ustc.edu.cn 由中国科学技术大学、中国科学技术大学网络信息中心支持，USTC LUG 维护。   机器域名   IPv4/v6: mirrors.ustc.edu.cn（能解析出教育网/电信/移动/联通/v6 地址）  v4-only: ipv4.mirrors.ustc.edu.cn（能解析出教育网/电信/移动/联通地址）  v6-only: ipv6.mirrors.ustc.edu.cn   在有些地方 DNS 会解析出电信地址，但可能使用教育网地址访问更快，这时可以通过修改 hosts 指定强制使用教育网地址访问。   教育网 IP：202.38.95.110 (cernet.mirrors.ustc.edu.cn)  电信 IP：202.141.160.110 (chinanet.mirrors.ustc.edu.cn)  移动 IP：202.141.176.110 (cmcc.mirrors.ustc.edu.cn)  联通 IP：218.104.71.170 (unicom.mirrors.ustc.edu.cn)  IPv6：2001:da8:d800:95::110   支持的访问方式   http、https   rsync - 部分 为什么？   提供的服务   请访问 mirrors 主页以获取完整列表。   使用帮助   请点击主页源列表旁边的“Help”链接，获取镜像使用帮助。   欢迎您协助我们更新使用帮助，请访问LUG 的 GitHub 项目 mirrorhelp。我们对您的帮助表示感谢。   状态监控   在首页点击页面上方的同步状态链接，可以查看当前各镜像的同步状态，包括 成功与否/上游源/镜像体积等。 大家如果知道更好（更新、更快）的上游源，请联系我们。   如果在实际使用过程中发现镜像有问题，请联系我们。   联系方式   我们的邮箱： lug AT ustc.edu.cn  ","categories": [],
"tags": [],
"url": "/wiki/server/mirrors/",
"teaser": null
},{
"title": "中国科学技术大学校园网 PXE 服务 FAQ",
"excerpt":"一般用户   什么是 PXE   PXE(Pre-boot Execution Environment)是由 Intel 设计的协议，它可以使计算机通过网络启动。协议分为 client 和 server 两端，PXE client 在网卡的 ROM 中，当计算机引导时，BIOS 把 PXE client 调入内存执行，并显示出命令菜单，经用户选择后，PXE client 将放置在远端的操作系统通过网络下载到本地运行。 — 摘自 IBM 中国   In the mid-90’s, Compaq, Dell, HP, Intel, and Microsoft jointly released a system design guide for building Net PC systems. The guide describes a method of booting the operating system from a network server. This method eventually became known as the Preboot Execution Environment (PXE). Several manufacturers have created implementations of the PXE specification, and include a PXE compliant BootROM on their network cards. Most computer motherboards with embedded network interfaces include PXE in the BIOS.   PXE is designed to load a small (32kb or less) image called a Network Bootstrap Program (NBP). The NBP is then responsible for loading the operating system image. When using PXE to boot an LTSP workstation, the choices for an NBP are PXELINUX and Etherboot. — 摘自 LTSP   PXE.USTC 有什么用处？   用途举例：      安装新系统 – 安装 Linux/Windows，但是电脑没有软驱/光驱，有没有 USB 启动功能；   修复老系统 – 电脑因为病毒/引导程序损坏等原因，无法启动了；   学习 Linux – 试用 GNU/Linux，跳过安装/配置门槛；   Cluster – 快速部署和简单管理；   教学实验 – 在公共机房中创建 UNIX/C/C++/Java/Matlab 等的教学实验平台。   PXE.USTC 提供了哪些系统/工具？                  linux       一个 Debian GNU/Linux 系统，主要用于学习目的，目前只提供命令行界面                       knoppix       一个基于 Debian 的 LiveCD，主要用于桌面 如果您的网卡不被支持，可以试试 allnic，其中包含了所有网卡驱动，副作用是 initrd 加载会慢一些                 debian/redhat/mandrake       Debian/Fedora/Mandrake 网络安装程序                 rip       Recovery Is Possible, 基于 Linux 的小型急救系统(http://www.tux.org/pub/people/kent-robotti/looplinux/rip/)                 pxes       一个微型的 Linux 终端系统(http://pxes.sourceforge.net/)                 stresslinux       用于对硬件系统进行高负荷性能及稳定性测试(http://www.stresslinux.org/)                 mcafee/fprot/antivir/avast       几个病毒检测程序，个人版，同时包含在 dosnet 的 N:盘上病毒库每月更新                 freedos       FreeDOS, 兼容 MSDOS 的自由 DOS。不要试图在 FreeDOS 中安装 Windows                 dos       一个 8MB 的虚拟软盘，提供了很多工具                 dosnet       一个支持 TCP/IP 网络的 FreeDOS 虚拟软盘，它的 MSLAN 网络驱动器 N: 上的程序是 dos 的超集。如果它启动时无法自动加载网卡驱动，可以试试手动选择网卡列表中最后的 UNDIS/UNDIS3C 两种 PXE 网卡驱动           其中的很多系统工具有很大的危险性，在使用之前请仔细阅读它们的文档并小心操作。使用这些工具而造成的任何损害，均由使用者本人负全部责任。   各类系统工具的主要来源是:      Ultimate Boot CD，这里存有部分本地文档。 Ultimate Boot CD contains close to 100 tools that are extremely useful when setting up or maintaining a PC.   另外以下站点还有很多不错的软件资源：      UTILITIES FOR 16 BIT DOS DOS 之家软件站   dosnet 是由以下工具整合而成：      Bart’s Network Boot Disk A highly professional network boot disk for connecting to a network share on a Windows 9x/ME/NT4/2000/XP or Linux Samba machine. Modular design - based on modboot . This means you can customize the bootdisk yourself by adding only the modules you need.   Universal TCP/IP Network Bootdisk A DOS bootdisk that provides TCP/IP networking support.   Intel PXE PDK 2.0   享受 PXE.USTC 服务需要什么软硬件环境？   您的电脑最好内置有 PXE Boot Agent，并且已经激活；没有现成支持的话，有几种解决办法。 您所在的网段最好有能提供正确的 PXE 信息的 DHCP 服务器，以及可以通过 TFTP 数据包的网关；没有的话可以请管理员加以设置，或自己动手把网络启动系统加入 GRUB/LILO 菜单。 如果您所在实验室用地址转换/伪装技术建立了自己的子网，则需要配置。   如何激活我电脑中的 PXE Boot Agent？   目前有不少主板内部已经集成了 PXE 启动代码，一般的判别准则是：集成了网卡芯片的主板通常都会在 BIOS 中包含 PXE Boot Agent。 很多主板内置了 PXE Boot Agent 但是没有激活它，激活标志通常是：在电脑启动自检后在屏幕上会出现 PXE 字样。 为了激活 PXE Boot Agent，需要修改一到两处 BIOS 设置。具体的方法各个主板不尽相同，一般需要检查如下两项：      把 Onboard LAN 和 Onboard LAN Boot ROM (或类似的选项)设为 Enabled。   把 LAN (或类似的设备)设成第一启动设备 （如果你的电脑在启动时显示 “Press XX to boot from LAN” 字样，则可省略这一步）   升技 NF7 系列主板的设置：   Integrated Peripherals-&gt;OnChip PCI Device-&gt;         LAN Controller          [Enabled]         - LAN Boot ROM          [Enabled]  Advanced BIOS Features-&gt;         First Boot Device       [LAN]   微星 NEO 2 主板设置：   Integrated Peripherals-&gt;         Onboard LAN             [Enabled]         Load onboard LAN BIOS   [Enabled]  Boot Device Prioty:         LAN   有些主板还包含更多的设置选项。比如 Intel Boot Agent 的 激活 及 设定； Realtek Boot Agent 的设定。   高级用户   我的电脑没有内置 PXE Boot Agent，我该怎么做？   可以自己制作包含 PXE Boot Agent 的启动软盘/EEPROM，也可以把它加入引导程序的启动菜单。   如何制作 PXE 启动软盘？      打开 ROM-o-matic.net 网站   单击 Etherboot 5.3.12 或以上的版本   在 “1. Choose NIC/ROM type:” 中选择你的网卡类型   单击网页第四项中的 “Get ROM” 按钮下载它帮你动态生成的启动文件   插入一个空白软盘，运行网页第六项中提示的命令。(在 Windows 下的话就用 rawwrite 程序写软盘。)   如何制作 PXE EEPROM？      打开 ROM-o-matic.net 网站   单击 Etherboot 5.3.12 或以上的版本   在 “1. Choose NIC/ROM type:” 中选择你的网卡类型   在 “2. Choose ROM output format:” 中选择 “Binary ROM Image(.zrom)”   单击网页第四项中的 “Get ROM” 按钮下载它帮你动态生成的启动文件   带上此文件前去步瑞祺二楼，那里有卖 EEPROM 的公司，让他们帮你把文件烧刻进 EEPROM。   把做好的 EEPROM 插入网卡。   在做 EEPROM 之前请注意：      先做一张 PXE 启动软盘，确认运行无误。   确保网卡的 PCI ID 与第三步中所选的类型相匹配，否则 BIOS 不会调用它(虽然它的软盘版本可以正确运行)。   有的网卡用的是 28 pin EEPROM， 有的是 32 pin EEPROM。   如何把 PXE Boot Agent 加入 GRUB/LILO 的启动菜单？   以我的系统为例：      打开 ROM-o-matic.net 网站   单击 Etherboot 5.3.12 或较新的版本   在 “1. Choose NIC/ROM type:” 中选择你的网卡类型   在 “2. Choose ROM output format:” 中选择 “LILO/GRUB/SYSLINUX loadable kernel format (.zlilo)”   单击网页第四项中的 “Get ROM” 按钮下载它帮你动态生成的启动文件   将此文件放入 /boot 目录，并加入 GRUB 配置如下：   # cat&gt;&gt;/boot/grub/menu.lst&lt;&lt;EOF title           etherboot root            (hd0,2) kernel          /boot/eb-5.3.12-forcedeth.zlilo savedefault boot EOF   Windows 9x/XP/NT 用户需要下载安装 WINGRUB ，并阅读它提供的文档 和示例 。 强烈推荐 Linuxeden 的 GRUB 专区，这里可以找到中文文档及最新版本。   如何把某个 PXE.USTC 上的网络启动系统直接加入 GRUB/LILO 的启动菜单？   以我的系统为例：   # aptitude install tftp # mkdir /boot/knoppix ; cd /boot/knoppix # tftp pxe.ustc.edu.cn tftp&gt; get /tftpboot/knoppix/vmlinuz /tftpboot/knoppix/miniroot.gz tftp&gt; quit # cat&gt;&gt;/boot/grub/menu.lst&lt;&lt;EOF title           KNOPPIX on NFS root            (hd0,2) kernel          /boot/knoppix/vmlinuz nfsdir=pxe.ustc.edu.cn:/pub/pub knoppix_dir=KNOPPIX501 \\                 nodhcp lang=us ramdisk_size=100000 init=/etc/init apm=power-off nomce noeject quiet initrd          /boot/knoppix/miniroot.gz savedefault boot EOF   请把上面的(hd0,2)替换为您所使用的分区。   Windows 9x/XP/NT 用户需要下载安装 GRUB4DOS 。为了方便起见，我们做了一个可直接使用的 GRUB4DOS 启动包，用法如下：           下载 ftp://pxe.ustc.edu.cn/linux/GRUB4DOS/C/* 到 C:\\            将如下一行拷贝到 C:\\boot.ini 文件中去（一般是作为它的最后一行）：       C:\\GRLDR=\"GRUB for DOS\"                重启，在 Windows 启动菜单中选择 “GRUB for DOS”       此方法适用于 Windows XP/NT 操作系统, C:文件系统为 NTFS/FAT32 均可. 目前它包含了如下一些启动项目，欢迎使用：      Debian GNU/Linux for Education   Debian GNU/Linux for Education (Secure)   KNOPPIX Live Linux-on-CD   Debian Sarge Installer   Mandrake Installer   Redhat Fedora Core Installer   Etherboot (for rtl8139)   Etherboot (for nforce2)   Etherboot (for via-rhine)   memtest86+   如何直接把 Knoppix Live CD 的 iso 文件安装到本地硬盘？   下面的 linux 命令序列可以把 knoppix 3.7 安装到 /dev/hda2(空闲空间&gt;700MB)：   # wget ftp://202.38.64.123/pub/linux/iso/Knoppix-3.7/KNOPPIX_V3.7-2004-12-08-EN.iso # mkdir /mnt/knoppix-iso # mount -o loop KNOPPIX_V3.7-2004-12-08-EN.iso /mnt/knoppix-iso # mkdir /boot/knoppix # cp /mnt/knoppix-iso/boot/isolinux/{linux26,minirt26.gz} /boot/knoppix/ # cp -a /mnt/knoppix-iso/KNOPPIX / # umount /mnt/knoppix-iso # rmdir /mnt/knoppix-iso # cat&gt;&gt;/boot/grub/menu.lst&lt;&lt;EOF title           Debian GNU/Linux, KNOPPIX 3.7 root            (hd0,1) kernel          /boot/knoppix/linux26 ramdisk_size=100000 init=/etc/init fromhd=/dev/hda2 initrd          /boot/knoppix/minirt26.gz savedefault boot EOF   上面的硬盘分区号 /dev/hda2 及 (hd0,1) 请调整为您实际使用的分区。 Windows 9x/XP/NT 用户需要下载安装 WINGRUB 。   管理员   出于管理的需要，我们机房希望只为内部网络提供受限的 PXE 服务，或加以密码保护   您有两种选择：      自己动手，设置网关、 DHCP、TFTP 服务器，提供自己的启动菜单。   申请网络中心为你们的 MAC 地址或 IP 地址提供特殊服务。   我们实验室有自己的网关和 DHCP 服务器，该如何设置以便子网内的计算机能够访问 PXE 服务？   需要做两个方面的设置：           网关: 允许 tftp 数据包顺利通过       # modprobe ip_nat_tftp ip_conntrack_tftp           可以在系统启动的时候自动加载这两个内核模块：       # echo ip_nat_tftp &gt;&gt; /etc/modules # echo ip_conntrack_tftp &gt;&gt; /etc/modules                DHCP 服务: 为 PXELinux/Etherboot 提供必要的信息 以安装有 dhcp3-server 的 debian 系统为例：       # cd /etc/dhcp3 # wget http://pxe.ustc.edu.cn/dhcpd.pxe.conf # echo 'include \"/etc/dhcp3/dhcpd.pxe.conf\";' &gt;&gt; dhcpd.conf # /etc/init.d/dhcp3-server restart           如果只有较老版本的 ISC DHCP Server，或者其他 DHCP 服务程序，则只需加入以下两项配置信息，一般情况下都不会有问题：       next-server  pxe.ustc.edu.cn; filename     \"pxelinux.0\";           可以进一步建立自己的 TFTP 服务器，所需的文件可以从我们这里取得   # aptitude install tftpd-hpa # mount pxe.ustc.edu.cn:/tftpboot /tftpboot # cp /tftpboot/tftpd-hpa /etc/default   开发者   PXE 的加载过程？   这里是 LTSP 的 Booting with pxelinux.0；     受限和密码保护的 PXE 菜单系统是如何实现的？   缺省的菜单系统是用 PXELinux 实现的，受限的菜单可以用定制的 PXELinux 菜单程序实现，而 MD5 加密的口令保护目前只有 pxegrub 能够支持。           准备好 MD5 加密的口令       # grub-md5-crypt Password: Retype password: $1$NcP8o0$DrDhZlUX36Rt6Yzl2RavM/                准备好一个 menu.lst       # cat /tftpboot/restricted/menu.lst password --md5 $1$NcP8o0$DrDhZlUX36Rt6Yzl2RavM/ dhcp root (nd) color light-gray/blue black/light-gray title *=*=*=*=*=*=*=*=*=* Welcome to PXE.USTC *=*=*=*=*=*=*=*=*=*  title linux   kernel /tftpboot/linux/bzImage root=/dev/nfs nfsroot=202.38.73.198:/croot,rsize=8192,wsize=8192,tcp,flags=nolock,intr,v3 ip=dhcp title knoppix   kernel /tftpboot/knoppix/vmlinuz nfsdir=202.38.73.198:/croot nodhcp lang=us ramdisk_size=100000 init=/etc/init apm=power-off nomce vga=791 quiet secure BOOT_IMAGE=knoppix   initrd /tftpboot/knoppix/miniroot.gz title dos   kernel /tftpboot/images/memdisk floppy c=8 s=32 h=64   initrd=/tftpboot/images/dos.igz   lock                编译       # ./configure --disable-auto-linux-mem-opt --enable-preset-menu=/tftpboot/restricted/menu.lst --enable-diskless --enable-via-rhine # make # cp netboot/pxegrub /tftpboot/restricted/pxegrub.0           遗憾的是 pxegrub 已经有些年没更新了，不支持包括 nForce 在内的一些新网卡。 另外还有更严重的稳定性问题，估计是至少某些网卡会存在这种问题。   XXX 很不错，能不能把它也加入 PXE.USTC ？   只要版权没有问题，肯定是可以的。不过，请你务必提供直接可以网络启动的新系统，因为我们时间有限，将着重于维护现有的系统。 所提供的系统或者是一个可启动的软盘映像文件，或者是 kernel, initrd, 以及 pxelinux.cfg 配置文件。必要的话还可以给出 NFS-ROOT 系统。   如何把一张 Linux/BSD 的 Live CD 做成可网络启动？   可以参考 knoppix Live CD 中的 /usr/sbin/knoppix-terminal-server 脚本，以及它所创建出来的 initrd。 大体上需要对原有系统的 initrd 做如下两个修改：      创建一个更大的 initrd，并将原 initrd 中的全部内容，以及各种网卡驱动内核模块、NFS 网络驱动模块、静态链接的 ifconfig/pump 等网络配置程序拷贝进去；   修改其中 /linuxrc (或类似文件)， 把其中 mount cdrom 的命令改写为 mount nfs 的命令，并在这之前加入加载驱动模块，配置网络的命令。   对于 BSD 系统，其中的内核模块不妨交由 loader 来加载。   如何把一个安装在服务器硬盘上的 Linux 系统做成可网络启动？   可以仍然使用用 initrd：      LTSP 项目提供了相关的支持工具；   Etherboot 的 contrib/initrd 目录下包含的 mkinitrd-net 工具也可参考使用；   Debian 还提供了工具包 initrd-netboot-tools。   或者可以直接使用 NFS-ROOT 方案。基本思路是：      服务端：      在服务器上运行 NFS Server，把此系统所在目录共享；   在此系统中放一个 tmpfs 的处理脚本，动态的在内存文件系统中加载 /etc, /var, /root, /home 目录。 可参考 (NFS)pxe.ustc.edu.cn:/croot/etc/rcS.d/S03nfsboot.sh 脚本。      客户端：           定制编译一个包含所有必要的网卡驱动，以及如下选项：       # Networking options # Under \"Device Drivers ---&gt; Networking support ---&gt; Networking options\"  #  Kernel level IP autoconfiguration CONFIG_IP_PNP=y #  DHCP support CONFIG_IP_PNP_DHCP=y  # File systems # Under \"File systems --&gt; Pseudo filesystems\"  #  Virtual memory file system support CONFIG_TMPFS=y # #  /dev file system support # CONFIG_DEVFS_FS=y # # Automatically mount devfs at boot time # CONFIG_DEVFS_MOUNT=y  # Network File Systems # Under \"File systems --&gt; Network File Systems\"  #  NFS file system support CONFIG_NFS_FS=y #  Provide NFSv3 client support CONFIG_NFS_V3=y #  Root file system on NFS CONFIG_ROOT_NFS=y                启动此内核时使用参数：       root=/dev/nfs nfsroot=202.38.73.198:/croot,rsize=8192,wsize=8192,tcp ip=dhcp           相关链接           Etherboot              Homepage http://www.etherboot.org/       Wiki http://wiki.etherboot.org/           Diskless Linux http://frank.harvard.edu/~coldwell/diskless/   PXE Documentation Version 1.0（缺少链接）        HOWTO setup a PXE 2.x server under Linux http://clic.mandrakesoft.com/documentation/pxe/       基于 NFS*ROOT 的 Gentoo Linux 的 PXE 安装方法   Diskless Nodes with Gentoo http://www.gentoo.org/doc/en/diskless-howto.xml   FreeBSD Diskless Clients http://the-labs.com/FreeBSD/Diskless/   Network Booting i386 Unix Variants http://www.munts.com/diskless/netboot.html   Booting FreeBSD via PXE http://www.tnpi.biz/computing/freebsd/pxe-netboot.shtml   Remote Network Boot via PXE   Index of /tweaks/dhcp3   如何远程安装 Linux   Diskless Linux   Etherboot Wiki - Main.HomePage   PXE Documentation Version 1.0   Ultimate Boot CD - Overview   Bootable CD Utilities by reanimatolog - Образы загрузочных дискет и жестких дисков   All-drivers Etherboot floppy &amp; how to install etherboot to a hard disk   ROM-o-matic.net   :: ThinStation - a light, full-featured thin client OS ::   Index of /debian/dists/unstable/main/installer-i386/current/images/netboot   [YAGI - Deep Space DaN]   Pollix LiveCD   Bart’s Network Boot Disk   Universal TCP/IP Network Bootdisk for M$ Networks   DOS and W31 utilities for MSDOS, DRDOS, FreeDOS, PCDOS, OpenDOS, and PTSDOS 16 bit DOS versions.   Install GNU/Linux without any CD, floppy, USB-key, nor any other removable media   Boosting the power of a DOS image   GRUB4DOS and WINGRUB Project Homepage   UBCD for Windows   The Labs: FreeBSD Diskless   Gentoo Linux Documentation – Diskless Nodes with Gentoo   Network Booting Unix Variants   The Network People, Inc. - FreeBSD 5 PXE boot recipe   MorphixWiki! - Qemu   Index of /qemu/utilities/QEMU-HD-Mounter   DistroWatch.com: clusterKNOPPIX   [Wolves] using GNU Screen to join two terminals?   Linuxeden 的 GRUB 专区 : 首页   ParallelKnoppix: Bootable CD to Create a Linux Cluster in 15 Minutes   PXE 網路開機實作*  ","categories": [],
"tags": [],
"url": "/wiki/server/pxe/faq/",
"teaser": null
},{
"title": "中国科学技术大学网络启动服务",
"excerpt":"pxe.ustc.edu.cn 由中国科大图书馆、网络中心和学生 Linux 用户协会共同维护，旨在为科大校园网提供各种网络启动服务。现在支持引导 Debian、Ubuntu、Arch Linux、CentOS 等常见 Linux/UNIX 发行版安装镜像或 LiveCD，同时还提供 Clonezilla、GParted Live 等实用系统维护工具。   中国科学技术大学校园网 PXE 服务 FAQ   Planet: 一根网线安装 Linux——PXE 介绍   如果遇到使用问题，请邮件联系 lug AT ustc.edu.cn。   新版网络启动服务   基于 GRUB 的新版网络启动服务支持传统 PXE 模式和UEFI 模式的网络启动。代码位于 https://github.com/ustclug/simple-pxe   校内 DHCP 服务会自动推送网络启动配置，只要在 BIOS 设置中开启网络启动就可以了。   从本地 GRUB2 加载（UEFI）   如果您的机器是 UEFI 模式启动的、UEFI 固件带有网络支持，并已经安装有 GRUB2，则可以在 GRUB 命令行中直接加载网络启动菜单：   insmod efinet http net_bootp configfile (http,202.38.93.94)/boot2/menu/root.menu   也可以制作一个 EFI 可执行文件，放在 U 盘中方便部署。在 Linux 系统中，把前面的命令行保存到文件 grub.cfg ，然后运行命令：   grub-mkstandalone --compress=xz -O x86_64-efi --locales= --fonts= --themes= -o grub.efi \"boot/grub/grub.cfg=./grub.cfg\"   生成的 grub.efi 文件就可以在 UEFI shell 中直接运行，或者放到 FAT 格式的 U 盘中的 /EFI/BOOT/bootx64.efi 路径，使 UEFI 固件自动加载它。   还可以接着用下面命令制作一个 FAT 软盘镜像，有些服务器的 IPMI 支持远程加载软盘镜像，这样就可以方便地远程维护服务器了：   truncate -s 1474560 floppy.img mformat -f 1440 :: -i floppy.img mmd '::/EFI' '::/EFI/BOOT' -i floppy.img mcopy grub.efi '::/EFI/BOOT/bootx64.efi' -i floppy.img   从 iPXE 加载（传统 PXE）   用 iPXE 脚本或者命令行模式执行以下命令：   dhcp set 210:string http://202.38.93.94/boot/tftp/ chain ${210:string}pxelinux.0   旧版网络启动服务   旧版网络启动服务是吴峰光校友在 2001-2005 年创建的，基于 SYSLINUX。   仅支持传统 PXE 启动，现在已不再更新。   dhcp //如果已经获取到了地址则请忽略 set 210:string http://202.38.93.94/boot/tftp/ chain ${210:string}lpxelinux.0  ","categories": [],
"tags": [],
"url": "/wiki/server/pxe/",
"teaser": null
},{
"title": "《程序员的自我修养》读书笔记",
"excerpt":"李博杰 (bojieli AT gmail DOT com) 最后修改：2012-06-01   近来在郭家华的推荐下，读了 LUG 书库的《程序员的自我修养——链接、装载与库》一书，有种相见恨晚的感觉。然而快到期末考试了，没有时间把全书读完，因此只写了一部分。   我读技术类图书有个习惯，或者说是毛病：经常是先想想如果是自己设计这个系统会采用怎样的一种机制，然后再去读书中所讲的实现方式。由于计算机应用系统的设计不是什么算法难题，一般都能设计出一套像模像样的机制；然而从结构的优雅性角度考虑，我设计的机制有时充斥着一些与 UNIX 文化不符的元素。本文撷取链接、装载与库中的几个设计点，与大家分享我个人的想法与 UNIX/Linux 大师的设计。   There are two ways of constructing a software design. One is to make it so simple that there are obviously no deficiencies; the other is to make it so complicated that there are no obvious deficiencies. The first method is far more difficult. – The Emperor’s Old Clothes, CACM February 1981   有两种方式构建软件：一种是把它设计得如此简单以至于明显没有缺陷，另一种是把它设计得如此复杂以至于没有明显的缺陷；前一种的难度大得多。——Hoare 于图灵奖演讲《皇帝的旧衣》   0 关于编译的闲扯   0.1 可执行文件 ≠ 编译 + 汇编   我们知道，C 语言经过编译器能生成汇编码，再经过汇编器能生成机器码。这对于我们在 C 语言学习阶段所编写的几十行、数百行的小程序似乎是没有问题的。反正整个源代码位于同一个.c 文件中，只要处理库文件就行了。   针对这样的应用场景，我设想的执行过程：           程序的机器码从硬盘直接“复制”到内存（没有考虑可能带来的问题）；            程序从一个固定的点（如虚拟地址 0x80000000）开始执行，操作系统只要一条跳转指令就行了；            程序需要获取环境变量和参数，那么规定规定 argc 存储在 0x70000000，紧接着是指向参数字符串的 argc 个指针（argv）；环境变量也可以人为规定一个地址；            这个固定的点由编译器放一段“桩代码”（stub），唯一的作用就是把 argc 和**argv 压栈，调用 main 函数；从 main 函数返回时将栈恢复到初始状态，将 main 函数的返回值返回给操作系统。       我最初设想的编译过程：printf 等标准库函数肯定是有源代码的，那么只要把这些库函数的源代码复制到源文件里就可以编译了，不会出现函数名找不到的问题。这时，可执行文件 = 编译 + 汇编。   当然，库函数的源码可能很长，每次编译太浪费时间了。另外一些商业编译器可能不愿意提供源代码。因此需要提前把这些库编译好，再把这些编译好的函数拼装在一起。这时，可执行文件似乎不是编译和汇编就能生成的了，这些提前编译好的库该如何与新编译的二进制文件整合在一起呢？   我改进的编译过程：每个标准库函数编译成一段机器码，存储在以函数名命名的文件里。           根据所使用的库函数及其机器码长度，安排各库函数所在的位置；            编译用户编写的程序，生成机器码，其中对库函数的调用地址已经确定了；            将各库函数的机器码放在刚才安排的位置。       如果编译器仅仅需要解决对标准库函数的“预编译”的话，这样的机制似乎已经足够了；然而实际的项目不可能只有一个 C 文件。一个最简单的办法是把所有 C 文件“一视同仁”，全部粘贴到一个大的 C 文件中就行了。但 C 语言不同于面向对象语言，在函数之上再无封装层次，这样函数名就不得不起得很冗长，以免发生不同模块的函数冲突。   0.2 封装   由于没有用 C 语言编过超过 1000 行的程序，直到读 Linux 内核源代码，我才了解到 C 语言 extern 关键字的作用其实很大。被这个关键字修饰的函数才能被跨文件调用。可以理解为“文件”成了一种“命名空间”或“类”，include 的其他文件就是与它有继承关系的类，声明为 extern 的变量和函数就是 protected 的，其他变量和函数都是 private 的。当然，C 语言的 include 机制比起面向对象语言的继承机制还差得远，但有 Makefile 这个强大的助手，源代码文件之间的逻辑关系是可以理顺的。   我和郭家华曾争论过 Makefile 的必要性。我当时认为，内核中对变量命名的规则是比较严谨的，因此让每个文件 include 内核中的 n-1 个其他文件，就不用费心思写 Makefile 了（暂不考虑生成 bzImage 等压缩格式的问题）。郭家华提出了三个问题：           如果只修改了一个非核心部分的源文件，按照我的设计需要把所有文件重新编译一遍，而 Makefile 能够根据时间戳和依赖关系判断哪些文件是受到影响需要重新编译的，减少了编译所需时间；            内核的一个重要机制是内核模块，如果没有 Makefile，模块就无从谈起，整个内核的可扩展性会大打折扣；当然，可以采用一种“Makefile 简化版”来定义内核模块，不过 Makefile 已经足够好了；            尽管命名是严谨的，但几千万行的内核难免有 extern 的符号“擦枪走火”的问题，显式规定依赖关系更好。       更严肃地说，这是一个封装方面的问题。我一直认为程序的一个模块应该对其他模块“充分开放”，这样才便于了解对方模块的内部原理，编写“有针对性”的代码；我知道这违反了封装的基本原则。《人月神话》第一版中也阐述了这种对封装的忧虑，然而在二十周年纪念版中 Brooks 转变了观点，认为封装是正确的。微软的 Office 系列程序对彼此的内部有着密切（或称杂乱）的了解，这在某种程度上使得系列软件的集成度更高，然而在软件整体的稳定性上付出了沉重的代价，更不用说与其他软件的互操作性了。编写一个有着杂乱内部了解的程序是信手拈来的，然而随后的维护工作会使人抓狂。M$善于先做一个“能用就行”的系统，然后在其基础上修修补补，这更多是基于商业上的考虑；与完美主义的 UNIX 文化格格不入。   事实上，我自己编写的程序之所以没有变成一团乱麻，是因为在开始设计时已经定义了较为清晰的边界，只是没有把这些边界显式规定下来。但在多人合作中，靠文档规定这些接口和边界，远不如使用编程语言内置的机制，用逻辑的形式（如 include、类的继承、Makefile）把各模块的接口和关系明确定义。“制度是死的，人是活的”，靠自觉维护代码的内部边界，不如立下制度，“一百年不改变”，遇到实在绕不过去的大变动再去修改制度。经过一年的思考，我认为软件工程界的普遍观点是正确的。   0.3 ABI   扯远了。前面提到了函数调用，其实这里已经引出了二进制接口的问题。我最初学习 C 语言时，老师说 C 语言的函数调用方式是调用者把参数压栈，函数内把参数从栈中取出来；现在想，如果函数的参数个数很少，整个函数又不适合内联，则反复压栈的开销是较大的，为什么不规定第一个参数在第一个寄存器，第二个参数在第二个寄存器……呢？其实栈传参和寄存器传参就是两种不同的方式。容易想象不同的编译器如果采用不同的传参方式，甚或同一种编译器的不同编译参数指定了不同的传参方式，则生成的二进制文件是无法链接到一起使用的。   ABI（Application Binary Interface）的问题还包括（我不懂 C++，所以有关 C++的没有列出）：           内置类型（int、float 等）的大小            存储的大小端            对齐方式（按 4 字节还是 8 字节对齐）            组合类型（如 struct、union）的存储方式（如位域的存储顺序）            外部符号的命名方式与解析方式            参数传递的方式、返回值传递的方式            堆栈的分布方式，如局部变量和参数的入栈顺序            函数调用中，寄存器由调用者还是被调用者保存现场，包括哪些寄存器       C 语言标准的制定者采取了回避的策略，在 C99 标准中这些问题都被定义成“implementation-defined”。像内置类型大小这样的参数在 limits.h 等头文件中有定义，而更多的问题是对开发者不透明的。随着时代的推移，UNIX 系统下编译器的 ABI 向 LSB（Linux Standard Base）和 Intel Itanium C++ ABI 靠拢，留下了 GCC 和 MSVC 两个短时间内难以妥协的阵营。   1 链接   要实现一个由很多 C 文件组成的项目的编译，需要首先把每个 C 文件编译成一种“中间格式”，再把它们组合起来。这种中间格式就是“目标码”，组合的过程就是“链接”。链接过程初看简单，但仔细一想有很多问题：           编译时并不知道其他文件的存在，则调用同一文件内的函数时，该引用哪个内存地址？更具体地说，最后生成的二进制文件被载入内存后，每个函数的虚拟内存地址能否确定？如果随意指定，则不同 C 文件的函数地址就会发生冲突。            编译时引用的外部符号（如函数、变量）是未知的，如何引用它们？       第一个问题不难解决。尽管每个函数的虚拟内存地址不能确定，但其相对调用点的偏移是可以确定的。处理器的寻址模式有相对寻址，那么在同一文件内的目标码之间进行相对寻址即可。   第二个问题：让 C 编译器事先载入所有待编译的源代码、“预编译”、安排所有符号的位置、“正式编译”并不是一个好主意。首先，无法把库编译成二进制文件发行，每次都必须将所有代码连同库的源码一同编译，太耗时，这是无法接受的；其次，C 编译器承担了过多的责任，成为一个庞大而臃肿的整体，不利于编译系统的模块化。在 UNIX 中，高效的进程生成、丰富而简洁的进程间通讯机制（如管道、重定向、socket）、一切皆文件的统一性理念鼓励让众多协作的小工具（如 cc、as、ld、make）组成一个内部边界清晰的大型系统。   由于机器码中没有“函数”“变量”的概念，一切都是内存地址，单个文件编译出的机器码本身难以表示对外部函数和变量的引用，在指令内部相对寻址偏移的一丁点空间也很难同时描述清楚所引用的是哪个外部符号和相对符号的偏移。   我的想法是，既然从机器码查符号的方式走不通，那就反过来建立索引，在“中间格式”中存储一张表，存储所有机器码中引用了外部函数和变量的指令位置、所引用符号的名称，而机器码中相应指令的相对寻址偏移只需存储相对变量基址的偏移（不能简单填 0，数组元素 int a[10]的地址就要在符号 a 地址上加上 10*sizeof(int)）。   在链接时：           把所有需要链接的“中间格式”文件拿过来，获取所有符号列表及其所需存储空间；            为所有符号安排在虚拟内存中的位置；            根据“引用表”找到所有需要修改的指令，依次将它们的寻址偏移修改成正确的值。这计算起来很容易：相对寻址偏移=目标符号的虚拟内存位置-当前指令的虚拟内存位置+相对符号基址的偏移（早先保存在相对寻址偏移的数值）。当时我没考虑绝对寻址，其实类似：绝对寻址偏移=目标符号的虚拟内存地址+相对符号基址的偏移。当然，要确定所用寻址方式和偏移在指令中的位置，肯定是要根据指令的格式“对症下药”的。       这就是传说中的“重定位”（Relocation）过程，而这张“引用表”就是“重定位表”，“中间文件”则是“可重定位文件”。   我当时还在为这个“引用表”存储在哪里担忧，如何把这些数据与机器码分开呢？所幸可执行文件格式的设计者早就考虑了这个问题：目标文件中不只存在要载入内存的代码和数据。   2 目标文件   2.1 目标文件结构   目标文件不能只是一堆机器码。很多文件格式有文件开头的 magic number，例如脚本文件的第一行是“#!/path/to/interpreter”，微软的 Word 97/2003 文档开头 7 个字节是 D0CF11E。这些 magic number 一方面是为了使用 file 等命令查询文件类型，在 Linux 桌面环境中调用相关的程序打开文件；对于可执行文件有更重要的意义：Linux 中的 execve 系统调用会读取文件的前 128 个字节，匹配合适的可执行文件装载过程，例如看到“#!”两个字节开头的文件就知道是应该调用#! 后面的解释器来解释执行，看到“0x7F e l f”四个字节开头的文件就知道是 ELF 可执行文件，看到“cafe”四个字节开头的文件就知道是 Java 可执行文件（为什么用 cafe 而不是 java？）。   ELF 文件的头部除了 magic number，还需要指定 ELF 文件类型（可重定位？可执行？共享目标文件？UNIX 中文件的类型不是通过扩展名判断的）、ELF 版本（在文件格式中加入版本信息有助于提高可扩展性）、运行平台、ABI、段表描述符等多种信息。如果不符合当前环境，内核会拒绝执行，而不是执行到一半发现错误再不明不白地退出，这也是一种错误预防机制。   目标文件中需要存储哪些信息呢？           代码和数据显然是要的，而且必须分开，因为代码的属性一般是只读、可执行，数据的属性一般是读写、不可执行。            程序里的所有数据都是可读写的吗？用 const 声明的变量、字符串常量并不需要写，那么在加载的时候将其映射为只读，可以增强程序的安全性；嵌入式系统的烧写器可以将其写入 ROM，节约宝贵的 RAM 空间。看来需要一个只读数据段。            在计算机竞赛中，我们常常在程序的开头声明一个 a[2000][2000]的全局大数组，这个数组显然不能存储在数据段里，不然可执行文件的大小就有数 MB。因此未初始化数据存储在 BSS 段中。操作系统中装载可执行文件的例程在进程初始化时，分配这么大的一块内存空间就行了。            前面提到的重定位表也是需要存储的。            要支持单步执行等调试工具，还要增加新的段以存储源代码行号（.line）等信息。            编译器版本信息（.comment）、额外的编译器信息（.note）            后面要提到的动态链接信息（.dynamic）            程序初始化与终结代码，用于 C++全局构造与析构。把这些代码放在代码段的开头、结尾行不行呢？不行，因为多个目标文件链接起来时，这些初始化操作仍然要放在新目标文件的开头结尾，而链接器是无法分辨代码段中哪些是初始化代码的。逻辑上不同的东西不应该放在一起；一种信息只要不太浪费空间、影响性能，就可以被保留；如果图省事把信息丢弃了，那么后面的处理过程再想用到就不可能了。       由于目标文件中要存储多种类型的信息，需要一种分节机制，将每种信息放在一节里，逻辑清晰。这里的“节”（section）也常被称为“段”，不过不要与内存中的“segment”混淆。分段有利也有弊，一个麻烦之处就是 ELF 文件存储的偏移信息要同时指定段名和在此段中的偏移。ELF 文件中除文件头外最重要的结构就是段表（section header table）了，它以结构体数组的形式描述了 ELF 各个节（段）的信息，例如段名、段长、在文件中的偏移、读写权限等。   2.2 符号表   在关于重定位机制的讨论中，我最初的想法就是在重定位表中保存符号名的字符串。被高级语言惯坏了的我们可以将字符串作为基本数据类型，但在 C 语言的结构体中变长字符串需要用指针指向一段结构体以外的空间来存储。那么字符串放在每段的最后，还是集中放在整个目标文件的最后，还是散落在任意的位置？不论怎样，乱堆乱放的字符串都对文件格式的统一性造成了破坏。程序中还要在内存中的字符串指针、文件中字符串的偏移量之间来回转换，没有统一的机制简直是一场噩梦。   ELF 文件格式中，存在两个专门的字符串表（section）：.strtab 用于普通字符串，如符号名；.shstrtab 用于段表中用到的字符串，如段名。（我不明白段表为什么得到了特殊待遇）字符串的存储方式很简单，每个字符串末尾用“\\0”作为分界。注意到段名本身也是存储在字符串表中的，那么找到字符串表所在段就成了一个“鸡生蛋，蛋生鸡”的问题。事实上，ELF 文件头中的 e shstrndx 就是.shstrtab 段在段表中的下标，而段表在文件中的偏移是 ELF 文件头中 e shoff 指定的。ELF 文件格式中这种一环扣一环的事情还真不少。   有了保存字符串的机制，存储各种符号就只需要指定其在字符串表中的下标（即第几个字符串）了。这样机器码中“放不下”的函数名、变量名就可以放到字符串表中，这需要做一个从符号在机器码中的位置到字符串表中符号名的映射。这个映射就是“符号表”（.symtab section）。事实上，符号表中的每一个结构体不仅描述了符号所在段、符号在段内的偏移、符号名在字符串表中的下标，还描述了符号类型（数据对象、函数、段、文件名等）、符号所对应数据类型的大小等。   符号表在动态语言的解释过程中是起到关键作用的。以 PHP 为例，“变量的变量”（即 $a=“varname”; $varname=100; $$a 的值为 100）“执行动态生成代码”等“可怕”的功能，在 PHP 解释器中是用一个从变量名到内存中存储地址的映射实现的。   事实上，PHP 的 Zend 引擎内部使用结构体 zval 来表示变量。用强类型实现弱类型并不复杂：   typedef struct _zval_struct { \tzvalue_value value;\t// 变量的值 \tzend_uint refcount;\t// 引用计数，用于写时复制 \tzend_uchar type;\t// 变量类型 \tzend_uchar is_ref;\t// 是否是引用（如果是引用，则写时不复制） } zval;  typedef union _zvalue_value { \tlong lval;\t\t// 整数类型（包括bool）、资源类型（用整数表示资源序号，类似C中的文件描述符） \tdouble dval;\t\t// 浮点类型 \tstruct { \t\tchar *val; \t\tint len; \t} str;\t\t\t// 字符串类型 \tHashTable * ht;\t\t// 关联数组类型（关联数组类似Python中的字典）（用hash表存储） \tzend_object_value obj;\t// 对象类型 } zvalue_value;   这不是一个很难想到的解决方案，当时设想做 C 语言在线解释器时就提出了类似的方案，以在弱类型的 javascript 中表示强类型的 C 变量。   在 Zend 引擎中，变量（zval）存储在 hash 表形式的符号表中，其 key 为变量名，value 为 zval。全局符号表保存了顶层作用域（即不在任何类、函数内）的变量，每个函数和类的方法在执行期间还有自己的一个符号表。调用一个函数或类的方法时，会为它创建一个符号表并设为活动（active）符号表，所有函数内定义的变量都保存在这个符号表中，从函数返回时销毁这个符号表。在函数或方法之外时，才会使用全局符号表。PHP 有个很奇怪的规定，在函数内使用全局变量需要用 global 声明，恐怕是与符号表有关吧。   PHP 的函数是全局的，因此并不存储在符号表里。函数分为内部函数（internal function）和用户函数（user function），内部函数（用 C 写成的 PHP 核心及扩展中的函数）存储在函数表里，用户函数（用 PHP 写的函数）指向它的 Opcode（中间码）序列。由于本文重点不是 PHP，有兴趣的读者请自行参阅 zend internal function、zend op array、zend function 三个结构体。类中的方法是有作用域（仅对类的实例有效）的，因而上述三个结构体中都有一个指向“类”（zend class entry）的指针。执行一个函数时，如果在内部函数表中找到了作用域内的函数，则直接调用之；不然，在用户函数中寻找作用域内的函数，并调用 zend execute 执行其 opcode。   struct _zend_op { \topcode_handler_t handler;\t// 处理函数，与opcode对应 \tznode result;\t\t\t// 操作结果 \tznode op1;\t\t\t// 操作数1 \tznode op2;\t\t\t// 操作数2，不是每个操作都会同时使用result、op1、op2 \tulong extended_value;\t\t// 执行过程中需要的其他信息，是一组flags \tuint lineno;\t\t\t// 源码中的行号（调试和错误处理时用） \tzend_uchar opcode;\t\t// 操作类型，可以认为是指令（例如FETCH_W是以写的方式获取变量到“寄存器”，ASSIGN是赋值，ECHO是显示） }  typedef struct _znode { \t// 操作数类型：常量、变量（用户可见的）、临时变量（引擎内部的）、编译后的变量（有点像寄存器，为了避免每次使用变量都去hash表里查询，效率太低） \tint op_type; \tunion { \t\tzval constant;\t\t\t// 常量 \t\tzend_uint var;\t\t\t// 变量（可见、临时） \t\tzend_uint opline_num; /* Needs to be signed */ \t\tzend_op_array *op_array; \t\tzend_op *jmp_addr; \t\tstruct { \t\t\tzend_uint var; /* dummy */ \t\t\tzend_uint type; \t\t} EA;\t\t\t\t// 编译后的变量 \t} u; } znode;   回到 C 语言目标文件中的符号表，有个目前看来并不严重的问题：同名 extern 符号在不同文件中代表同一个符号，重复定义是不允许的；然而，汇编语言的程序可没有 extern 机制，如果一个汇编语言程序定义了 main 函数，那么所有与之链接的 C 程序都不能定义 main 函数。不像 PHP 中每个作用域都有一个动态的符号表，目标文件中的符号表只能有一个，而且必须在编译时确定。为此，UNIX 下的 C 语言规定所有全局符号名前加上下划线，称为符号修饰；目前 MSVC 保留着这个传统，而 GCC 默认已经去掉了。然而，在 C++语言中，符号管理就没有这么简单了。首先，C++允许多个不同参数类型的函数拥有一样的名字，这要求修饰后的符号名反映参数的类型信息；其次，不同的命名空间、类中可以有同名符号，这要求修饰后的符号名反映命名空间、类的信息。具体的符号修饰策略就见仁见智了。   了解了目标文件的格式，前面的链接机制还要完善几处细节：           对于可重定位文件，重定位入口的偏移是重定位入口所要修正的位置的第一个字节（而非指令的第一个字节）相对于段起始的偏移（而非相对可重定位文件开头的偏移）；对于可执行文件或共享对象文件（动态链接用），重定位入口的偏移就是所要修正位置的第一个字节的虚拟地址，这在动态链接时会用到。            如何知道其他文件中符号的名称呢？要知道，机器码中只有内存地址，没有符号名。事实上，所有导出（extern）符号都存储在目标文件的符号表中。            重定位表中事实上并不存储外部符号的名称字符串，而是存储了重定位入口的类型（指定寻址偏移的不同修改策略）和此符号在符号表中的下标。       2.3 弱符号与弱引用   我们在编写程序时，有时希望函数拥有可变个数的参数，例如一个函数后面几个参数很少用到，则平时不写以使用默认值，需要时再填上这些参数。这可以用 C 语言的可变参数机制实现。类似地，我们可能希望从一个库中选出某些功能模块，制成若干有不同功能的版本，而不改变库的链接特性；或者用自定义的库函数覆盖库中的函数。这些在 C++中可以用类的继承和函数的重载很好地实现，但 C 语言的使用者们怎么办？GCC 提供了“弱符号”机制，需要在符号定义前加入   __attribute__((weak))   关键字。与此相对的普通符号被称为“强符号”。           不允许同名强符号被多次定义；（“定义”与“声明”是两码事）            如果一个符号在一次定义中是强符号，在其他定义中是弱符号，则选择强符号；            如果一个符号在所有定义中都是弱符号，则选择占用空间最大的那个。       编译器将未初始化的全局变量定义作为弱符号处理，以便链接器在链接过程中确定其大小并最终在 BSS 段中分配空间。因此，同名全局变量只能被初始化一次，而未初始化的同名全局变量可以在若干个文件中出现。这也是必要的：某个公共头文件定义了一些公用的全局变量，每个源文件都直接或间接包含之，则源文件编译成的每个可重定位文件都包含这些全局变量的定义，这些可重定位文件要能正常链接才行。   弱符号在 ELF 文件的符号表中“符号所在段”设为 SHN COMMON。与之对应，在当前 ELF 文件中未定义的符号设为 SHN UNDEF，包含绝对的值的符号（包括强符号、文件名等）设为 SHN_ABS。   符号的定义有强弱，那么符号的引用呢？GCC 还提供了“弱引用”机制，在符号声明前加入   __attribute__((weakref))   关键字，则如果该符号未定义，GCC 将不报错，而用一个特殊值（0）替代之，程序将有机会在不提供此功能的情况下运行，而不是无法链接成功，使得程序的功能更便于裁剪和组合。   弱引用在 ELF 文件的符号表中“符号绑定信息”设为 STB WEAK。与之对应，对目标文件外部可见（如使用 extern 声明的）全局符号设为 STB GLOBAL，对外不可见的局部符号设为 STB_LOCAL。   3 动态链接   3.1 装载的困境   我们已经知道可执行文件是分为若干段的，而这些段中有的是数据，有的是代码，还有的是字符串表等不需要在运行时装载入内存的信息。因此，开始运行一个进程并不是将文件读入内存，并跳转到起始地址这么简单。当然，一个段是否需要装入并不是很难判断的。   一种最粗糙的方法是，把程序依赖的所有库在链接时放进可执行文件，装载时只要将各虚拟内存中的 section 映射到物理内存的 segment 就行了。但这样存在严重的问题：例如每个 C 程序都依赖 libc 库，那么按照这种方式，libc 库就会在磁盘里存在成千上万份拷贝，每个进程在内存中也有一份 libc 的拷贝，造成极大的浪费；而且程序要更新一个模块，就要重新下载整个可执行文件。   在虚拟存储发明后，有了硬件的支持，程序的逻辑地址和物理地址被“脱钩”，只要维护虚拟地址到物理地址的映射就行了。假设硬件没有虚拟存储机制，我的设想是采用“所有可执行文件动态装载”的机制；操作系统创建进程时，在物理内存中找到一块可用空间，将可执行文件按照欲装载的位置进行重定位，就是对所有绝对寻址偏移进行修正；不需要重定位表的原因是进程之间不需要互相调用。当然，虚拟存储的意义还包括提供进程间的逻辑隔离和用户态、内核态的权限区分，这些离开硬件支持是难以解决的。   3.2 运行时装载的设想   事实上，在开始设想动态链接机制时，我的思路完全是类似动态语言的。（本节所有讨论忽略了虚拟内存机制）           所有动态链接库保留重定位信息。（现在的系统也是这样的）            操作系统维护一个“动态链接库表”，记录了系统中的所有动态链接库及其导出函数的声明。            操作系统提供一个执行动态链接库函数的系统调用：execfunc(char *function name, …)。 - execfunc 第一个参数是指向 function name 的指针；                       随后的参数是原函数的参数（类似 C 语言的可变参数机制）；                        function name 是可执行文件中的一个字符串常量； - execfunc 的返回值存放在 ABI 约定的地方（如整数类型、浮点类型分别规定一个寄存器传参）； - execfunc 不是一个 C 语言意义的函数，因其返回值类型不确定。 * 操作系统提供一个查询动态链接库表的系统调用：queryfunc(char *function name)，返回此函数的参数和返回值类型，以便编译器处理。                        编译器遇到一个不能“内部决议”的函数名：                       查询动态链接库表；                        把调用动态链接库的函数的 call 指令的目标地址改成 execfunc（暂不考虑系统调用机制的细节）；                        增加一个字符串常量 function_name 表示函数名；                        在 call 指令前加入一条将字符串常量指针入栈的指令（假设 ABI 规定参数是通过栈传递的，入栈顺序也与本例相符）；                        将 execfunc 的返回值按原程序的要求处理（如赋值到其他内存单元或寄存器）。                        程序正常加载执行，就像没有动态链接一样。            当程序执行到原来是调用动态链接库的函数时，事实上调用的是 execfunc。            execfunc 顾名思义：                       从操作系统的动态链接库表中找出此函数所在的动态链接库；                        如果此动态链接库尚未加载，找到加载这个动态链接库的一块内存空间；对目标文件进行重定位；加载重定位后的目标文件；                        以自己的可变参数为参数调用动态链接库函数（如果 C 语言不容易实现，操作系统完全可以用汇编语言实现这段代码）                        将动态链接库函数的返回值返回给调用者（C 语言同样没有“动态返回值类型”，因此也要用汇编语言来）                        这样，原程序的每次动态链接库调用从 execfunc 里绕了一圈，但总算是能完成任务。当然，execfunc 和 queryfunc 不必要是操作系统的机制，也可以是 C 编译器的内部机制，只是这些函数的实现必须存在于每个需要动态链接的可执行文件里；把加载器写在可执行文件里是很大的开销，而且兼容性不好。       事实上，我写的一组 PHP 程序就实现了类似的动态加载机制，不过没有让 PHP 解释器修改代码，而是利用了 PHP 的错误处理机制，将非法函数调用所抛出的异常截获，从列表中查找并加载相应的库，然后回到原位置重新执行触发异常的 PHP 代码。作为动态语言，PHP 对外部文件的加载本身就是动态的，而函数的调用也是从 hash 表中“现用现查”，因而这种机制还算合适。   然而，在 C 语言中，这样的机制会为每次动态链接库的函数调用平添不少开销。如果程序执行的过程中能够修改代码段，则有一种“按需加载”，只加载一次的机制：           操作系统仍然要维护动态链接库表。            操作系统提供一个加载动态链接库函数的系统调用：void loadfunc(char *function name)。 - loadfunc 第一个参数是指向 function name 的指针；                       function name 是可执行文件中的一个字符串常量； * 操作系统仍然提供查询动态链接库表的系统调用。 * 编译器遇到一个不能“内部决议”的函数名： - 查询动态链接库表； - 把调用动态链接库的函数的 call 指令的目标地址改成 loadfunc； - 增加一个字符串常量 function name 表示函数名；                        在 call 指令前加入一条将字符串常量指针入栈的指令（假设参数是通过栈传递的，其他参数已在这条指令之前入栈）。                        程序正常加载执行，就像没有动态链接一样。            当程序执行到原来是调用动态链接库的函数时，事实上调用的是 loadfunc。            loadfunc 的重头戏来了：                       字符串常量指针（第一个参数）出栈，栈中的其他元素（如返回地址）作相应调整；                        从操作系统的动态链接库表中找出此函数所在的动态链接库；                        如果此动态链接库尚未加载，找到加载这个动态链接库的一块内存空间；对目标文件进行重定位；加载重定位后的目标文件；                        下面是几条关键的汇编指令：设置代码段为可写；（有点 hacker 的意味了）                        基于调用栈中的返回地址，修改返回地址所对应指令（即 call loadfunc）为 call function name；（修改寻址偏移） - 将 call function name 的前一条指令（即字符串常量指针入栈）修改为 nop；（再也不需要它了）                        修改返回地址为其前一条指令；（使返回后调用 function name） - 设置代码段为只读（可有可无）。 * loadfunc 返回后，就会调用 function name，而此时参数已经准备好，而函数的返回值部分我们压根就没碰，第一次调用将顺利进行；                        以后对 function_name 的调用，除了在参数入栈与 call 之间比往常多几条 nop 指令以外，看不出任何区别，loadfunc 已退居幕后。       当然，为了加载动态链接库而把代码段变成可写似乎不太和谐 :)   以上这些是可能性，不过不是事实。据《程序设计语言原理》，1936 ～ 1945 年，德国科学家 Konrad Zuse 用电磁继电器设计了一系列复杂的计算机和 Plankalkul 语言（1972 年才发表）。这种语言惊人地完整：基本数据类型是字节，以此为基础构造出整数和浮点数据类型，还包括了数组和记录（可以嵌套）。在控制结构方面，此语言包括了类似 for 的迭代语句和类似 if 的选择语句。当然，这种语言的标记法（我们看来）很奇怪。Zuse 的“样例程序”包括数组排序、测试图的连通性、计算平方根、对简单的逻辑公式进行语法分析、长达 49 页的国际象棋算法等。我有点怀疑这是不是 1972 年有人伪造的。如果不是，按照书中的说法，“我们现在只能猜想，如果 Zuse 不是工作于 1945 年的德国，他的工作顺利地得以发表，程序设计语言将向什么方向发展”。也许现代编译系统、操作系统的设计正是众多可能性中较好的一种吧。   3.3 地址无关代码   我们不妨跳出“动态链接”的文字陷阱，不是在执行过程中加载，而是在程序执行前，也就是进程初始化过程中加载动态链接库。最简单的方式，当然是让所需的所有动态链接库在进程初始化时被重定位、加载到进程的虚拟地址空间。   前面的讨论中，一直是把动态链接库当作普通的目标文件的，那么是否可以直接使用目标文件进行动态链接呢？   初看起来似乎没有问题。然而我们一直忽略了虚拟内存的存在。装载的过程中需要对动态链接库的代码进行重定位，装载后的代码事实上已经依赖于其所在的地址了。这就意味着要实现一份动态链接库代码被多个进程共享，则在这些进程的虚拟地址空间中，对动态链接库的引用必须使用同样的虚拟内存地址。   一种方法是每装载一个动态链接库，就在系统范围内为它预留地址空间（不与其他动态库重叠），以后创建的进程如果要使用这个动态链接库，就使用预定的地址装入（即将相同的虚拟地址映射到相同的物理地址）。但这样系统内装载的动态链接库总数不能太多，不然就“撑满”了 3GB 的用户态虚拟地址空间。对于可能运行很多异构任务，而用户地址空间只有 3GB 的 32 位系统而言，这种预留地址空间的方式是无法接受的。当然，对 64 位系统，似乎地址空间又取之不尽用之不竭了。   现在看来，直接拿目标文件重定位的路子走不通。其实我们的目的很简单，希望动态链接库中共享的指令部分在装载时不需要因为装载地址的改变而改变，所以实现的基本想法就是把指令中那些需要被修改的部分分离出来，跟数据部分放在一起，这样指令部分在多个进程之间可以共享，而需要读写的数据部分在每个进程中自然有独立的副本。这就是传说中的“地址无关代码”（PIC，Position Independent Code）。   我们来分析不同类型的地址引用：   模块内部的函数调用、跳转   不难发现，这些指令只要使用相对寻址模式，就是地址无关的。   模块内部的数据访问   指令中放不下绝对地址，因而对数据的引用只能使用相对寻址；然而，数据访问不像内存访问那样可以指定相对 Program Counter 的偏移，因而编译器采用了一种很巧妙的办法：函数调用时 call 指令会将返回地址（call 的下一条指令）压栈，那么根据这个返回地址相对寻址就能找到模块内任意数据。看来，这也是地址无关的。   模块之间的函数调用、跳转   要调用另一个模块的函数，而函数的地址在模块载入前尚未确定，模块本身的代码又不能修改。如果把相关指令放在数据段，数据段又不能执行。ELF 的做法是在数据段中建立一个指针数组（全局偏移表），存储每个外部函数的地址；在调用外部函数时，通过全局偏移表中的对应条目定位到另一模块的函数；载入其他模块后，只要将全局偏移表中对应函数的地址填上即可。   模块之间的数据访问   模块之间的数据访问类似函数调用，同样是通过全局偏移表来确定目标地址。全局偏移表事实上存储的是符号的偏移，无所谓它是数据还是函数。   模块与可执行文件间的函数调用、跳转   这与模块之间的函数调用没有什么不同，只要通过可执行文件中的符号表找到外部符号并将其重定位即可。   模块与可执行文件间的数据访问   在编译可执行文件时，一般并未生成地址无关代码，因而被 extern 声明的共享库变量作为未初始化数据被放在 BSS 段；然而，这些数据在共享库中也有一份（可能是已初始化的）副本。共享库做出妥协，在动态链接时将全局偏移表中的相应条目指向 BSS 段中的数据，可能还要用共享库中的副本将其初始化。事实上，在生成地址无关代码时，编译器并不知道 extern 是同一模块中其他文件中定义的全局变量，还是一个跨模块调用，因此只好统一按照地址无关的方式将其放入全局偏移表。   数据中的跨模块地址引用   例如这样一段常见的代码：   extern int a; int *b = &amp;a;   数据中的跨模块地址引用与跨模块数据访问的根本区别在于前者存储在数据段，后者存储在代码段。代码段不能任意修改，从而需要用全局偏移表来间接访问；而数据段每个进程一份，是可以修改的。因此只需在动态链接信息中记录这种类型的地址引用，并在动态链接时修改数据段对应位置的值（将数据段中 b 的值修改为共享库中 a 的地址）。   使用 GCC 生成地址无关的共享库，只要加入“-fPIC”参数即可。对于可执行文件，可以使用“-fPIE”达到地址无关的效果。   3.4 动态链接器   我们已经看到，动态链接是个比较复杂的东西。刚才的讨论给我们一种假象，即这些工作都是操作系统完成的。事实上，在 Windows 中，动态链接器确实是内核的一部分，而整个 Windows 系统是高度依赖动态链接库的：   所有系统调用都被包装成 WINAPI，而 WINAPI 是在 kernel32.dll、ntdll.dll 等动态链接库中被定义的；           Windows 应用程序的相互调用大多通过 COM（Component Object Model），用于实现诸如 ActiveX、. NET 等按需调用组件的机制（例如在浏览器中调用 Media Player 播放视频、在 PHP 中操作 Word 文档），而 COM 的基础便是动态链接库。            而在以模块化著称的 Linux 中，内核对动态链接工作只是起了“推一把”的作用。内核在装载 ELF 可执行文件后就返回到用户空间，将控制权交给程序入口。对于静态链接的可执行文件，程序的入口就是 ELF 文件头中 e_entry 指定的入口；对于动态链接的可执行文件，如果不采用特殊机制，则动态链接的难题就要全部留给可执行文件：动态链接机制是比较复杂的，在每个可执行文件中保留一份动态链接器显然是一种浪费。那么动态链接器在文件系统中的路径是不是操作系统规定的呢？       ELF 文件的.interp（interpreter）段保存的就是一个字符串，即动态链接器的路径。内核会将 ELF 文件的.interp 段指定的动态链接器读入内存，并映射到用户地址空间，然后把控制权交给动态链接器。后面的事情，动态链接器如何“自食其力”呢？   /lib/ld-x.y.z.so（x, y, z 是版本号）就是这样一个神奇的东西。           动态链接器的入口函数 dl start()执行“自举”过程，即自己帮自己做重定位工作。这个过程中在动态链接器内部的相对寻址是没有问题的，然而绝对寻址是不行的，因此这部分需要格外小心谨慎。            载入程序的符号表。完成自举之后，就可以自由调用程序中的函数、访问全局变量了。            dl start final()收集一些基本的运行数值 * _dl sysdep start()进行一些平台相关的处理 * _dl main()判断指定的用户入口地址，如果是动态链接器本身，则它被当作一个可执行文件被运行。       如果用户入口地址是动态链接器，则对程序依赖的共享对象进行装载、符号解析和重定位，也就是我们前面提到的动态链接过程。 显然，动态链接器本身必须是静态链接的，不能依赖其他动态链接库，不然没人帮它解决依赖。动态链接器自身是 PIC（地址无关代码），一是因为自举过程中需要进行重定位，而对数据段进行重定位比对代码段进行重定位简单；二是因为 PIC 的代码可以共享物理地址，这样各程序在内存中只要一份动态链接器的副本，节约内存。   从上面的描述容易看出，动态链接器也是可以直接运行的。内核只是寻找.interp 段，没有找到就直接跳到 e entry，找到了就载入动态链接器并跳到动态链接器的 e entry。   3.5 运行时装载   动态链接解决了不同进程的共享库指令重复占用空间的问题，但在初始化时完成所有动态链接有一个缺陷：程序的运行具有局部性，很多模块是在近期是不会被用到的，一次全部加载进来未免浪费。这个问题本质上是进程的“内政”，与动态链接无关。   为了实现运行时按需装载模块，早期程序员将模块按照它们的调用关系组织成树形结构，采用“覆盖装入”节约内存空间。它利用了某些模块不可能共存的约束，使得某些模块可以共享同一块地址区域，从而节约了内存空间。这种方式需要程序员花费大量精力为模块安排覆盖装入结构，每个可执行文件的头部还要加入一块“覆盖管理器”。   那么能否实现一种系统调用，在操作系统级别支持程序运行过程中加载一个动态链接库呢？这就像是 PHP 语言中可以在任意位置 include 其他文件。相比“调用时自动装载”，把运行时加载的任务由操作系统转移到程序员，操作系统不会自动加载，程序员使用之前要自行声明；相比“覆盖装入”，不需要每个程序都附带一块覆盖装入器代码，而且用虚拟内存映射的方式比用固定内存地址分配更灵活。有了运行时装载机制，前面对性能影响较大的“自动装载”和对编程复杂度影响较大的“覆盖装入”可以休矣。   我们首先考虑不修改已装载的代码，因而加载动态模块的过程不能涉及已经加载代码的重定位。也就是说，加载可执行文件时需要预知可能加载的动态链接库中每个函数的入口地址。这并不难实现：           操作系统在创建进程时，列出可能加载的各动态链接库，为它们预分配虚拟地址空间；            根据这张分配表对可执行文件进行重定位，并加载；            负责加载动态链接库的系统调用将动态链接库取出；            如果新加载的动态链接库依赖其他尚未预分配地址空间的动态链接库，则需要为它们预分配空间；            现在动态链接库的调用者和依赖者的地址已经确定，对它进行重定位，加载到已经预分配的地址。            这样，依靠预分配地址空间，已加载的可执行文件和动态链接库都无需在加载后修改代码段。       这种“预留地址空间”设计不仅存在地址空间不足的问题，还需要程序员显式指定“所有可能加载的动态链接库”列表，并不方便。   运行时装载的设计者采用了一种“偷懒”的方式：提供一些接口，让程序员自行查找需要使用的符号，然后通过函数或变量的地址（函数指针、变量指针）间接调用它们。   在 Linux 中，内核同样不“越俎代庖”地管这些事，运行时装载机制是通过动态链接器（/lib/libdl.so.2）提供的 API，包括：           打开动态库（dlopen）            查找符号（dlsym）            错误处理（dlerror）            关闭动态库（dlclose）  void * dlopen(const char *filename, int flag);             filename：动态库的绝对路径，或相对/lib、/usr/lib 的相对路径。            flag：符号的解析方式。运行时加载有两种方法：一种是当模块被加载时完成所有的函数加载工作（RTLD NOW），另一种是当函数被第一次用到时才进行绑定，类似我在 3.2 节中提出的方案（RTLD LAZY）。使用 RTLD NOW 有利于在调试程序时发现符号未定义方面的错误，让错误尽早暴露出来；而实际使用时 RTLD LAZY 可以加快加载动态库的速度，实现真正的“按需加载”。 返回值：被加载模块的 handle，指向模块的符号表。有趣的是，如果 filename 参数为 0，返回的就是全局符号表的 handle，即在运行时根据函数名查到其地址并执行，据此可以实现类似高级语言“反射”的机制。  void * dlsym(void *handle, char \\*symbol);             handle：dlopen 返回的符号表 handle。            symbol：要查找的符号名字。如果在当前模块的符号表中未找到，就会按照广度优先的顺序搜索它依赖的共享对象中的符号。 返回值：如果是函数，返回函数地址；如果是变量，返回变量地址；如果是常量，返回常量的值；如果符号未找到，返回 NULL。       dlclose 用于卸载模块，注意这里的卸载和 dlopen 中的装载都是可以重复进行的，每个模块有一个引用计数。   dlerror 用于判断上次 dlopen、dlsym、dlclose 调用是否成功。dlsym 返回 NULL（0），不一定意味着符号未找到，有可能恰好是一个值为 0 的常量。   运行时装载与初始化时装载，区别主要是后者是对程序员透明的，在第一行代码执行前就已经完成了共享库的装载；前者是在程序内部显式调用动态链接器提供的 API。例如 Web 服务器可以不重新启动就根据新配置加载新的模块；浏览器可以在遇到有 Flash 的网页时再加载所需的插件。   3.6 延迟绑定   动态链接比静态链接灵活得多，但它是以牺牲一部分性能为代价的。动态链接的程序性能一般比静态链接的程序低 1%~5%。主要原因有两点：           地址无关代码在模块间的每次函数调用和地址访问都要经过 GOT（全局偏移表）进行间接访问；            在程序运行过程中并不是动态链接库中的每个函数都能用到，白白浪费了模块装载、重定位的时间。       事实上早在 3.2 节，就提出了“函数第一次被调用时被装载”的思想，这在 ELF 中被称为“延迟绑定”。   当我们调用某个外部模块的函数时，动态链接的做法是通过全局偏移表（GOT）间接跳转。一种最简单的方法是开始时让 GOT 中相应的条目指向一个“桩函数”，这个桩函数完成加载工作，修改 GOT 中的跳转地址为已加载的外部函数地址，再调用这个函数。这类似 3.2 节的设想，不过直接修改代码段变成了修改数据段中的 GOT，这样一来代码段可以在不同进程间共享，二来减少了代码段可写可能带来的安全风险。   ELF 的实现方式与之类似，不过又加了一层：每个外部函数都有一个对应的桩函数，函数调用就是对桩函数的调用，在桩函数内部通过 GOT 实现跳转、实现运行时装载。这样的“桩函数”称为 PLT（Procedure Linkage Table）项。   func@plt: \tjmp *(func@GOT) \tpush index \tpush moduleID \tjmp _dl_runtime_resolve           链接器将 GOT 中 func 所对应的项初始化为上面的“push index”指令的地址，使得首次执行此函数时相当于什么都没有做。从第二次调用此函数开始，就会通过 func@GOT 直接调用外部函数并直接返回，而不会执行“push index”及以下的几条指令。            index 是 func 这个符号在重定位表“.rel.plt”中的下标。将 index 压入堆栈。            将当前模块的 ID 压入堆栈。（模块 ID 是动态链接器分配的）            以 moduleID，index 为参数，调用动态链接器的 dl runtime_resolve()，完成符号解析和重定位，并将 func 的真正地址填入 func@GOT。       在实际实现中，ELF 将 GOT 拆分为“.got”和“.got.plt”两个表，其中“.got”保存全局变量引用的地址，“.got.plt”保存函数引用的地址。.got.plt 的前三项有特殊意义：           第一项保存.dynamic 段的地址，描述了本模块动态链接的相关信息；            第二项保存本模块 ID，由动态链接器在装载模块时初始化；            第三项保存 dl runtime_resolve()的地址，由动态链接器在装载模块时初始化。       为了减少代码重复，ELF 把上面例子中的最后两条指令放到 PLT 中的第一项（PLT0）中，并规定每项的长度为 16 字节，恰好存放 jmp *(func@GOT), push index, jmp PLT0 三条指令。   3.7 动态链接库版本   动态链接库当然不是一成不变的，它也需要更新。《COM 本质论》中有一个生动的例子：假设有个程序员实现了一个 O(1)的字符串查找算法，其头文件为：   class __declspec(dllexport) StringFind { \tchar *p;\t\t\t// 字符串 \tpublic: \t\tStringFind(char *p); \t\t~StringFind(); \t\tint Find(char *p);\t// 查找字符串并返回找到的位置 \t\tint Length();\t\t// 返回字符串长度 };   受到各大厂商的好评后，程序员决定再接再厉：Length()成员函数内部直接调用了 strlen()函数返回字符串长度，效率很低，程序员决定加入一个 length 成员保存字符串长度；又增加了一个 SubString 成员函数用于取得字符串的子串：   class __declspec(dllexport) StringFind { \tchar *p;\t\t\t// 字符串 \tint length;\t\t\t// 字符串长度 \tpublic: \t\tStringFind(char *p); \t\t~StringFind(); \t\tint Find(char *p);\t// 查找字符串并返回找到的位置 \t\tint Length();\t\t// 返回字符串长度 \t\tchar* Substring(int pos, int len);\t// 返回字符串从pos处开始长度为len的子串 };   厂商将新版的 DLL 打成一个补丁升级包，以覆盖旧版的 DLL；很快他们收到了铺天盖地的抱怨。原因主要来自：新版的 StringFind 对象占用空间是 8 个字节，而原先的程序主模块只给它分配了 4 个字节，访问的 length 成员事实上不属于 StringFind 对象，出现错误的数据访问，导致程序崩溃。   在 Windows 平台下，Component Object Model（COM）就是微软为了解决这些程序兼容性问题（不仅是版本问题）而开发的一套复杂的机制。在. NET 中，一个程序集包括一个 Manifest 文件，描述了这个程序集（由若干可执行文件或动态链接库组成）的名称、版本号、各种资源及其依赖的各种资源（包括 DLL 等）。Windows 系统目录下有个 WinSxS（Windows Side by Side）目录，每个版本的 DLL 在 WinSxS 目录下都有一个以平台类型、编译器、动态链接库名称、公钥、版本号命名的独立的目录，保证多个版本的动态链接库不会冲突。当然，这就要求动态链接库与主程序的编译环境完全相同，Windows 中没有类似“源”的公共运行库下载仓库，因此程序发布时往往要带上对应的运行库。   事实上，DLL 的设计目的并不是“共享对象”，而是促进程序的模块化，使得各模块之间能够松散地组合、重用、升级。运行时加载机制使得各种功能模块能以插件的形式存在，这是 ActiveX 等技术的基础。利用 DLL 的数据段可以在不同进程间共享的特性，DLL 还是 Windows 中进程通信的一种方式（尽管第三者也可以共享他们的 DLL，从而有安全漏洞）。在 UNIX 传统中，这样的模块化通常是每个模块一个进程，而进程的协同是通过管道、socket 等进程间通信手段实现的，这样的方式需要程序员投入更多精力，但能提供更好的封装性。由于 Windows 传统中的程序多是封闭开发的软件，内部接口容易统一，因而模块之间大多采用编程更直接的函数调用，服务器与客户端之间的通信也较多采用远程过程调用（RPC）而非透明的文本协议。   在 Linux 中，共享库的版本问题通过文件名中包含版本号这一简单途径得以解决。共享库的命名规则是 libname.so.x.y.z：           x 表示主版本号，不同主版本号的共享库不兼容；            y 表示次版本号，在主版本号相同的情况下，高的次版本号兼容低的次版本号；            z 表示发布版本号，不对接口进行任何修改，相同主次版本号的共享库完全兼容。       那么动态链接器如何知道程序需要哪个版本的共享库呢？Linux 采用 SO-NAME 的命名机制记录库的依赖关系。SO-NAME 就是 libname.so.x，只保留主版本号。利用“SO-NAME 相同的两个共享库，次版本号大的兼容次版本号小的”这一特性，系统会为每个共享库创建一个以 SO-NAME 命名的软链接，主版本号相同的共享库只保留次版本号最高的那个。这样，所有使用共享库的模块在编译链接时只要指定主版本号（SO-NAME）而无需指定详细的版本号；及时删除过时的冗余共享库，节约了磁盘空间。   Linux 中软件包的依赖关系很大程度上就是共享库的依赖关系，由于共享库通常是开源或公开提供下载的，软件包管理器会自动从“源”中获取并安装所需的共享库，而无需让软件包背上一个共享库的大包袱。当系统中安装一个新的共享库（就是把共享库放到/lib、/usr/lib 或/usr/local/lib，具体由/etc/ld.so.conf 指定）时，需要使用 ldconfig 工具遍历共享库目录，创建或更新 SO-NAME 软链接，使它们指向最新的共享库；更新 SO-NAME 的缓存（/etc/ld.so.cache），加快共享库的查找过程。   符号版本问题是否宣告解决了呢？如果动态链接器在进行链接时，只进行主版本号的判断，则若某个程序依赖次版本号更高的共享库，动态链接器就可能查不出版本冲突，从而带来本节开头的问题。此外“相同主版本号的共享库，次版本号需要向后兼容”，因而只要接口做了一点不向后兼容的改变，就必须升级主版本号。Linux 采用了更细粒度的版本机制——在可执行文件和共享库中，每个导入或导出的符号都对应一组主、次版本号，同名符号可以有多个版本。这样，一个 Version 1.2 的共享库内部可以同时存在 1.2 版和 1.1 版的库函数，动态链接器也会尽量为可执行文件中的函数引用找到合适版本的库函数来链接，即使 1.2 版与 1.1 版的这个库函数互不兼容，使用这两版共享库的程序仍然能正常链接。   GCC 为指定符号版本提供了.symver 汇编宏指令。例如改变 strstr 的接口而不升级主版本号：   asm(\".symver old_strstr, strstr@VERS_1.1\"); asm(\".symver new_strstr, strstr@VERS_1.2\");  int old_strstr(char *haystack, char *needle);\t\t\t// 返回needle在haystack中第一次出现的offset，未找到返回-1 int new_strstr(char *haystack, char *needle, bool direction);\t// direction用于指定从前向后查找还是从后向前查找   3.8 目标文件中的数据结构   根据前面对编译、静态链接和动态链接的讨论，目标文件的分类其实已经比较明显了：           包含了代码和数据，可以被用来链接的可重定位文件（.o）            包含了可以直接执行的程序，可执行文件（a.out）            供动态链接器使用的“动态库”，共享目标文件（.so）            这个不容易想到，进程意外终止时将地址空间的内容和一些其他信息转储到 Core Dump 文件       Windows 的 PE（Portable Executable）文件格式和 Linux 的 ELF（Executable Linkable Format）文件格式都是 COFF（COmmon File Format）文件格式的变种。   下面按字母顺序列出了 ELF 的一些常见段（我没有一一验证，尤其是与 C++有关的部分，如有错误请指正）：                  段       含义                       .bss       未初始化数据（全局变量）                 .comment       编译器版本信息                 .ctors       全局构造函数指针                 .data       已初始化数据（全局变量、静态变量）                 .data.rel.ro       只读数据，与.rodata 类似，不同的是它在重定位时会被改写，然后置为只读                 .debug       调试信息，使用 gcc 的-g 或-ggdb 参数                 .dtors       全局析构函数指针                 .dynamic       动态链接信息，存储了动态链接的符号表地址、字符串表地址及大小、哈希表地址，共享对象的 SO-NAME、搜索路径，初始化代码地址，结束代码地址，依赖的共享对象文件名，动态链接重定位表地址、重定位入口数量等。                 .dynstr       动态链接符号的符号名（字符串表）                 .dynsym       与动态链接相关的符号表。需要注意，.symtab 中往往保存了所有符号，而.dynsym 中只保存动态链接时需要的符号，不保存仅在模块内部使用的符号。                 .eh_frame       与 C++异常处理相关                 .eh_frame_hdr       与 C++异常处理相关                 .fini       程序退出时执行的代码，相当于 main() 的“析构函数”                 .fini_array       程序或共享对象退出时需要执行的函数指针                 .gnu.version       动态链接符号版本，.dynsym 中的每个符号对应一项（该符号所需版本在.gnu.version_d 中的序号）                 .gnu.version_d       动态链接符号版本的定义（definitions），每个版本的标志位、序号、共享库名称、主次版本号                 .gnu.version_r       动态链接符号版本的需求（requirements），依赖的共享库名称和版本序号                 .got       全局偏移量表（用于动态链接的间接跳转或引用）                 .got.plt       Procedure Linkage Table，即运行时链接的“桩函数”                 .hash       符号表的 hash 表，用于加快符号查找                 .init       main() 执行前的初始化代码，相当于 main() 的“构造函数”                 .init_array       程序或共享对象初始化时需要执行的函数指针                 .interp       动态链接器的文件路径                 .line       调试用的行号信息，使用 gcc 的-g 或-ggdb 参数                 .note       编译器、链接器、操作系统加入的平台相关的额外信息                 .note.ABI-tag       指定程序的 ABI                 .preinit_array       早于初始化阶段前执行的函数指针，在.init_array 之前执行                 .rel.data       静态链接文件中，数据段的重定位表                 .rel.dyn       动态链接文件中，对数据引用（.got、.data）的重定位表                 .rel.plt       动态链接文件中，对函数引用（.got.plt）的重定位表                 .rel.text       静态链接文件中，代码段的重定位表                 .rodata       只读数据（常量、字符串常量）                 .shstrtab       保存了各段名称的字符串表                 .strtab       字符串表，通常是符号表中的符号名对应的字符串                 .symtab       符号表，静态链接时需要的符号信息                 .tbss       每个线程一份的未初始化数据（.bss 是各线程共享的）                 .tdata       每个线程一份的已初始化数据（.data 是各线程共享的）                 .text       代码段（为什么不叫.code？）          ","categories": [],
"tags": [],
"url": "/wiki/user/boj/linkers-and-loaders/",
"teaser": null
},{
"title": "使用 chroot 编译 android",
"excerpt":"请直接参考参考资料   安装 dchroot 和 debootstrap   $ sudo aptitude install dchroot debootstrap   更改配置文件   $ sudo tee -a /etc/schroot/schroot.conf &lt;&lt;EOF [lucid] description=Ubuntu 10.04 LTS (Lucid Lynx) location=/var/chroot/lucid priority=3 users=pdecat groups=pdecat root-groups=root EOF   安装 Ubuntu10.04   $ sudo debootstrap --variant=buildd --arch amd64 lucid /var/chroot/lucid http://mirrors.ustc.edu.cn/ubuntu/   参考资料   http://blog.decat.org/aosp-step-by-step-instructions-for-setting-up-a-chrooted-ubuntu-10-04-64bit-build-environment-on-ubuntu-11-10-and-12-04-hosts/  图书馆查询机系统的制作与启动过程  ","categories": [],
"tags": [],
"url": "/wiki/user/sadhen/android/",
"teaser": null
},{
"title": "Emacs 读书笔记",
"excerpt":".emacs.d   这是我的配置文件：https://github.com/sadhen/.emacs.d  ","categories": [],
"tags": [],
"url": "/wiki/user/sadhen/emacs/",
"teaser": null
},{
"title": "《黑客与画家》读书笔记",
"excerpt":"Fenng 说这本书的三个主要的主题是黑客精神、创业和编程语言，我深以为然。当然，这本书还涉及到了其它很多有意思的话题。比如不能说的话、财富等等。   翻译经常是一件吃力不讨好的事。即使翻译的再好，如果原著本身很经典的话，大家都还是喜欢看原著。当然，像《歌德尔、爱舍尔、巴赫》之类的书得排除在外。本书的译者是阮一峰，其译文和博客行文流畅自然，都值得一读。   关于财富   人们往往因为财富的分配而忽略了财富的创造。人们常常抱怨财富分配的不均匀。这很正常，没有一种分配方式能让所有人觉得公平公正。然而人们在抱怨分配不均时，往往会犯一个认知上的错误，即财富的总量是个 const。然而，人类社会的财富实实在在是在不断甚至是以极快的速度在增长着。所以，获得财富的手段是争取财富分配上的增加或者直接创造财富。后者即创业。   黑客们喜欢创造。有些创造可能仅仅是黑客们自己把玩的玩具。有些则转化为我们人类社会的财富。   禁忌   人类社会的禁忌并不常常是合理的。有些源于历史上的无知，然而不幸的传承了下来。黑客们不喜欢禁忌，黑客们向往自由。然而有时候，黑客们也只能是沉默的大多数。关于这个话题，详见《黑客与画家》第三章。   编程语言   本书中提到了 LISP 这门古老而极具生命力的编程语言，也谈论了一些作者本人对编程语言的看法。本人对编程语言的了解十分有限。下面是我的看法。   哪种编程语言最好   经常在邮件列表里面看到一群人，为了自己喜爱的编程语言争论。那么哪种语言最好呢？其实往往这些问题的提出者不怀好意，或者不知道如何提问？这种人通常被称为Troll。   那么哪种语言最好呢？   首先能回答这个问题的人必须是了解至少两门编程语言的人。否则谈何比较？！   其次，如果要讨论好不好的问题，首先需要度量好坏的标准，在这些标准下面，这个问题才真正具有意义。总不能说“我喜欢它，它就是好，这不需要理由！”。实际上，从编程语言的历史上看，一门语言的出现往往是因为某种需求，或者是解决现有的一些编程语言存在的问题。而且在设计编程语言的过程中，很难避免 trade offs——为了某些特性，就必须得牺牲另外一些特性。   问：争论，到底怎样才好？   讨论过程中难免争论，局内人争个热火朝天，局外人看个不明所以。网上的争论尤为如此，经常是断章取义，且双方似乎互相理解不了对方的文字。   我的观点是在讨论过程中，尽量考虑阅读者的感受，另外要含有一定的信息量，而不是噪音。   问：LISP 家族的后代会是“好”的语言吗？   问：编程语言的本质是什么？   计算的本质是什么？   问：理想的编程语言是怎样的？   Guile: 作为一种扩展语言   以上的一些问题是我思考过，有些得到了自己答案，有些还没有想明白。寒假趁闲， 接触 了一下 scheme。接触即平时也只是用Guile，简单的试一下自己写的 scheme 代码能不能运行，结果是不是符合预期。   目前在读《The Little Schemer》，此书且不论内容，形式上便令人耳目一新：   阿基里斯：《The Little Schemer》讲的是什么？ 乌龟：讲的是计算的本质。 阿基里斯： 计算机的本质是什么？ 乌龟： 是计算的本质，不是计算机的本质。 ……（这是我杜撰两个问答）   Guile 是 GNU Ubiquitous Intelligent Language for Extensions 的缩写，可以说是 scheme 的解释器之一。然而一开始写 Guile 并不是为了写一个解释器，从名字可以看出，Guile 是为了方便扩展而诞生的。   我们从 Emacs 可以看出一种优秀软件的特点：高度可定制性。而高度可定制性依赖于表达力丰富的扩展语言。于 Emacs, elisp 正是这样的一门语言; 于 TeXmacs，scheme 正是这样的一门语言。   有意思的链接和广告   http://lambda-the-ultimate.org  http://vivid.chengyichao.info  LUG 书库目前（Sat Mar 2 14:52:04 CST 2013）有《计算机程序的构造与解释》一书，图书馆没借到的话，今晚 LUD 后可以去书库借。  ","categories": [],
"tags": [],
"url": "/wiki/user/sadhen/hackers_and_painters/",
"teaser": null
},{
"title": "About Me",
"excerpt":"我的笔记   1.使用 chroot 编译 android   2.Emacs 读书笔记   3.《黑客与画家》读书笔记   我的 Slides   1.Bash Scripting   2.python2-networkx 可视化   LOG   2014/10/21：给本 dokuwiki 安装了 markdownku 插件，插件主页  ","categories": [],
"tags": [],
"url": "/wiki/user/sadhen/",
"teaser": null
},{
"title": "lug.ustc.edu.cn 系统升级失误",
"excerpt":"   时间：（2013 年）10 月 2 日至 11 日   性质：人为操作失误   影响：            lug.ustc.edu.cn 的 web 服务中断。其余服务未知；lug.ustc.edu.cn 域名解析到备份服务器；       下线期间所有服务中断；       由于数据库受到影响，并且监控脚本设置为是错误重连，学校的短信报警平台发出了 7 万条短信，使学校短信平台的余额用完了。           事件发生及处理过程      10 月 1 日晚，鉴于 lug.ustc.edu.cn 的系统（debian squeeze，而且是 6.0.1）已经很老，估计有不少安全更新，vastuniverse 提出将系统进行升级（dist-upgrade）；   在和 lug 以前的维护者沟通，重点关注了三个方面：运行上的进程是否需要保留，是否有其它隐藏服务，服务器上是否有一些只是临时解决、解决方案不能禁受重启或者软件包版本升级的问题；这些疑问解决之后，于第二天（10 月 2 日）开始升级操作；   升级过程：            查看/etc/apt/source.list，发现之前 squeeze 和 wheezy 源混用，并且还另加了 dotdeb 第三方源；       删掉重复的 wheezy 源，把 squeeze 源改成 wheezy 源，注释掉其他所有源，只保留 debian 的官方 wheezy 源（mirrors.ustc.edu.cn/debian wheezy ………）；       aptitude update 以及 dist-upgrade；升级过程中涉及到服务的自动重启，涉及到本地版本配置文件和新软件包里配置文件的，用 diff 查看之后再决定是否替换；手工比较结果：nginx 配置文件由于本地版本和软件包新版本差异较大，保留了本地版本，而 php 的本地版本和软件包新版本差异不是很大，记住差异了之后用新版本覆盖并且手工修改回去了；       加入 debian-security 源，二次升级；       加回 dotdeb 源，再次升级，配置文件处理原则同上，这次比较结果如何现在忘了；       修改 sudoers 文件，试图恢复升级之前的内容，而且想用新版 sudoers 推荐的方法：不直接修改/etc/sudoers，而是在/etc/sudoers.d/下面新建文件加入内容的方式;就是在这一步出事了。           事故发生   由于不是直接修改/etc/sudoers，而是在/etc/sudoers.d/加入文件，脑子里面没有条件反射，没有使用 visudo 而是用了 vim 去加入/修改文件，而在编辑保存的时候，sudoers 出现了语法错误，没有发现就保存了，而 vim 又没有像 visudo 一样的语法检查，造成了 sudo 无法使用；而现在没有人记得 root 用户密码，也就是说现在机器上没有任何人可以进行需要 root 权限的操作。   在 sudo 无法使用之后才发现 web 服务中断（http 502 错误），但是现在必须进入机房，物理接触机器才能维修了。而更严重的是，国庆假期期间，能联系进入西区图书馆机房的人全都不在学校，只能等待国庆假期结束之后才能进入机房维修。这样 web 服务至少停止 6 天。此间 lug.ustc.edu.cn 的域名解析到 blog.ustc.edu.cn 上面。期间对 lug 页面的更改将来在恢复时是个麻烦事。   事故处理及解决   10 月 8 日，进入机房之后，重启进入恢复模式。   将有问题的 sudoers.d/下的文件删除了之后，重启进入正常模式，sudo 问题解决。   而为了解决 sudo 问题而重启了机器之后，将 apache 停止，nginx 重启，http 502 错误也同时解决了。   到此为止，服务器算是恢复。   尾声   将服务器放到图书馆机房开机之后，发现机器没有活动，后来又上去看了一下，发现竟然是连接的那个机柜背板的网口没有物理连接，连网卡的灯都不亮……8-O   在解决网络问题之后，将 source.list 恢复至相当于原本的内容。详细如下：   之前的源列表： deb     http://mirrors.ustc.edu.cn/debian squeeze main contrib non-free deb-src http://mirrors.ustc.edu.cn/debian squeeze main contrib non-free  deb     http://mirrors.ustc.edu.cn/debian-security ???squeeze的security源怎么写忘了 deb-src http://mirrors.ustc.edu.cn/debian-security ???  deb     http://mirrors.ustc.edu.cn/dotdeb/packages.dotdeb.org squeeze all deb-src http://mirrors.ustc.edu.cn/dotdeb/packages.dotdeb.org squeeze all  deb     http://mirrors.ustc.edu.cn/dotdeb/php53.dotdeb.org squeeze all -&gt;这两行从squeeze deb-src http://mirrors.ustc.edu.cn/dotdeb/php53.dotdeb.org squeeze all -&gt;到wheezy时，源的结构有所变动  升级之后： deb     http://mirrors.ustc.edu.cn/debian wheezy main contrib non-free deb-src http://mirrors.ustc.edu.cn/debian wheezy main contrib non-free  deb     http://mirrors.ustc.edu.cn/debian-security wheezy/updates main contrib non-free deb-src http://mirrors.ustc.edu.cn/debian-security wheezy/updates main contrib non-free  deb     http://mirrors.ustc.edu.cn/dotdeb/packages.dotdeb.org wheezy all deb-src http://mirrors.ustc.edu.cn/dotdeb/packages.dotdeb.org wheezy all  deb     http://mirrors.ustc.edu.cn/dotdeb/packages.dotdeb.org wheezy-php55 all -&gt;这两行是在“尾声”阶段加上 deb-src http://mirrors.ustc.edu.cn/dotdeb/packages.dotdeb.org wheezy-php55 all -&gt;的，目的是升级前后保持一样   之后再次 aptitude update 和 aptitude dist-upgrade。主要更新的是 nginx、apache、php 系列的包。这次 php 的配置文件对比之后发现差别不多，就用新的覆盖了。   机器重启。又 http 502 了。   查阅 nginx 的 error.log 之后（/var/log/nginx/lug.ustc.edu.cn/error.log），修改 php 配置文件/etc/php5/fpm/pool.d/www.conf，把 listen = /var/run/php5-fpm.sock 修改为 127.0.0.1:port，问题彻底解决。   至此，服务完全恢复。文内没有提到的 ftp、ssh 等服务，除了 mysqld 之外就是一直正常。   总结和教训   这次升级，之前主要害怕的问题——软件包依赖的版本要求被更新破坏、数据库数据丢失、runtime 新版本不兼容、配置文件新版本不兼容————可以说都没有出现，但是 sudo 被搞坏了之后，服务器一点点小问题都不能修复，只能停止服务。      服务器的系统升级之前先要了解运行的服务，先要 pstree 看一下运行的进程，并且查阅文档或者直接联系其他维护者确认服务器上的手工运行的重要进程、重要配置；   php、nginx 这些软件包，更新相隔时间太长的话，更新的台阶还是挺大的。软件包里带的配置文件和自己用的配置文件已经有很多不同了（不是指自己修改的部分），很多默认配置也改变了；   源不要混用，对于 debian 来说前后两个版本的源混用极易带来软件包依赖时候的问题；   修改 sudo 相关的文件，’‘/etc/sudoers’‘、’‘/etc/sudoers.d/xxx’‘的时候，必须，I repeat，必须用 visudo；   一个没有想到的影响：lug.ustc.edu.cn 在服务 down 掉的几天里，由于数据库出了问题，监控脚本不断尝试重连，发送报警短信，致使几天时间内发出了 7 万条短信，把学校短信平台的余额用完了。  ","categories": [],
"tags": [],
"url": "/wiki/user/vastuniverse/lug-upgrade-failure/",
"teaser": null
}]